"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[6672],{28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var t=n(96540);const i={},r=t.createContext(i);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:s},e.children)}},39830:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ske/installing-ske/ske-gui","title":"SKE GUI","description":"Documentation for how to install the SKE GUI","source":"@site/docs/ske/01-installing-ske/50-ske-gui.mdx","sourceDirName":"ske/01-installing-ske","slug":"/ske/installing-ske/ske-gui","permalink":"/ske/installing-ske/ske-gui","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/01-installing-ske/50-ske-gui.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"title":"SKE GUI","description":"Documentation for how to install the SKE GUI","sidebar_label":"SKE GUI"},"sidebar":"skeSidebar","previous":{"title":"SKE Health Agent","permalink":"/ske/installing-ske/ske-health-agent"},"next":{"title":"Reference","permalink":"/category/reference-1"}}');var i=n(74848),r=n(28453);const a={title:"SKE GUI",description:"Documentation for how to install the SKE GUI",sidebar_label:"SKE GUI"},o=void 0,l={},c=[{value:"Installation Steps",id:"installation-steps",level:2},{value:"Configure values",id:"configure-values",level:3},{value:"The SKE license",id:"the-ske-license",level:4},{value:"Image registry for Air-gapped Environments",id:"image-registry-for-air-gapped-environments",level:4},{value:"Token to access SKE GUI",id:"token-to-access-ske-gui",level:4},{value:"Ingress server for SKE GUI",id:"ingress-server-for-ske-gui",level:4},{value:"Deploy the SKE GUI",id:"deploy-the-ske-gui",level:3},{value:"Verify your installation",id:"verify-your-installation",level:4},{value:"Access the GUI",id:"access-the-gui",level:4}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"The SKE GUI is a easy-to-use UI for viewing and managing Kratix Promises and Resources.\nIt introduces a clear, unified view of your entire platform, giving platform engineers visibility into resources and their states at a glance."}),"\n",(0,i.jsxs)(s.p,{children:["This page provides information on how to install the SKE GUI. For documentation on how to use the GUI, please refer to ",(0,i.jsx)(s.a,{href:"/ske/guides/ske-gui",children:"SKE GUI usage guide"}),"."]}),"\n",(0,i.jsx)("div",{style:{"text-align":"center"},children:(0,i.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/8P3eA_FRt0Y?si=M24UWf8ZEjUDKrKO",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0})}),"\n",(0,i.jsx)(s.h2,{id:"installation-steps",children:"Installation Steps"}),"\n",(0,i.jsxs)(s.p,{children:["The GUI is released separately from SKE. Its releases can be found ",(0,i.jsx)(s.a,{href:"/ske/releases/ske-gui",children:"in the SKE GUI release page"})," and it can be installed using the ",(0,i.jsx)(s.a,{href:"https://github.com/syntasso/helm-charts/tree/main/ske-gui",children:"helm chart"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"To install SKE GUI using the Helm chart, start by adding the Syntasso Helm repository:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"helm repo add syntasso https://syntasso.github.io/helm-charts\nhelm repo update\n"})}),"\n",(0,i.jsx)(s.h3,{id:"configure-values",children:"Configure values"}),"\n",(0,i.jsx)(s.p,{children:"Helm can accept values via the values file. Any configuration should be placed in a values.yaml file that is then passed in to the helm install command."}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:["You can see all available configuration in the\n",(0,i.jsx)(s.a,{href:"https://github.com/syntasso/helm-charts/blob/main/ske-gui/values.yaml",children:"helm chart repository"}),"."]})}),"\n",(0,i.jsx)(s.h4,{id:"the-ske-license",children:"The SKE license"}),"\n",(0,i.jsx)(s.p,{children:"SKE GUI image is hosted in a private registry. To access the SKE GUI image, you will need to authenticate using the token you have been provided with by Syntasso."}),"\n",(0,i.jsxs)(s.p,{children:["The SKE GUI chart will, by default, use a secret named ",(0,i.jsx)(s.code,{children:"syntasso-registry"})," in the ",(0,i.jsx)(s.code,{children:"kratix-platform-system"})," namespace. This secret is created and managed by the SKE operator helm chart. If you wish to create a different image pull secret, you can run the following command:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"kubectl create secret docker-registry YOUR-SECRET-NAME \\\n  --namespace=kratix-platform-system \\\n  --docker-server=registry.syntasso.io \\\n  --docker-username=syntasso-pkg \\\n  --docker-password=<YOUR TOKEN>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The above command creates a Kubernetes Secret in namespace ",(0,i.jsx)(s.code,{children:"kratix-platform-system"}),".\nTo use this secret in SKE GUI chart, you can customise ",(0,i.jsx)(s.code,{children:"imageRegistry.imagePullSecret"})," in your values file."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"# Configuration for the image registry\n# Update these values if you are using a private image registry\nimageRegistry:\n  imagePullSecret: YOUR-SECRET-NAME\n# ...\n"})}),"\n",(0,i.jsx)(s.h4,{id:"image-registry-for-air-gapped-environments",children:"Image registry for Air-gapped Environments"}),"\n",(0,i.jsx)(s.p,{children:"You may want to manage the GUI image within your own environment either due to air-gapped requirements or other security measures."}),"\n",(0,i.jsx)(s.p,{children:"To do this, you will need to set up image mirroring and configure the SKE GUI chart to pull image\nfrom your own registry."}),"\n",(0,i.jsxs)(s.p,{children:["You must ensure that image ",(0,i.jsx)(s.code,{children:"registry.syntasso.io/syntasso/ske-gui"})," is mirrored to your own image registry and tagged according to the version."]}),"\n",(0,i.jsxs)(s.p,{children:["You can then customise ",(0,i.jsx)(s.code,{children:"imageRegistry.host"})," in your values file:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:'# Configuration for the image registry\n# Update these values if you are using a private image registry\nimageRegistry:\n  host: "my-org.registry.io"\n# ...\n'})}),"\n",(0,i.jsx)(s.h4,{id:"token-to-access-ske-gui",children:"Token to access SKE GUI"}),"\n",(0,i.jsxs)(s.p,{children:["The helm chart creates a service account in the ",(0,i.jsx)(s.code,{children:"kratix-platform-system"})," namespace with permission to access the SKE GUI. If you do not wish to create such service account, or you would like to give the service account a custom name,\nyou can customise in the values file:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:'# ...\nserviceAccount:\n  create: true # default to true; set to false to skip SA creation\n  name: "my-gui-sa" # default to `ske-gui-admin`\n# ...\n'})}),"\n",(0,i.jsx)(s.h4,{id:"ingress-server-for-ske-gui",children:"Ingress server for SKE GUI"}),"\n",(0,i.jsx)(s.p,{children:"With the SKE GUI deployed in-cluster, you can choose to expose it through an ingress server.\nThe helm chart will not set up ingress by default. You need to turn it on in the values file and provide necessary configurations\nfor the ingress server. For example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:'# ...\ningress:\n  enabled: true # Set to true to enable ingress server\n  hosts:\n    - host: ske.myplatform.io\n      paths:\n        - path: /\n          type: Prefix\n  tls:\n    - secretName: my-ske-tls-secret # an existing secret with TLS certificates\n      hosts:\n        - "ske.myplatform.io"\n# ...\n'})}),"\n",(0,i.jsx)(s.h3,{id:"deploy-the-ske-gui",children:"Deploy the SKE GUI"}),"\n",(0,i.jsx)(s.p,{children:"Next, install the SKE GUI by running:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"helm install purple-platform syntasso/ske-gui \\\n  --namespace kratix-platform-system \\\n  --values values.yaml # Optional; only use if you are configuring custom values.\n"})}),"\n",(0,i.jsx)(s.h4,{id:"verify-your-installation",children:"Verify your installation"}),"\n",(0,i.jsx)(s.p,{children:"You can check out the created SKE GUI deployment by running:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\u276f kubectl -n kratix-platform-system get deployment ske-gui\nNAME      READY   UP-TO-DATE   AVAILABLE   AGE\nske-gui   1/1     1            1           154m\n"})}),"\n",(0,i.jsx)(s.h4,{id:"access-the-gui",children:"Access the GUI"}),"\n",(0,i.jsx)(s.p,{children:"To access the GUI, you could port forward using the ske-gui service. For that, run:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"kubectl -n kratix-platform-system port-forward svc/ske-gui 8080:80\n"})}),"\n",(0,i.jsx)(s.p,{children:"If you have created an ingress server with the helm chart, you can access the GUI through your configured hosts."}),"\n",(0,i.jsx)(s.p,{children:"There will be a prompt for you to enter a token to access the GUI, if you have created a service account with the helm chart,\nyou can generate a valid token by running:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"kubectl -n kratix-platform-system create token ske-gui-admin\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Your SKE GUI installation is complete and ready to use!\nRefer to the ",(0,i.jsx)(s.a,{href:"/ske/guides/ske-gui",children:"SKE GUI usage guide"})," for instructions on how to navigate the UI."]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);