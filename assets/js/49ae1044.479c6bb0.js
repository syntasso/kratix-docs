"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[8547],{4918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ske/integrations/intro","title":"Introduction","description":"Introduction to SKE Integrations and Aspects","source":"@site/docs/ske/10-integrations/00-intro.mdx","sourceDirName":"ske/10-integrations","slug":"/ske/integrations/intro","permalink":"/ske/integrations/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/10-integrations/00-intro.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Introduction","description":"Introduction to SKE Integrations and Aspects","sidebar_label":"Introduction"},"sidebar":"skeSidebar","previous":{"title":"Health Checks for non Kubernetes Resource","permalink":"/ske/guides/healthchecks-nonk8s"},"next":{"title":"Terraform Enterprise","permalink":"/ske/integrations/tfe"}}');var r=n(4848),i=n(8453);const o={title:"Introduction",description:"Introduction to SKE Integrations and Aspects",sidebar_label:"Introduction"},a=void 0,c={},l=[];function d(e){const t={a:"a",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"On this section, you will find information about the different integrations and\nAspects available for SKE."}),"\n",(0,r.jsx)(t.p,{children:"Aspects are a set of pre-built pipeline images that you can integrate with\nyour existing Promises. These images are designed to support key use-cases of\nKratix Promises, and integrate seamlessly with different tools."}),"\n",(0,r.jsx)(t.p,{children:"The documentation is divided in the following subsections:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"./tfe",children:"Terraform Enterprise"})," describes the SKE TF State Finder\nAspect. This integrates Kratix Promises with\n",(0,r.jsx)(t.a,{href:"https://www.hashicorp.com/cloud",children:"Hashicorp Cloud Platform"})," (both Terraform Cloud and\nTerraform Enterprise)."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"./backstage/intro",children:"Backstage"})," contains documentation on how to\nconfigure your Backstage instance with the ",(0,r.jsx)(t.a,{href:"./backstage/plugins",children:"SKE plugin"}),", as well as how to\nconfigure your Promises to auto populate the Backstage catalog using the ",(0,r.jsx)(t.a,{href:"./backstage/generator",children:"SKE\nBackstage Generator"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"./port",children:"Port"})," describes how to deploy and configure the SKE Port Controller which\nkeeps Port configuration aligned with your platform APIs."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);