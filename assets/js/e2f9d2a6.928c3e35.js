"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[4479],{1294:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>x,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var r=i(5893),a=i(1151);const t={},o="kratix add container",s={id:"main/kratix-cli/reference/kratix-add-container",title:"kratix add container",description:"Adds a container to the named workflow",source:"@site/docs/main/05-kratix-cli/20-reference/02_kratix-add-container.md",sourceDirName:"main/05-kratix-cli/20-reference",slug:"/main/kratix-cli/reference/kratix-add-container",permalink:"/main/kratix-cli/reference/kratix-add-container",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/05-kratix-cli/20-reference/02_kratix-add-container.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"mainSidebar",previous:{title:"kratix add",permalink:"/main/kratix-cli/reference/kratix-add"},next:{title:"kratix build",permalink:"/main/kratix-cli/reference/kratix-build"}},d={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2},{value:"Flags",id:"flags",level:2},{value:"See Also",id:"see-also",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"kratix-add-container",children:"kratix add container"}),"\n",(0,r.jsx)(n.p,{children:"Adds a container to the named workflow"}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"Adds a container to the named workflow"}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kratix add container LIFECYCLE/ACTION/PIPELINE-NAME --image CONTAINER-IMAGE [flags]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# LIFECYCLE is one of: promise, resource\n# ACTION is one of: configure, delete\n\n# add a new resource configure container to pipeline 'instance'\nkratix add container resource/configure/instance --image syntasso/postgres-resource:v1.0.0\n\n# add a new promise configure container to pipeline 'pipeline0', with the container name 'deploy-deps'\nkratix add container promise/configure/pipeline0 --image syntasso/postgres-resource:v1.0.0 --name deploy-deps\n"})}),"\n",(0,r.jsx)(n.h2,{id:"flags",children:"Flags"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'-d, --dir string     Directory to read promise.yaml from. Default to current working directory. (default ".")\n-h, --help           help for container\n-i, --image string   The image used by this container.\n'})}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/main/kratix-cli/reference/kratix-add",children:"kratix add"}),": Command to add to Kratix resources"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>o});var r=i(7294);const a={},t=r.createContext(a);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);