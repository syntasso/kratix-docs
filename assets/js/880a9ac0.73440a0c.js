"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[3985],{3885:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"ske/kratix/configuring-ske/migrating-from-kratix","title":"Migrating from Kratix to SKE","description":"Installing Syntasso Kratix Enterprise when you have already Kratix installed","source":"@site/docs/ske/01-kratix/10-configuring-ske/30-migrating-from-kratix.mdx","sourceDirName":"ske/01-kratix/10-configuring-ske","slug":"/ske/kratix/configuring-ske/migrating-from-kratix","permalink":"/ske/kratix/configuring-ske/migrating-from-kratix","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/01-kratix/10-configuring-ske/30-migrating-from-kratix.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Migrating from Kratix to SKE","description":"Installing Syntasso Kratix Enterprise when you have already Kratix installed"},"sidebar":"skeSidebar","previous":{"title":"Setup for Air-Gapped Environments","permalink":"/ske/kratix/configuring-ske/air-gapped"},"next":{"title":"SKE Operator","permalink":"/ske/kratix/ske-operator"}}');var i=r(4848),a=r(8453);const s={title:"Migrating from Kratix to SKE",description:"Installing Syntasso Kratix Enterprise when you have already Kratix installed"},o=void 0,c={},l=[];function u(e){const t={a:"a",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"If you already have a Kratix deployment in your environment, installing the SKE Operator and a new SKE instance will\nremove the existing Kratix setup. By default, only one SKE or Kratix instance can run in a cluster at the same time.\nKubernetes leader election will delete the former deployment automatically. If that doesn't happen, you can manually\ndelete the former deployment. This will have no effect on your running Promises or Resources."}),"\n",(0,i.jsxs)(t.p,{children:["Keep in mind that ",(0,i.jsx)(t.a,{href:"/ske/kratix/ske-operator#pre-upgrade-checks",children:"pre-upgrade checks"})," won\u2019t be run, because the SKE\ninstance is created from scratch. Also, all the Kratix resources (e.g. Promises, Resources, etc.) will be reconciled."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>o});var n=r(6540);const i={},a=n.createContext(i);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);