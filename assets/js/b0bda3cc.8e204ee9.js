"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[7450],{8494:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var t=r(5893),a=r(1151),s=r(4866),i=r(5162);const o={title:"Via Helm",description:"Installing Syntasso Kratix Enterprise via Helm"},l=void 0,c={id:"ske/kratix/configuring-ske/via-helm",title:"Via Helm",description:"Installing Syntasso Kratix Enterprise via Helm",source:"@site/docs/ske/01-kratix/10-configuring-ske/11-via-helm.mdx",sourceDirName:"ske/01-kratix/10-configuring-ske",slug:"/ske/kratix/configuring-ske/via-helm",permalink:"/ske/kratix/configuring-ske/via-helm",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/01-kratix/10-configuring-ske/11-via-helm.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Via Helm",description:"Installing Syntasso Kratix Enterprise via Helm"},sidebar:"skeSidebar",previous:{title:"Via SKE CLI",permalink:"/ske/kratix/configuring-ske/via-ske-cli"},next:{title:"Via Manifests",permalink:"/ske/kratix/configuring-ske/via-manifest"}},d={},u=[{value:"Install SKE operator",id:"install-ske-operator",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Configuring your values",id:"configuring-your-values",level:3},{value:"Required configuration",id:"required-configuration",level:4},{value:"SKE version",id:"ske-version",level:4},{value:"Mirrored Image Registry",id:"mirrored-image-registry",level:4},{value:"Mirrored Release Storage",id:"mirrored-release-storage",level:4},{value:"Configuring TLS Certificates for SKE Operator and Deployment",id:"custom-certs",level:4},{value:"Installing the Operator",id:"installing-the-operator",level:3},{value:"Verify the installation",id:"verify-the-installation",level:3},{value:"Upgrades",id:"upgrades",level:2},{value:"Upgrading the Operator",id:"upgrading-the-operator",level:3},{value:"Upgrading the SKE Instance",id:"upgrading-the-ske-instance",level:3},{value:"Deletions",id:"deletions",level:2},{value:"Deleting the SKE Operator",id:"deleting-the-ske-operator",level:3},{value:"Deleting the SKE Instance",id:"deleting-the-ske-instance",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Syntasso Kratix Enterprise images are distributed through a private image registry. To\ninstall SKE on your Kubernetes cluster, follow the steps below."}),"\n",(0,t.jsx)(n.h2,{id:"install-ske-operator",children:"Install SKE operator"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Syntasso Kratix Enterprise requires cert-manager to be installed on the cluster\nunless you are configuring ",(0,t.jsx)(n.a,{href:"#custom-certs",children:"custom certificates"}),". Please\nrefer to ",(0,t.jsx)(n.a,{href:"https://cert-manager.io/",children:"its documentation for installation instructions"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"To install SKE operator using the Helm chart, start by adding the Syntasso Helm\nrepository:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add syntasso https://syntasso.github.io/helm-charts\nhelm repo update\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuring-your-values",children:"Configuring your values"}),"\n",(0,t.jsxs)(n.p,{children:["Helm can accept values via the values file. Refer to the examples\nbelow for common configuration options. Any configuration should be placed in a\n",(0,t.jsx)(n.code,{children:"values.yaml"})," file that is then passed in to the ",(0,t.jsx)(n.code,{children:"helm install"})," command."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["You can see all available configuration in the\n",(0,t.jsx)(n.a,{href:"https://github.com/syntasso/helm-charts/blob/main/ske-operator/values.yaml",children:"helm chart repository"}),"."]})}),"\n",(0,t.jsx)(n.h4,{id:"required-configuration",children:"Required configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"skeLicense: LICENSE # provided to you by Syntasso\n"})}),"\n",(0,t.jsx)(n.h4,{id:"ske-version",children:"SKE version"}),"\n",(0,t.jsxs)(n.p,{children:["The Helm chart version determines what version of the SKE Operator is installed.\nTo configure the version of SKE that the operator will install, you can use the\n",(0,t.jsx)(n.code,{children:"skeDeployment.version"})," field as shown below."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"skeDeployment:\n  version: v0.99.0 # select your desired version\n"})}),"\n",(0,t.jsx)(n.h4,{id:"mirrored-image-registry",children:"Mirrored Image Registry"}),"\n",(0,t.jsxs)(n.p,{children:["Add this configuration to your helm values file if you are following\nthe ",(0,t.jsx)(n.a,{href:"./air-gapped",children:"air-gapped setup"})," instructions for a self-hosted\nImage Registry."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'imageRegistry:\n  host: "ghcr.io"\n  imagePullSecret: "my-secret"\n  skeOperatorImage:\n    name: "syntasso/ske-operator"\n  skePlatformImage:\n    name: "syntasso/ske-platform"\n  skePlatformPipelineAdapterImage:\n    name: "syntasso/ske-platform-pipeline-adapter"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"mirrored-release-storage",children:"Mirrored Release Storage"}),"\n",(0,t.jsxs)(n.p,{children:["Add this configuration to your helm values file if you are following\nthe ",(0,t.jsx)(n.a,{href:"./air-gapped",children:"air-gapped setup"})," instructions for a self-hosted\nRelease Storage."]}),"\n",(0,t.jsxs)(s.Z,{className:"boxedTabs",groupId:"stateStore",children:[(0,t.jsx)(i.Z,{value:"bucket",label:"Mirroring from Bucket",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'releaseStorage:\n  path: "ske" # the path within the bucket that contains the SKE Versions\n  bucket:\n    name: "syntasso-enterprise-releases"\n    region: "eu-west-2"\n      secret:\n        name: "my-secret" # the secret must be created in the same namespace as the operator. It must contain the following keys: accessKeyID, secretAccessKey. If provided below it is automatically created\n        values: # optional: if you\'ve not pre-created the secret, you can instead provide the values below and the helm chart will create it for you\n          accessKeyID: "my-access"\n          secretAccessKey: "my-secret"\n'})})}),(0,t.jsx)(i.Z,{value:"git",label:"Mirroring from Git Repo",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'releaseStorage:\n  path: "ske" # the path within the Git Repo that contains the SKE Versions\n  git:\n    branch: main\n    repo: https://github.com/org/repo\n    secret:\n      name: git-creds # the secret must be created in the same namespace as the operator. It must contain the following keys: username, password. If provided below it is automatically created\n      values: # optional: if you\'ve not pre-created the secret, you can instead provide the values below and the helm chart will create it for you\n        username: "my-username" # instead of providing a secretName you can provide the username and password directly\n        password: "my-password"\n'})})})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)("summary",{children:["Suggested starter ",(0,t.jsx)(n.code,{children:"values.yaml"})," file"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"skeLicense: your-token-here\nskeDeployment:\n  version: latest\n"})})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)("summary",{children:["Example air-gapped ",(0,t.jsx)(n.code,{children:"values.yaml"})," file"]}),(0,t.jsx)(n.p,{children:"To use this example, please set all values to your specific environment"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'  skeLicense: your-token-here\n  skeDeployment:\n    version: latest\n  imageRegistry:\n    host: "ghcr.io"\n    imagePullSecret: "my-secret"\n    skeOperatorImage:\n      name: "syntasso/ske-operator"\n    skePlatformImage:\n      name: "syntasso/ske-platform"\n    skePlatformPipelineAdapterImage:\n      name: "syntasso/ske-platform-pipeline-adapter"\n  releaseStorage:\n    path: "ske"\n    git:\n      branch: main\n      repo: https://github.com/org/repo\n      secret:\n        name: git-creds # the secret must be created in the same namespace as the operator. It must contain the following keys: username, password. If provided below it is automatically created\n        values:\n          username: "my-username" # instead of providing a secretName you can provide the username and password directly\n          password: "my-password"\n'})})]}),"\n",(0,t.jsx)(n.h4,{id:"custom-certs",children:"Configuring TLS Certificates for SKE Operator and Deployment"}),"\n",(0,t.jsx)(n.p,{children:"By default, the SKE Operator and the SKE instance it deploys use cert-manager to\nmanage TLS certificates for their webhooks. This default setup requires no\nadditional configuration. However, if you prefer not to use cert-manager, you\ncan disable it and manually provide your own TLS certificates."}),"\n",(0,t.jsx)(n.p,{children:"To disable cert-manager and supply your custom certificates, update your\nconfiguration as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"global:\n  skeOperator:\n    tlsConfig:\n      certManager:\n        disabled: true\n      webhookCACert: |\n        -----BEGIN CERTIFICATE-----\n        ...\n      webhookTLSKey: |\n        -----BEGIN PRIVATE KEY-----\n        ...\n      webhookTLSCert: |\n        -----BEGIN CERTIFICATE-----\n        ...\n\nskeDeployment:\n  enabled: true\n  tlsConfig:\n    certManager:\n      disabled: true\n    webhookCACert: |\n      -----BEGIN CERTIFICATE-----\n      ...\n    webhookTLSKey: |\n      -----BEGIN PRIVATE KEY-----\n      ...\n    webhookTLSCert: |\n      -----BEGIN CERTIFICATE-----\n      ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Both the SKE Operator and SKE Deployment require valid TLS certificates for\ntheir webhook servers to securely communicate with the Kubernetes API. Below are\nthe DNS names that must be included in the TLS certificates for each component."}),"\n",(0,t.jsx)(n.p,{children:"The TLS certificate for the SKE Operator's webhook server must cover the\nfollowing DNS names:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ske-operator-webhook-service.kratix-platform-system.svc"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ske-operator-webhook-service.kratix-platform-system.svc.cluster.local"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The TLS certificate for the SKE Deployment's webhook server must cover the\nfollowing DNS names:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"kratix-platform-webhook-service.kratix-platform-system.svc"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"kratix-platform-webhook-service.kratix-platform-system.svc.cluster.local"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"installing-the-operator",children:"Installing the Operator"}),"\n",(0,t.jsx)(n.p,{children:"Next, install the SKE Operator:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install ske-operator syntasso/ske-operator \\\n  --namespace kratix-platform-system \\\n  --create-namespace \\\n  --wait \\\n  --values values.yaml # This is optional. Only use if you are configuring custom values.\n"})}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Alternative installation method"}),(0,t.jsxs)(n.p,{children:["If you prefer not to use Helm, you can install the SKE Operator by applying the\nmanifests directly. Check ",(0,t.jsx)(n.a,{href:"./via-manifest",children:"SKE Operator"})," for the instructions."]})]}),"\n",(0,t.jsx)(n.h3,{id:"verify-the-installation",children:"Verify the installation"}),"\n",(0,t.jsx)(n.p,{children:"To verify that Syntasso Kratix Enterprise has been installed successfully, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get deployments.apps --namespace kratix-platform-system\n"})}),"\n",(0,t.jsx)(n.p,{children:"You should see the following output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"NAME                                 READY   UP-TO-DATE   AVAILABLE   AGE\nkratix-platform-controller-manager   1/1     1            1           1h\nske-operator-controller-manager      1/1     1            1           1h\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can now proceed with the configuration of Kratix (i.e. registering destinations or\ninstalling promises). For that, refer to the Open-Source Kratix documentation."}),"\n",(0,t.jsx)(n.h2,{id:"upgrades",children:"Upgrades"}),"\n",(0,t.jsx)(n.h3,{id:"upgrading-the-operator",children:"Upgrading the Operator"}),"\n",(0,t.jsx)(n.p,{children:"To verify the version of the Operator installed, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm list\n"})}),"\n",(0,t.jsx)(n.p,{children:"You should see the following output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell-session",children:"NAME            NAMESPACE    [...]    CHART                   APP VERSION\nske-operator    default      [...]    ske-operator-0.8.0      v0.1.1\n"})}),"\n",(0,t.jsx)(n.p,{children:"To check the available versions of the Operator, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm search repo syntasso/ske-operator --versions\n"})}),"\n",(0,t.jsx)(n.p,{children:"To upgrade, run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm upgrade ske-operator syntasso/ske-operator \\\n  --version <CHART VERSION> --values values.yaml\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Not using Helm?",type:"info",children:(0,t.jsx)(n.p,{children:"Refer to the alternative installation method summary box above to upgrade the operator without Helm."})}),"\n",(0,t.jsx)(n.h3,{id:"upgrading-the-ske-instance",children:"Upgrading the SKE Instance"}),"\n",(0,t.jsxs)(n.p,{children:["To upgrade the version of SKE being deployed by the operator, you can edit your\nKratix instance definition and change the ",(0,t.jsx)(n.code,{children:"version"})," field to the desired\nversion."]}),"\n",(0,t.jsxs)(n.p,{children:["The SKE Operator will perform ",(0,t.jsx)(n.a,{href:"../ske-operator#pre-upgrade-checks",children:"pre-upgrade checks"}),"\nand ",(0,t.jsx)(n.a,{href:"../ske-operator#post-upgrade-checks",children:"post-upgrade checks"})," as part of the upgrade flow."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["It is not possible to skip upgrade checks when upgrading via Helm. If you would like to\nuse this feature, we recommend that you ",(0,t.jsx)(n.a,{href:"./via-ske-cli",children:"install via the SKE CLI"})," or by\n",(0,t.jsx)(n.a,{href:"./via-manifest",children:"directly applying the manifests"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"deletions",children:"Deletions"}),"\n",(0,t.jsx)(n.h3,{id:"deleting-the-ske-operator",children:"Deleting the SKE Operator"}),"\n",(0,t.jsx)(n.p,{children:"To delete the SKE operator (and any deployed SKE instance), run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm uninstall ske-operator\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deleting-the-ske-instance",children:"Deleting the SKE Instance"}),"\n",(0,t.jsx)(n.p,{children:"To delete the SKE instance, run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl -n kratix-platform-system delete kratix <INSTANCE_NAME>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5162:(e,n,r)=>{r.d(n,{Z:()=>i});r(7294);var t=r(6905);const a={tabItem:"tabItem_Ymn6"};var s=r(5893);function i(e){let{children:n,hidden:r,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(a.tabItem,i),hidden:r,children:n})}},4866:(e,n,r)=>{r.d(n,{Z:()=>j});var t=r(7294),a=r(6905),s=r(2466),i=r(6550),o=r(469),l=r(1980),c=r(7392),d=r(812);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const a=(0,i.k6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,s=h(e),[i,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,u]=m({queryString:r,groupId:a}),[g,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,d.Nk)(r);return[a,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),y=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,o.Z)((()=>{y&&l(y)}),[y]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=r(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(5893);function x(e){let{className:n,block:r,selectedValue:t,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),a=o[r].value;a!==t&&(c(n),i(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...s,className:(0,a.Z)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function k(e){let{lazy:n,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function b(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,a.Z)("tabs-container",y.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(k,{...n,...e})]})}function j(e){const n=(0,f.Z)();return(0,v.jsx)(b,{...e,children:u(e.children)},String(n))}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var t=r(7294);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);