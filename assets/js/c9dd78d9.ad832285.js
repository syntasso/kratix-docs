"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[9631],{9765:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"main/kratix-cli/reference/kratix-add-container","title":"kratix add container","description":"Adds a container to the named workflow","source":"@site/docs/main/06-kratix-cli/20-reference/02_kratix-add-container.md","sourceDirName":"main/06-kratix-cli/20-reference","slug":"/main/kratix-cli/reference/kratix-add-container","permalink":"/main/kratix-cli/reference/kratix-add-container","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/06-kratix-cli/20-reference/02_kratix-add-container.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"kratix add","permalink":"/main/kratix-cli/reference/kratix-add"},"next":{"title":"kratix build","permalink":"/main/kratix-cli/reference/kratix-build"}}');var a=r(74848),t=r(28453);const s={},o="kratix add container",d={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2},{value:"Flags",id:"flags",level:2},{value:"See Also",id:"see-also",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"kratix-add-container",children:"kratix add container"})}),"\n",(0,a.jsx)(n.p,{children:"Adds a container to the named workflow"}),"\n",(0,a.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.p,{children:"Adds a container to the named workflow"}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"kratix add container LIFECYCLE/ACTION/PIPELINE-NAME --image CONTAINER-IMAGE [flags]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"# LIFECYCLE is one of: promise, resource\n# ACTION is one of: configure, delete\n\n# add a new resource configure container to pipeline 'instance'\nkratix add container resource/configure/instance --image syntasso/postgres-resource:v1.0.0\n\n# add a new promise configure container to pipeline 'pipeline0', with the container name 'deploy-deps'\nkratix add container promise/configure/pipeline0 --image syntasso/postgres-resource:v1.0.0 --name deploy-deps\n"})}),"\n",(0,a.jsx)(n.h2,{id:"flags",children:"Flags"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'-d, --dir string        Directory to read promise.yaml from. Default to current working directory. (default ".")\n-h, --help              help for container\n-i, --image string      The image used by this container.\n-l, --language string   Language to use for the pipeline script. Currently supports Bash, Go and Python. (default "bash")\n'})}),"\n",(0,a.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/main/kratix-cli/reference/kratix-add",children:"kratix add"}),": Command to add to Kratix resources"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var i=r(96540);const a={},t=i.createContext(a);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);