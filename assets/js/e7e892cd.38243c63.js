"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[6804],{11932:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"main/guides/new-destination","title":"Adding a new Destination","description":"Guide on how to register a new Destination with Kratix","source":"@site/docs/main/04-guides/06-new-destination.mdx","sourceDirName":"main/04-guides","slug":"/main/guides/new-destination","permalink":"/main/guides/new-destination","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/04-guides/06-new-destination.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"description":"Guide on how to register a new Destination with Kratix","title":"Adding a new Destination"},"sidebar":"mainSidebar","previous":{"title":"Compound Promises","permalink":"/main/guides/compound-promises"},"next":{"title":"Surfacing health information","permalink":"/main/guides/resource-health"}}');var s=t(74848),r=t(28453);const a={description:"Guide on how to register a new Destination with Kratix",title:"Adding a new Destination"},o=void 0,l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Preparing the new cluster",id:"preparing-the-new-cluster",level:2},{value:"Registering the Destination",id:"registering-the-destination",level:2},{value:"\ud83c\udf89 Congratulations",id:"-congratulations",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"One of the most powerful features of Kratix is its ability to react when new\nDestinations are added to the platform. These Destinations can represent\nadditional Kubernetes clusters, Kubernetes namespaces, or completely different\ninfrastructure like a Terraform Cloud account or edge compute provider. By\ndefault, any Promise installed into Kratix will schedule it's Dependencies to\nnew Destinations joining the platform."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"In this section, we will register a new Kubernetes cluster as a Destination with\nKratix, and experience the Kratix multi-cluster capabilities. Before continuing,\nyou will need a Platform Kubernetes cluster running Kratix, and a second worker\nKubernetes cluster to register with the Platform. You also need at least one\nPromise installed on the Platform."}),"\n",(0,s.jsxs)(n.p,{children:["For the context of this guide, we will assume the setup from ",(0,s.jsx)(n.a,{href:"./installing-kratix-others",children:"Installing Kratix\nwith KinD"})," and that the following environment\nvariables are set:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'export PLATFORM="kind-platform"\nexport WORKER="kind-worker"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["We will also use the ",(0,s.jsx)(n.a,{href:"https://github.com/syntasso/kratix-marketplace/tree/main/jenkins",children:"Jenkins\nPromise"})," as an\nexample. Follow ",(0,s.jsx)(n.a,{href:"./installing-a-promise",children:"Installing a Promise"})," to get Jenkins\ninstalled, if needed."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell-session",children:"$ kubectl --context $PLATFORM get destinations.platform.kratix.io\nNAME       READY\nworker-1   True\n\n$ kubectl --context $PLATFORM get promises.platform.kratix.io\nNAME      STATUS      KIND      API VERSION                      VERSION\njenkins   Available   jenkins   marketplace.kratix.io/v1alpha1\n"})}),"\n",(0,s.jsx)(n.p,{children:"On the worker, you should see the Jenkins Operator running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell-session",children:"$ kubectl --context $WORKER get pods\nNAME                                READY   STATUS    RESTARTS   AGE\njenkins-operator-778d6fc487-gczpb   1/1     Running   0          1h\n"})}),"\n",(0,s.jsx)(n.p,{children:"If your setup is different, update the commands accordingly."}),"\n",(0,s.jsx)(n.h2,{id:"preparing-the-new-cluster",children:"Preparing the new cluster"}),"\n",(0,s.jsx)(n.p,{children:"You will now add the new cluster to the Platform as a Destination and watch\nKratix reconcile the system. For that, you need to first create the new\nKubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'kind create cluster --image kindest/node:v1.27.3 --name worker-2\nexport WORKER_2="kind-worker-2"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Next, install a GitOps Agent on the cluster. For local dev environments the\nquickest way to do that is to run the ",(0,s.jsx)(n.code,{children:"./scripts/install-gitops"})," script from the\nKratix root directory. If you want to do a proper installation with the GitOps\ntools of your choice, check the ",(0,s.jsx)(n.a,{href:"/category/installing-gitops-agent",children:"GitOps Agent installation\nguide"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /path/to/kratix\n./scripts/install-gitops --context ${WORKER_2} --path worker-2\n"})}),"\n",(0,s.jsx)(n.h2,{id:"registering-the-destination",children:"Registering the Destination"}),"\n",(0,s.jsxs)(n.p,{children:["You can now register your cluster with Kratix as a Destination. Create a file\ncalled ",(0,s.jsx)(n.code,{children:"worker-2.yaml"})," with the following contents:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="worker-2.yaml"',children:"apiVersion: platform.kratix.io/v1alpha1\nkind: Destination\nmetadata:\n  name: worker-2\n  labels:\n    environment: dev\nspec:\n  path: worker-2\n  stateStoreRef:\n    name: default\n    kind: BucketStateStore\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The Destination will use the pre-existing MinIO ",(0,s.jsx)(n.a,{href:"/main/reference/statestore/intro",children:"State Store"}),".\nApply the Destination document to the platform cluster:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM apply --filename worker-2.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:"Check the Destination was created:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell-session",metastring:"{4}",children:"$ kubectl --context $PLATFORM get destinations.platform.kratix.io\nNAME       READY\nworker-1   True\nworker-2   True\n"})}),"\n",(0,s.jsx)(n.p,{children:"Kratix will react to the new Destination by scheduling the Jenkins Promise\nto the the correct bucket. After a couple of minutes, you should see the Jenkins Operator\ndeployed and running on the new worker cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell-session",metastring:"{3}",children:"$ kubectl --context ${WORKER_2} get pods\nNAME                                READY   STATUS    RESTARTS   AGE\njenkins-operator-778d6fc487-c9w8f   1/1     Running   0          1h\n"})}),"\n",(0,s.jsx)(n.p,{children:"When you request a new Jenkins, the Resources will be created in one of the\navailable Destinations, by default this is selected in a non-deterministic way."}),"\n",(0,s.jsxs)(n.p,{children:["For further documentation on Destination scheduling, check the ",(0,s.jsx)(n.a,{href:"../reference/destinations/intro",children:"Destination Reference\ndocumentation"}),"."]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.mdxAdmonitionTitle,{}),(0,s.jsxs)(n.p,{children:["If you are specifically interested in making a Resource location\ndeterministic, you can check out the ",(0,s.jsx)(n.a,{href:"../reference/destinations/multidestination-management#resources",children:"scheduling\nworkloads"}),"\nreference."]})]}),"\n",(0,s.jsx)(n.h2,{id:"-congratulations",children:"\ud83c\udf89 Congratulations"}),"\n",(0,s.jsxs)(n.p,{children:["\u2705\xa0\xa0 You have created and registered a new Destination and watched the system react to it.",(0,s.jsx)("br",{}),"\n\ud83d\udc49\ud83c\udffe\xa0\xa0 Let's ",(0,s.jsx)(n.a,{href:"./compound-promises",children:"write compound Promises"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);