"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[6596],{3064:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"ske/reference/ske-cli/reference/ske-upgrade","title":"ske upgrade","description":"Upgrade to the next SKE version","source":"@site/docs/ske/03-reference/02-ske-cli/01-reference/04_ske-upgrade.md","sourceDirName":"ske/03-reference/02-ske-cli/01-reference","slug":"/ske/reference/ske-cli/reference/ske-upgrade","permalink":"/ske/reference/ske-cli/reference/ske-upgrade","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/03-reference/02-ske-cli/01-reference/04_ske-upgrade.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"skeSidebar","previous":{"title":"ske install","permalink":"/ske/reference/ske-cli/reference/ske-install"},"next":{"title":"Guides","permalink":"/category/guides-1"}}');var t=r(4848),i=r(8453);const l={},c="ske upgrade",o={},a=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2},{value:"Flags",id:"flags",level:2},{value:"Global Flags:",id:"global-flags",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ske-upgrade",children:"ske upgrade"})}),"\n",(0,t.jsx)(n.p,{children:"Upgrade to the next SKE version"}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Upgrade to the next SKE version"}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ske upgrade [--context] [--version] [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# upgrade to the next minor version\nske upgrade --context kind-platform\n\n# upgrade to a specific version\nske upgrade --context kind-platform --version v0.10.0\n"})}),"\n",(0,t.jsx)(n.h2,{id:"flags",children:"Flags"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"--dry-run            Dry run the upgrade\n-h, --help           help for upgrade\n--skip-all-checks    Skipping upgrade checks; use with caution\n--timeout duration   Timeout for the upgrade (default 5m0s)\n--version string     The version to upgrade to. Defaults to the next minor version\n"})}),"\n",(0,t.jsx)(n.h2,{id:"global-flags",children:"Global Flags:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"--context string   Name of the kubeconfig context to use\n"})}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/ske/reference/ske-cli/reference/ske",children:"ske"}),": The ske CLI"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var s=r(6540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);