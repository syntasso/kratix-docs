"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[9090],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(6540);const a={},i=s.createContext(a);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},8984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ske/integrations/backstage/backstage-development-image","title":"Backstage Development Image","description":"Setting up a development Backstage image","source":"@site/docs/ske/10-integrations/10-backstage/08-backstage-development-image.mdx","sourceDirName":"ske/10-integrations/10-backstage","slug":"/ske/integrations/backstage/backstage-development-image","permalink":"/ske/integrations/backstage/backstage-development-image","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/10-integrations/10-backstage/08-backstage-development-image.mdx","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Backstage Development Image","description":"Setting up a development Backstage image","sidebar_label":"Backstage Development Image"},"sidebar":"skeSidebar","previous":{"title":"SKE Component Promise","permalink":"/ske/integrations/backstage/generator-promise"},"next":{"title":"Port","permalink":"/ske/integrations/port"}}');var a=t(4848),i=t(8453);const o={title:"Backstage Development Image",description:"Setting up a development Backstage image",sidebar_label:"Backstage Development Image"},r="Backstage Development Image",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"What You Need to Configure",id:"what-you-need-to-configure",level:3},{value:"Installation",id:"installation",level:2},{value:"Accessing Backstage",id:"accessing-backstage",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"NOT FOR PRODUCTION"})}),(0,a.jsx)(n.p,{children:"This is a development image that is useful for getting started quickly in a development environment. It is not suitable for production use and should be used only for development and testing purposes."})]}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"backstage-development-image",children:"Backstage Development Image"})}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"This guide walks you through deploying a development Backstage instance with Syntasso Kratix Enterprise (SKE) plugins pre-installed."}),"\n",(0,a.jsx)(n.p,{children:"It is:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u2705 Ideal for local testing and development"}),"\n",(0,a.jsxs)(n.li,{children:["\ud83d\udeab ",(0,a.jsx)(n.strong,{children:"Not"})," suitable for production environments or long term use"]}),"\n",(0,a.jsx)(n.li,{children:"\u26a0\ufe0f Pre-packaged with fixed assumptions around Kubernetes and S3-compatible storage (not flexible or configurable)"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["For more advanced or production-ready customization, see the ",(0,a.jsx)(n.a,{href:"/ske/integrations/backstage/configuring-backstage",children:"Configuring Backstage"})," documentation."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"Before you begin, ensure you have:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["A running ",(0,a.jsx)(n.strong,{children:"Kubernetes cluster"})]}),"\n",(0,a.jsxs)(n.li,{children:["Access to an ",(0,a.jsx)(n.strong,{children:"S3-compatible bucket"})," (e.g., MinIO, GCS, or S3)"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"what-you-need-to-configure",children:"What You Need to Configure"}),"\n",(0,a.jsxs)(n.p,{children:["Below is an example ",(0,a.jsx)(n.code,{children:"ConfigMap"})," for Backstage that includes the necessary\nconfigurations to run with Syntasso Kratix Enterprise. This needs to be modified to suit\nyour environment:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["To modify to use your own Bucket update the ",(0,a.jsx)(n.code,{children:"endpoint"})," and ",(0,a.jsx)(n.code,{children:"bucketName"})," in\n",(0,a.jsx)(n.code,{children:"integrations.awsS3"})," and ",(0,a.jsx)(n.code,{children:"catalog.providers.awsS3"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["By default Backstage is setup to be accessible via ",(0,a.jsx)(n.code,{children:"kubectl port-forward"}),". If you plan to expose Backstage by ingress or NodePort, make sure ",(0,a.jsx)(n.code,{children:"baseUrl"})," and ",(0,a.jsx)(n.code,{children:"cors.origin"})," match your setup."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: backstage\n  namespace: kratix-platform-system\ndata:\n  config: |\n    app:\n      title: Backstage Dev Build By Syntasso\n      # OPTIONAL: If your using a different nodeport, modify the baseUrl to match the nodeport\n      # The default setting works with the Kratix quick start setup: https://docs.kratix.io/ske/installing-ske/preconfigured-install\n      baseUrl: http://localhost:31340\n    organization:\n      name: app-config\n    backend:\n      baseUrl: http://localhost:31340\n      listen:\n        port: 7007\n        host: 0.0.0.0\n      csp:\n        upgrade-insecure-requests: false\n        connect-src: ["\'self\'", "http:", "https:"]\n      cors:\n        origin: http://localhost:31340\n        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]\n        credentials: true\n      database:\n        client: better-sqlite3\n        connection: ":memory:"\n      cache:\n        store: memory\n      auth:\n        dangerouslyDisableDefaultAuthPolicy: true\n    integrations:\n      awsS3:\n          # We will show how to configure the source of these environment variables later\n        - accessKeyId: ${AWS_ACCESS_KEY_ID}\n          secretAccessKey: ${AWS_SECRET_ACCESS_KEY}\n          # OPTIONAL: Modify to match the endpoint for your S3 compatible bucket.\n          # The default setting works with the Kratix quick start setup: https://docs.kratix.io/ske/installing-ske/preconfigured-install\n          endpoint: \'http://minio.kratix-platform-system.svc.cluster.local\'\n          s3ForcePathStyle: true\n    techdocs:\n      builder: "local"\n      generator:\n        runIn: "docker"\n      publisher:\n        type: "local"\n    catalog:\n      import:\n        entityFilename: catalog-info.yaml\n        pullRequestBranchName: backstage-integration\n      rules:\n        - allow:\n            [Domain, Component, System, API, Resource, Location, Group, Template]\n      locations:\n        - type: file\n          target: ../../examples/template/template-ske.yaml\n          rules:\n            - allow: [Template]\n        - type: file\n          target: ../../examples/entities.yaml\n          rules:\n            - allow:\n                [\n                  Domain,\n                  Component,\n                  System,\n                  API,\n                  Resource,\n                  Location,\n                  Group,\n                  Template,\n                ]\n        - type: file\n          target: ../../examples/org.yaml\n          rules:\n            - allow: [User, Group]\n      providers:\n        awsS3:\n          kratix-minio:\n          # OPTIONAL: Modify to match your bucket name and configuration.\n          # The default setting works with the Kratix quickstart setup: https://docs.kratix.io/ske/installing-ske/preconfigured-install\n            bucketName: kratix\n            prefix: backstage/\n            region: us-east-1\n            schedule:\n              frequency: { seconds: 10 }\n              timeout: { seconds: 20 }\n    kubernetes:\n      serviceLocatorMethod:\n        type: multiTenant\n      clusterLocatorMethods:\n        - type: config\n          clusters:\n            - url: "https://kubernetes.default.svc.cluster.local"\n              name: platform\n              authProvider: serviceAccount\n              serviceAccountToken: ${SA_TOKEN}\n              skipTLSVerify: true\n    ske:\n      kubernetes:\n        platformName: platform\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Once you have modified the configuration, store it in a local file and create the ",(0,a.jsx)(n.code,{children:"ConfigMap"})," in your Kubernetes cluster:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f configmap.yaml\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["Once your ",(0,a.jsx)(n.code,{children:"ConfigMap"})," is ready, all thats left is to deploy Backstage with the\nprovided manifest below. The manifest can be updated to:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Reference the Bucket secret"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Any ingress modifications you may want to make, such as using as NodePort."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"ClusterRole modifications if you want to limit what Backstage can access. It\nneeds access to all Promises and all Promise APIs. By default it has\ncluster-wide access to all resources."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: backstage\n  name: backstage\n  namespace: kratix-platform-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: backstage\n  template:\n    metadata:\n      labels:\n        app: backstage\n    spec:\n      serviceAccountName: backstage\n      imagePullSecrets:\n      - name: syntasso-registry\n      containers:\n      - env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              # OPTIONAL: Modify to match the secret for access to your bucket.\n              # The default setting works with the Kratix quick start setup: https://docs.kratix.io/ske/installing-ske/preconfigured-install\n              name: minio-credentials\n              key: accessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              # OPTIONAL: Modify to match the secret for access to your bucket.\n              # The default setting works with the Kratix quick start setup: https://docs.kratix.io/ske/installing-ske/preconfigured-install\n              name: minio-credentials\n              key: secretAccessKey\n        - name: SA_TOKEN\n          valueFrom:\n            secretKeyRef:\n              # Do not edit, this secret gets created within this manifest\n              name: backstage-token\n              key: token\n        image: registry.syntasso.io/syntasso/backstage-dev-build:v0.12.0-rc49\n        imagePullPolicy: IfNotPresent\n        name: backstage\n        ports:\n        - containerPort: 7007\n          protocol: TCP\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /config\n          name: config\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - configMap:\n          defaultMode: 420\n          items:\n          - key: config\n            path: app-config.yaml\n          name: backstage\n        name: config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: backstage\n  namespace: kratix-platform-system\nspec:\n  ports:\n    - port: 7007\n      protocol: TCP\n  selector:\n    app: backstage\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: backstage\nrules:\n  # OPTIONAL: These are broad security settings, you can limit backstage permissions here.\n- apiGroups: ["*"]\n  resources: ["*"]\n  verbs: ["*"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: backstage\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: backstage\nsubjects:\n- kind: ServiceAccount\n  name: backstage\n  namespace: kratix-platform-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: backstage\n  namespace: kratix-platform-system\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: backstage-token\n  namespace: kratix-platform-system\n  annotations:\n    kubernetes.io/service-account.name: backstage\ntype: kubernetes.io/service-account-token\n'})}),"\n",(0,a.jsx)(n.p,{children:"Once modified and saved, apply the manifest to your cluster:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f backstage.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"accessing-backstage",children:"Accessing Backstage"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If using ",(0,a.jsx)(n.strong,{children:"NodePort"})," or ",(0,a.jsx)(n.strong,{children:"Ingress"}),", visit your corresponding address, e.g: ",(0,a.jsx)(n.code,{children:"http://localhost:31340"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If using ",(0,a.jsx)(n.strong,{children:"port-forwarding"}),", run the following command in your terminal:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"kubectl port-forward service/backstage -n kratix-platform-system 7007:7007\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Then navigate to:  ",(0,a.jsx)(n.code,{children:"http://localhost:7007"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"Now that Backstage is running:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Follow the ",(0,a.jsx)(n.a,{href:"https://docs.kratix.io/ske/integrations/backstage/configuring-backstage#configuring-kratix",children:"Backstage Destination"})," documentation to configure Kratix to manage the component and template configuration."]}),"\n",(0,a.jsxs)(n.li,{children:["Use and configure automatic ",(0,a.jsx)(n.a,{href:"/ske/integrations/backstage/generating-backstage-components",children:"access to your Promises in Backstage"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);