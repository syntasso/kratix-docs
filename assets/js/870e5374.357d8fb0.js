"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[4260],{2591:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"ske/quick-start","title":"Quick Start (Enterprise)","description":"Quickest way to test Syntasso Kratix Enterprise (SKE)","source":"@site/docs/ske/001-quick-start.md","sourceDirName":"ske","slug":"/ske/quick-start","permalink":"/ske/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/001-quick-start.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"Quickest way to test Syntasso Kratix Enterprise (SKE)","title":"Quick Start (Enterprise)","sidebar_label":"Quick Start (Enterprise)"},"sidebar":"skeSidebar","previous":{"title":"Introduction","permalink":"/ske/"},"next":{"title":"Introduction","permalink":"/ske/kratix/intro"}}');var a=n(4848),i=n(8453),r=n(9030);const o={description:"Quickest way to test Syntasso Kratix Enterprise (SKE)",title:"Quick Start (Enterprise)",sidebar_label:"Quick Start (Enterprise)"},l="Quick Start (Enterprise Edition)",c={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Publish a Promise",id:"publish-a-promise",level:2},{value:"Request an Instance (via Backstage)",id:"request-an-instance-via-backstage",level:2},{value:"Update an Instance (via Backstage)",id:"update-an-instance-via-backstage",level:3},{value:"Manage a Fleet",id:"manage-a-fleet",level:2},{value:"Business Processes, Built-in",id:"business-processes-built-in",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsxs)(s.p,{children:["In order to run through this page you need Syntasso Kratix Enterprise license ",(0,a.jsx)(s.strong,{children:"token"}),".\nDon't have one? ",(0,a.jsx)(s.a,{href:"https://www.syntasso.io/pricing",children:"Request your free trial token here"})]})}),"\n",(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"quick-start-enterprise-edition",children:"Quick Start (Enterprise Edition)"})}),"\n",(0,a.jsxs)(s.p,{children:["This guide gives you a hands-on introduction to ",(0,a.jsx)(s.a,{href:"https://syntasso.io/pricing",children:(0,a.jsx)(s.strong,{children:"Syntasso Kratix\nEnterprise"})})," (SKE). In less than 30 minutes  and with\nminimal dependencies, you will see how Kratix Promises deliver self-service  to\nenable quick time to value while also enabling fleet management to maintain that\nspeed and efficiency."]}),"\n",(0,a.jsx)(s.p,{children:"Platforms need to provide a wide range of services to their users. Some\nexamples include databases (i.e. individual infrastructure), developer\nenvironments  (i.e. paved roads), CI/CD pipelines (i.e. any internal\ncapability-as-a-Service)."}),"\n",(0,a.jsxs)(s.p,{children:["In this quick start you will learn about a Kratix Promise which provides the\nstructure  between platform ",(0,a.jsx)(s.em,{children:"producers"})," and ",(0,a.jsx)(s.em,{children:"consumers"}),". Platform producers are\noften operators or  other subject matter experts who need to contribute and\nmanage their services while  consumers are often application developers, data\nscientists, managers and others who  need to depend on and use the provided\nservices. You will also see how SKE reduces the time to integrate with portals like\nBackstage so that consumers can request services without needing to write\nYAML or understand the underlying Kubernetes resources. And once integrated, SKE keeps\nplatform engineer costs low through a managed integration as both SKE and the portals\nrelease updates."]}),"\n",(0,a.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(s.p,{children:"To follow along, you'll need access to a Kubernetes cluster."}),"\n",(0,a.jsx)(s.p,{children:"We recommend using a clean, disposable cluster for this quick start and you can\nuse any  Kubernetes distribution including:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Managed services like GKE, EKS, or AKS"}),"\n",(0,a.jsx)(s.li,{children:"On-premises clusters like OpenShift, Rancher, or vanilla Kubernetes"}),"\n",(0,a.jsx)(s.li,{children:"Local environments like KinD or Minikube"}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"caution",children:(0,a.jsxs)(s.p,{children:["The quick start installs ",(0,a.jsx)(s.code,{children:"cert-manager"})," and ",(0,a.jsx)(s.code,{children:"Flux"})," for you. If either is already\npresent on the cluster, the installation will fail. Ensure they are not installed\nbefore continuing."]})}),"\n",(0,a.jsxs)(s.p,{children:["If you're working in a shared or production-like environment, see the full\n",(0,a.jsx)(s.a,{href:"/ske/kratix/configuring-ske/intro",children:"installation guide"})," to avoid configuration\nconflicts. The  quick start deploys a local, insecure MinIO instance\u2014intended\nonly for local development."]}),"\n",(0,a.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(s.p,{children:"SKE extends the Kubernetes API by introducing custom resources and controllers."}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:["While SKE runs on Kubernetes, it orchestrates resources both in and outside of Kubernetes.",(0,a.jsx)(s.br,{}),"\n","There are examples of SKE orchestrating SaaS products, edge compute, IoT, and even",(0,a.jsx)(s.br,{}),"\n","mainframes."]})}),"\n",(0,a.jsx)(s.p,{children:"SKE comes with easy integration to existing portal solutions such as Port and\nBackstage. To highlight this, a pre-configured Backstage instance is included in\nthe quick start."}),"\n",(0,a.jsx)(s.p,{children:"Before installing, create the namespace and secret so your cluster can access the private container registry:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl create namespace kratix-platform-system\n\nkubectl create secret docker-registry syntasso-registry \\\n  --namespace=kratix-platform-system \\\n  --docker-server=registry.syntasso.io \\\n  --docker-username=syntasso-pkg \\\n  --docker-password=<YOUR TOKEN>\n"})}),"\n",(0,a.jsx)(s.p,{children:"Then apply the SKE installer manifest:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f http://s3.eu-west-2.amazonaws.com/syntasso-enterprise-releases/ske/v0.31.0/dev-only/ske-quick-start-installer.yaml\n"})}),"\n",(0,a.jsx)(s.p,{children:"This will deploy a job that installs SKE and its dependencies. To follow along\nwith the installation process, you can watch the logs of the installer job:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl logs -f job/ske-quick-start-installer -n kratix-platform-system\n"})}),"\n",(0,a.jsxs)(s.p,{children:["In less than 5 minutes all dependencies will be installed and the platform controller",(0,a.jsx)(s.br,{}),"\n","should be running:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get pods -n kratix-platform-system\n"})}),"\n",(0,a.jsxs)(s.admonition,{title:"OpenShift",type:"note",children:[(0,a.jsx)(s.p,{children:"Flux requires additional configuration when running on OpenShift. Apply the\nSecurity Context Constraint from Flux and patch each controller with the\nfollowing JSON:"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:'kubectl apply -f https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/openshift/scc.yaml\n\ncat <<\'EOF\' > flux-patch.json\n[\n  {\n    "op": "remove",\n    "path": "/spec/template/spec/securityContext"\n  },\n  {\n    "op": "replace",\n    "path": "/spec/template/spec/containers/0/securityContext",\n    "value": {\n      "runAsUser": 65534\n    }\n  }\n]\nEOF\n\nfor d in source-controller kustomize-controller helm-controller notification-controller; do\n  kubectl patch deployment $d -n flux-system --type=json --patch "$(cat flux-patch.json)"\ndone\n'})})]}),"\n",(0,a.jsx)(s.p,{children:"And the output will be similar to:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"NAME                                                       READY   STATUS      RESTARTS   AGE\nbackstage-84c6c6bc97-x9vp4                                 1/1     Running     0          48s\nbackstage-controller-controller-manager-59f5dc86fd-dd8d7   1/1     Running     0          88s\nkratix-platform-controller-manager-57865f86c5-lp8bm        1/1     Running     0          88s\nminio-6c6bdc6456-hkw86                                     1/1     Running     0          88s\nske-quick-start-installer-fmfbq                            0/1     Completed   0          113s\n\n"})}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)("strong",{children:"Having issues? Here's how to debug the installer Job"})}),(0,a.jsxs)(s.p,{children:["If the Kratix ",(0,a.jsx)(s.code,{children:"quick-start"})," Job fails, here are some steps to help troubleshoot the issue:"]}),(0,a.jsx)(s.p,{children:"\ud83d\udccb 1. Check the Job status"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get jobs -n kratix-platform-system\nkubectl describe job ske-quick-start-installer -n kratix-platform-system\n"})}),(0,a.jsx)(s.p,{children:"\ud83d\udd0d 2. View logs from the installer pod"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl logs -f job/ske-quick-start-installer -n kratix-platform-system\n"})}),(0,a.jsx)(s.p,{children:"This will show exactly which step failed (e.g. cert-manager install, Kratix controller readiness, config sync, Backstage)."}),(0,a.jsx)(s.p,{children:"\ud83e\uddea 3. Check pod readiness in system namespaces"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get pods -n cert-manager\nkubectl get pods -n kratix-platform-system\nkubectl get pods -n flux-system\n"})}),(0,a.jsx)(s.p,{children:"\ud83d\udce6 4. Common causes"}),(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Slow image pulls or cluster resource limits"}),"\n",(0,a.jsx)(s.li,{children:"Webhook service not ready before config is applied"}),"\n",(0,a.jsx)(s.li,{children:"Missing cluster DNS or RBAC issues in custom environments"}),"\n"]}),(0,a.jsx)(s.p,{children:"\ud83e\uddf0 5. Retry the job manually (if needed)"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl delete job ske-quick-start-installer -n kratix-platform-system\nkubectl apply -f ske-quick-start-installer.yaml\n"})})]}),"\n",(0,a.jsx)(s.h2,{id:"publish-a-promise",children:"Publish a Promise"}),"\n",(0,a.jsxs)(s.p,{children:["Now that SKE is installed, the platform is empty. To offer services, you publish Promises.",(0,a.jsx)(s.br,{}),"\n","This is traditionally done by platform operators or contributors."]}),"\n",(0,a.jsxs)(s.p,{children:["While Promises can be custom written, there is also a community ",(0,a.jsx)(s.a,{href:"/marketplace",children:"marketplace"})," to get",(0,a.jsx)(s.br,{}),"\n","started. Start by publishing a simple marketplace PostgreSQL Promise to your platform:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/syntasso/promise-postgresql/refs/heads/main/promise.yaml\n"})}),"\n",(0,a.jsx)(s.p,{children:"Once published, a new custom resource type becomes available in your cluster:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get crds -l kratix.io/promise-name\n"})}),"\n",(0,a.jsxs)(s.p,{children:["This shows that the new API is available which can be used via all the ",(0,a.jsx)(s.code,{children:"kubectl"})," commands\nsuch as get, create, or delete. This means consumers can now self-serve PostgreSQL\ninstances providing only the values your API requires."]}),"\n",(0,a.jsx)(s.p,{children:"And SKE also takes care of publishing all the required information into Backstage for\nyou, meaning you don't need to manually configure the Backstage catalog. Let's\ntake a look at the Promise we just published:"}),"\n",(0,a.jsx)(s.p,{children:"In a separate terminal, open a port-forward so you can access the Backstage UI:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl port-forward svc/backstage 7007:7007 -n kratix-platform-system\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Then navigate to ",(0,a.jsx)(s.a,{href:"http://localhost:7007",children:"http://localhost:7007"})," in your browser.\nAfter a few moments you should see the Backstage UI with the Postgres Promise Component listed in\nthe catalog (you may need to refresh the page):"]}),"\n",(0,a.jsx)("figure",{className:"diagram",children:(0,a.jsx)("img",{className:"medium",src:(0,r.Ay)("/img/ske/01-quick-start-catalog.png"),alt:"The App Promise"})}),"\n",(0,a.jsxs)(s.p,{children:["If you select ",(0,a.jsx)(s.code,{children:"Create"})," in the top right, you will then be able to see that\nthe PostgreSQL template is available to be chosen."]}),"\n",(0,a.jsx)("figure",{className:"diagram",children:(0,a.jsx)("img",{className:"medium",src:(0,r.Ay)("/img/ske/02-quick-start-templates.png"),alt:"The App Promise"})}),"\n",(0,a.jsx)(s.h2,{id:"request-an-instance-via-backstage",children:"Request an Instance (via Backstage)"}),"\n",(0,a.jsxs)(s.p,{children:["With the Promise published, consumers can use Backstage portal to request\nservices. Fill in a request for a PostgreSQL instance using the PostgreSQL\nPromise template. For simplicity let's use the ",(0,a.jsx)(s.code,{children:"default"})," namespace and leave all\nthe fields set to their default values. Once the request is submitted, SKE will\nreconcile the request and create the instance in the cluster."]}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsx)(s.p,{children:"SKE supports multiple ways to interact with the Platform. Whether you prefer\nusing kubectl, one or more Backstage instances, or a custom UI, SKE allows all\nof them to work seamlessly and even in parallel so you and your users can choose the\nright tool for the job."})}),"\n",(0,a.jsx)(s.p,{children:"Once the instance is created, you can see the new resource in Backstage by\nnavigating back to the homepage:"}),"\n",(0,a.jsxs)("figure",{className:"diagram",children:[(0,a.jsx)("img",{className:"medium",src:(0,r.Ay)("/img/ske/03-quick-start-instance.png"),alt:"The App Promise"}),(0,a.jsx)("figcaption",{})]}),"\n",(0,a.jsx)(s.p,{children:"Furthermore, when you click through to your requests there are all relevant details for users:"}),"\n",(0,a.jsxs)("figure",{className:"diagram",children:[(0,a.jsx)("img",{className:"medium",src:(0,r.Ay)("/img/ske/04-quick-start-instance-description.png"),alt:"The App Promise"}),(0,a.jsx)("figcaption",{})]}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)("strong",{children:" Whats happening in the backend?"})}),(0,a.jsxs)(s.p,{children:["When a Promise is published, it exposes a new custom resource type in the\nKubernetes API. This resource type is used to request instances of the\nservice. When a template is filled out and submitted, it creates a new\nresource of that type. In this case, the resource is a ",(0,a.jsx)(s.code,{children:"postgresql"})," resource\ntype."]}),(0,a.jsx)(s.p,{children:"Let\u2019s inspect this new API:"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"kubectl explain postgresqls.marketplace.kratix.io.spec\n"})}),(0,a.jsxs)(s.p,{children:["This command provides a detailed description of the ",(0,a.jsx)(s.code,{children:"postgresql"})," resource\ntype and what fields are available in the ",(0,a.jsx)(s.code,{children:"spec"})," section. In this example,\nall of the fields are optional since the platform can provide sensible\ndefaults. Reducing required fields allows consumers to focus on what matters\nmost to them and grow into more specific configuration as and when they need\nit. You can see all these fields are mirrored in the Backstage template."]}),(0,a.jsxs)(s.p,{children:["Once a request is submitted, either via Backstage or ",(0,a.jsx)(s.code,{children:"kubectl"}),", it will exist\nin the cluster as a ",(0,a.jsx)(s.code,{children:"postgresql.marketplace.kratix.io"})," resource. You can\nview the request by running:"]}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get postgresql.marketplace.kratix.io <name> --watch\n"})}),(0,a.jsx)(s.p,{children:"You should see the following output:"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"NAME      STATUS\n<name>    1Gi instance v16 deployed successfully without backups\n"})}),(0,a.jsx)(s.p,{children:"For further inspection of all the fields, you can run:"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get postgresqls.marketplace.kratix.io <name> -o yaml\n"})})]}),"\n",(0,a.jsxs)(s.p,{children:["You can see in the ",(0,a.jsx)(s.code,{children:"status"})," section in the ",(0,a.jsx)(s.code,{children:"Overview"})," tab that the request is\nready and information on how to access the PostgreSQL instance is provided.\nThe reason SKE works across any number of interfaces is because it is a platform backend\nthat stores state in Kubernetes. This keeps Backstage and any other graphical interface\nfocused on the display and allows the business logic to be centralised in the platform.\nTo see this in action, use the following command to view the same status information via\nthe ",(0,a.jsx)(s.code,{children:"kubectl"})," command line:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get postgresqls.marketplace.kratix.io <name> -o yaml\n"})}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsx)(s.p,{children:"While Kratix is itself a backend, SKE brings in the automatic mirroring of platform\nstate to portals such as Backstage and manages the headache of regular updates to how\nyour portal and SKE integrate. This enables you to keep your Portal logic minimal and\nfocused on the user experience, while SKE handles the heavy lifting of managing the\nresource lifecycle."})}),"\n",(0,a.jsx)(s.p,{children:"Behind the scenes, Kratix is running a set of Workflows defined by the platform\nproducer in the Promise. These Workflows incorporate all of the business rules\nand required actions before scheduling any declarative workloads to the correct\nGitOps repository. In this case the workflow for the PostgreSQL Promise was\nquite simple, it took the users input and used this to generate the required\nKubernetes resources to create the PostgreSQL instance. Those resources were\nthen scheduled to the Platform via the GitOps repo (in this simple scenario, an\nin-cluster s3 compatible bucket using MinIO)."}),"\n",(0,a.jsx)(s.p,{children:"You can see the workflows that were run by inspecting the Pods:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get pods -l kratix.io/promise-name=postgresql\n"})}),"\n",(0,a.jsx)(s.p,{children:"You should see the following:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"NAME                                                    READY   STATUS      RESTARTS   AGE\nkratix-postgresql-example-request-backstage-gen-9eb5e-v6zlg        0/1     Completed   0          5m21s\nkratix-postgresql-example-request-instance-configure-d8fcf-5kq7g   0/1     Completed   0          5m21s\n"})}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"example-request-instance-configure"})," Pod is the workflow thats specified in\nthe Promise and is doing all of the heavy lifting of generating the Kubernetes\nresources based on the users input. The ",(0,a.jsx)(s.code,{children:"-example-request-backstage"})," Pod is\ncreated by SKE and is used to generate the Backstage resource that is displayed\nin the Backstage UI."]}),"\n",(0,a.jsx)(s.h3,{id:"update-an-instance-via-backstage",children:"Update an Instance (via Backstage)"}),"\n",(0,a.jsxs)(s.p,{children:["SKE isn't a fire and forget solution; it handles the full lifecycle, including\nall day 2 operations.  For example, if your requirements change, it's easy to\nadapt. As a consumer,  you simply update the request and re-submit. Promises are\ndesigned  to safely handle updates without requiring custom scripts or manual\nintervention. Open the resource in Backstage, navigate to the ",(0,a.jsx)(s.code,{children:"Manage"})," tab, edit\nthe configuration, and submit. In this case let's enabled Backups by ticking the\n",(0,a.jsx)(s.code,{children:"BackupEnabled"})," box. The update will be automatically applied and reconciled."]}),"\n",(0,a.jsxs)("figure",{className:"diagram",children:[(0,a.jsx)("img",{className:"medium",src:(0,r.Ay)("/img/ske/05-quick-start-instance-update.png"),alt:"The App Promise"}),(0,a.jsx)("figcaption",{})]}),"\n",(0,a.jsx)(s.p,{children:"You\u2019ll see a new CronJob show up in the cluster because the request was updated\nto enable backups:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get cronjob --watch\n"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"NAME                                                SCHEDULE      TIMEZONE   SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nlogical-backup-acme-org-team-a-example-postgresql   30 00 * * *   <none>     False     0        <none>          30s\n"})}),"\n",(0,a.jsx)(s.h2,{id:"manage-a-fleet",children:"Manage a Fleet"}),"\n",(0,a.jsx)(s.p,{children:"It's not just consumers who grow and change. A platform with 10s, 100s or even\n1000s of consumers needs to also manage changing requirements or even new security\nrisks."}),"\n",(0,a.jsx)(s.p,{children:"In order to show how SKE can manage a fleet of instances, use the command provided below\nto create a couple more PostgreSQL instances:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/syntasso/promise-postgresql/refs/heads/main/multiple-resource-requests.yaml\n"})}),"\n",(0,a.jsx)(s.p,{children:"This will create 2 more instances. You can view them in Backstage, as well as in\ncluster as shown below:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get pods -l application=spilo --watch\n"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"NAME                                           READY   STATUS    RESTARTS   AGE\nacme-org-team-a-example-request-postgresql-0   1/1     Running   0          2m\nacme-org-team-b-dev-postgresql-0               1/1     Running   0          5s\nacme-org-team-c-testing-postgresql-0           1/1     Running   0          5s\n"})}),"\n",(0,a.jsx)(s.p,{children:"Now, let's say you need to patch a CVE in the PostgreSQL images, updating the\nconfiguration, or even just expanding your offering to include that cloud instance\noption."}),"\n",(0,a.jsx)(s.p,{children:"You can do this by updating the Promise itself. In this case, let's update the Promise\nto increase the default replica count of the PostgreSQL instances from 1 to 3. As with\nany service, updating this default will mean any newly created PostgreSQL instances will\ncreate 3 replicas. But since Kratix is built for fleet management, this update will also\nevaluate and then update all existing instances."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/syntasso/promise-postgresql/refs/heads/main/promise-ha.yaml\n"})}),"\n",(0,a.jsx)(s.p,{children:"You can observe the roll out in action with the following command (it may take a\nminute or two):"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"kubectl get pods -l application=spilo --watch\n"})}),"\n",(0,a.jsx)(s.p,{children:"This will show a number of pods being created and completed:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"NAME                                                       READY   STATUS      RESTARTS   AGE\nacme-org-team-a-example-request-postgresql-0               1/1     Running     0          3m\nacme-org-team-a-example-request-postgresql-1               1/1     Running     0          14s\nacme-org-team-a-example-request-postgresql-2               1/1     Running     0          9s\nacme-org-team-b-dev-postgresql-0                           1/1     Running     0          1m\nacme-org-team-b-dev-postgresql-1                           1/1     Running     0          14s\nacme-org-team-b-dev-postgresql-2                           1/1     Running     0          10s\nacme-org-team-c-testing-postgresql-0                       1/1     Running     0          1m\nacme-org-team-c-testing-postgresql-1                       1/1     Running     0          14s\nacme-org-team-c-testing-postgresql-2                       1/1     Running     0          9s\n"})}),"\n",(0,a.jsx)(s.p,{children:"SKE will roll out the update to every instance that uses the Promise continuing to\nfollow any of the business rules defined in the Workflows without having to ask each\nconsumer to run a CI/CD pipeline, make PRs into a number of different repositories or\ntake any other action one-by-one."}),"\n",(0,a.jsx)(s.p,{children:"Since Promises create and manage services in a consistent and repeatable way, platform\ncontributors are provided full control and visibility without disrupting any consumers."}),"\n",(0,a.jsx)(s.h2,{id:"business-processes-built-in",children:"Business Processes, Built-in"}),"\n",(0,a.jsx)(s.p,{children:"While this quick-start focuses on how to use marketplace Promises, this is\nreally only the beginning."}),"\n",(0,a.jsx)(s.p,{children:"Promises become truly powerful once they encode your internal company standards\nsuch as compliance checks, cost controls, or governance policies inside the\nWorkflows. Since these Workflows are reconciled on each change as well as a\nregular basis, each request automatically includes the rules your organisation\ncares about."}),"\n",(0,a.jsxs)(s.p,{children:["Self-service doesn\u2019t mean a loss of control. With Kratix, it means speed ",(0,a.jsx)(s.strong,{children:"and"}),"\nsafety."]}),"\n",(0,a.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(s.p,{children:"In this quick start, you:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Installed Syntasso Kratix Enterprise"}),"\n",(0,a.jsx)(s.li,{children:"Published a Marketplace Promise"}),"\n",(0,a.jsx)(s.li,{children:"Used Backstage to create and update a PostgreSQL instance"}),"\n",(0,a.jsx)(s.li,{children:"Updated a fleet of instances with a single Promise update"}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"If you're ready to go deeper:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"/workshop/intro",children:"Try writing your own Promise in the Kratix Workshop \u2192"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"/ske",children:"Explore Syntasso Kratix Enterprise \u2192"})}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["For information about our Enterprise Promise marketplace, ",(0,a.jsx)(s.a,{href:"https://syntasso.io/#contact-us",children:"book\na call with us"}),"."]}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Want to see how this fits your platform strategy?"})," ",(0,a.jsx)(s.a,{href:"https://syntasso.io/#contact-us",children:"Book a call with us \u2192"})]})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(6540);const a={},i=t.createContext(a);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);