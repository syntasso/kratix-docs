"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[8440],{4952:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"main/quick-start","title":"Quick Start","description":"Quickest way to test Kratix","source":"@site/docs/main/01-quick-start.md","sourceDirName":"main","slug":"/main/quick-start","permalink":"/main/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/01-quick-start.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"Quickest way to test Kratix","title":"Quick Start","sidebar_label":"Quick Start"},"sidebar":"mainSidebar","next":{"title":"Introduction","permalink":"/"}}');var a=s(4848),i=s(8453);const r={description:"Quickest way to test Kratix",title:"Quick Start",sidebar_label:"Quick Start"},o="Quick Start",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Publish a Promise",id:"publish-a-promise",level:2},{value:"Request an Instance",id:"request-an-instance",level:3},{value:"Update an Instance",id:"update-an-instance",level:3},{value:"Manage a Fleet",id:"manage-a-fleet",level:2},{value:"Business Processes, Built-in",id:"business-processes-built-in",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,a.jsx)(n.p,{children:"This guide gives you a hands-on introduction to Kratix. In less than 30 minutes\nand with minimal dependencies you will see how Kratix Promises deliver self-service\nto enable quick time to value while also enabling fleet management to maintain that\nspeed and efficiency."}),"\n",(0,a.jsx)(n.p,{children:"Platforms need to provide a wide range of services to their users. Some\nexamples include databases (i.e. individual infrastructure), developer environments\n(i.e. paved roads), CI/CD pipelines (i.e. any internal capability-as-a-Service)."}),"\n",(0,a.jsxs)(n.p,{children:["In this quick-start you will learn about a Kratix Promise which provides the structure\nbetween platform ",(0,a.jsx)(n.em,{children:"producers"})," and ",(0,a.jsx)(n.em,{children:"consumers"}),". Platform producers are often operators or\nother subject matter experts who need to contribute and manage their services while\nconsumers are often application developers, data scientists, managers and others who\nneed to depend on and use the provided services."]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"To follow along, you'll need access to a Kubernetes cluster."}),"\n",(0,a.jsx)(n.p,{children:"We recommend using a clean, disposable cluster for this quick start and you can use any\nKubernetes distribution including:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Managed services like GKE, EKS, or AKS"}),"\n",(0,a.jsx)(n.li,{children:"On-premises clusters like OpenShift, Rancher, or vanilla Kubernetes"}),"\n",(0,a.jsx)(n.li,{children:"Local environments like KinD or Minikube"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["If you're working in a shared or production-like environment, see the full\n",(0,a.jsx)(n.a,{href:"/category/installing-kratix",children:"installation guide"})," to avoid configuration conflicts. The\nquick start deploys a local, insecure MinIO instance\u2014intended only for local development."]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.p,{children:"Kratix extends the Kubernetes API by introducing custom resources and controllers."}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"While Kratix runs on Kubernetes, it orchestrates resources both in and outside of Kubernetes.\nThere are examples of Kratix orchestrating SaaS products, edge compute, IoT, and even\nmainframes."})}),"\n",(0,a.jsx)(n.p,{children:"While production installations can be managed more closely, below is an all-in-one\nquick-start that uses a single job to install Kratix with sensible defaults."}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"What gets installed?"}),(0,a.jsx)(n.p,{children:"The install manifest does the following:"}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Installs ",(0,a.jsx)(n.a,{href:"https://cert-manager.io/",children:(0,a.jsx)(n.strong,{children:"cert-manager"})})," to manage TLS certificates for\nKratix webhooks"]}),"\n",(0,a.jsxs)(n.li,{children:["Deploys the ",(0,a.jsx)(n.a,{href:"https://docs.kratix.io/main/learn-more/kratix-resources",children:(0,a.jsx)(n.strong,{children:"Kratix API server and controllers"})}),"\nin the ",(0,a.jsx)(n.code,{children:"kratix-system"})," namespace"]}),"\n",(0,a.jsxs)(n.li,{children:["Deploys ",(0,a.jsx)(n.a,{href:"https://min.io/",children:(0,a.jsx)(n.strong,{children:"MinIO"})}),", a local S3-compatible bucket for storing\ndeclarative workloads"]}),"\n",(0,a.jsxs)(n.li,{children:["Installs and configures ",(0,a.jsx)(n.a,{href:"https://fluxcd.io/",children:(0,a.jsx)(n.strong,{children:"Flux"})})," to apply changes from the\nMinIO bucket via GitOps"]}),"\n",(0,a.jsxs)(n.li,{children:["Registers your Kubernetes cluster as a ",(0,a.jsx)(n.a,{href:"https://docs.kratix.io/main/reference/destinations/intro",children:(0,a.jsx)(n.strong,{children:"Destination"})}),"\nso Kratix can schedule workloads to it"]}),"\n"]})]}),"\n",(0,a.jsx)(n.p,{children:"Install Kratix:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://github.com/syntasso/kratix/releases/download/latest/kratix-quick-start-installer.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will deploy a job that installs Kratix and its dependencies. To follow along\nwith the installation process, you can watch the logs of the installer job:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl logs -f job/kratix-quick-start-installer -n kratix-platform-system\n"})}),"\n",(0,a.jsx)(n.p,{children:"In less than 5 minutes all dependencies will be installed and the platform controller\nshould be running:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -n kratix-platform-system\n"})}),"\n",(0,a.jsx)(n.p,{children:"And the output will be similar to:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NAME                                        READY   STATUS    RESTARTS   AGE\nkratix-platform-controller-manager          1/1     Running   0          2m\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)("strong",{children:"Having issues? Here's how to debug the installer Job"})}),(0,a.jsxs)(n.p,{children:["If the Kratix ",(0,a.jsx)(n.code,{children:"quick-start"})," Job fails, here are some steps to help troubleshoot the issue:"]}),(0,a.jsx)(n.p,{children:"\ud83d\udccb 1. Check the Job status"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get jobs\nkubectl describe job kratix-quick-start-installer\n"})}),(0,a.jsxs)(n.p,{children:["Look for ",(0,a.jsx)(n.code,{children:"failed"})," conditions or pod-level errors."]}),(0,a.jsx)(n.p,{children:"\ud83d\udd0d 2. View logs from the installer pod"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl logs -f job/kratix-quick-start-installer\n"})}),(0,a.jsx)(n.p,{children:"This will show exactly which step failed (e.g. cert-manager install, Kratix controller readiness, config sync)."}),(0,a.jsx)(n.p,{children:"\ud83e\uddea 3. Check pod readiness in system namespaces"}),(0,a.jsx)(n.p,{children:"Sometimes pods take longer to pull images or start up, especially in cold or constrained environments. Check system namespaces:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -n cert-manager\nkubectl get pods -n kratix-platform-system\nkubectl get pods -n flux-system\n"})}),(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"kubectl describe"})," on any pods stuck in ",(0,a.jsx)(n.code,{children:"Pending"})," or ",(0,a.jsx)(n.code,{children:"CrashLoopBackOff"})," for more detail."]}),(0,a.jsx)(n.p,{children:"\ud83d\udce6 4. Common causes"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Slow image pulls or cluster resource limits"}),"\n",(0,a.jsx)(n.li,{children:"Webhook service not ready before config is applied"}),"\n",(0,a.jsx)(n.li,{children:"Missing cluster DNS or RBAC issues in custom environments"}),"\n"]}),(0,a.jsx)(n.p,{children:"\ud83e\uddf0 5. Retry the job manually (if needed)"}),(0,a.jsx)(n.p,{children:"If you'd like to re-run the installer Job:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl delete job kratix-quick-start-installer\nkubectl apply -f kratix-quick-start-installer.yaml\n"})})]}),"\n",(0,a.jsx)(n.h2,{id:"publish-a-promise",children:"Publish a Promise"}),"\n",(0,a.jsx)(n.p,{children:"Right now, the platform is empty. To offer services, you publish Promises. This is\ntraditionally done by platform operators or contributors."}),"\n",(0,a.jsxs)(n.p,{children:["While Promises can be custom written, there is also a community ",(0,a.jsx)(n.a,{href:"/marketplace",children:"marketplace"})," to get\nstarted. Start by publishing a simple marketplace PostgreSQL Promise to your platform:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/syntasso/promise-postgresql/refs/heads/main/promise.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once published, a new custom resource type becomes available in your cluster:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get crds -l kratix.io/promise-name\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This shows that the new API is available which can be used via all the ",(0,a.jsx)(n.code,{children:"kubectl"})," commands\nsuch as get, create, or delete. This means consumers can now self-serve PostgreSQL\ninstances providing only the values your API requires."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"Don't want your consumers managing tabs vs spaces in YAML? All the portals on the market\nwork with Kratix. Prefer a portal with faster time to delivery lower overhead? Syntasso\nKratix Enterprise (SKE) makes integrations with portals simple and production-ready."}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://syntasso.io/pricing",children:"Learn more \u2192"})})]}),"\n",(0,a.jsx)(n.h3,{id:"request-an-instance",children:"Request an Instance"}),"\n",(0,a.jsx)(n.p,{children:"Now that a Promise is available, the platform consumers (often app developer) can\nself-serve what they need when they need it using the interface that the platform\ndefines."}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s look at what the Promise API exposes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kubectl explain postgresqls.marketplace.kratix.io.spec\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This command provides a detailed description of the ",(0,a.jsx)(n.code,{children:"postgresql"})," resource type and\nwhat fields are available in the ",(0,a.jsx)(n.code,{children:"spec"})," section. In this example, all of the fields are\noptional since the platform can provide sensible defaults. Reducing required fields\nallows consumers to focus on what matters most to them and grow into more specific\nconfiguration as and when they need it."]}),"\n",(0,a.jsx)(n.p,{children:"Picking a few key fields, we can apply a simple PostgreSQL request:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat << EOF | kubectl apply -f -\napiVersion: marketplace.kratix.io/v1alpha2\nkind: postgresql\nmetadata:\n  name: example\n  namespace: default\nspec:\n  teamId: "acme-org-team-a"\nEOF\n'})}),"\n",(0,a.jsx)(n.p,{children:"From the consumers perspective, they can watch the status of their request until it\nis ready for use. This waiting can be done through automation that results in a\nnotification or be checked on by a human user:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get postgresql.marketplace.kratix.io example --watch\n"})}),"\n",(0,a.jsx)(n.p,{children:"Eventually the request will be updated with a user friendly status:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"NAME      STATUS\ndev       1Gi instance v16 deployed successfully without backups\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["To exit the ",(0,a.jsx)(n.code,{children:"watch"})," on the command line, use ",(0,a.jsx)(n.code,{children:"ctrl+c"})]})}),"\n",(0,a.jsx)(n.p,{children:"Behind the scenes, Kratix is running a set of Workflows defined by the platform\nproducer in the Promise. These Workflows incorporate all of the business rules\nand required actions before scheduling any declarative workloads to the correct\nGitOps repository. In this case the workflow for the PostgreSQL Promise was\nquite simple, it took the users input and used this to generate the required\nKubernetes resources to create the PostgreSQL instance. Those resources were\nthen scheduled to the Platform via the GitOps repo (in this simple scenario, an\nin-cluster s3 compatible bucket using MinIO)."}),"\n",(0,a.jsx)(n.p,{children:"You can see the workflows that were run by inspecting the Pods:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -l kratix.io/promise-name=postgresql\n"})}),"\n",(0,a.jsx)(n.p,{children:"While readiness is useful, often services demand a number of additional specifications\nfor use. Further inspection of the request status will show any additional details the\nprovider defined. In this case, it includes a number of fields including connection\ninformation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kubectl get postgresqls.marketplace.kratix.io example -o yaml\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'...\nstatus:\n  conditions:\n  - lastTransitionTime: "2025-05-27T13:15:15Z"\n    message: Pipelines completed\n    reason: PipelinesExecutedSuccessfully\n    status: "True"\n    type: ConfigureWorkflowCompleted\n  connectionDetails:\n    credentials: \'Username and Password available in Secret: "default/postgres.acme-org-team-a-example-postgresql.credentials.postgresql.acid.zalan.do"\'\n    host: acme-org-team-a-example-postgresql.default.svc.cluster.local\n  instanceName: acme-org-team-a-example-postgresql\n  lastSuccessfulConfigureWorkflowTime: "2025-05-27T13:15:15Z"\n  message: 1Gi instance v16 deployed successfully without backups\n  observedGeneration: 4\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"These fields are how the producer communicates important information to the consumer\nsince the consumer should not need to know how the database is created."}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"These status fields are an example of how Kratix provides the framework so that you can\nfocus on building your platform your way."})}),"\n",(0,a.jsx)(n.h3,{id:"update-an-instance",children:"Update an Instance"}),"\n",(0,a.jsx)(n.p,{children:"Kratix isn't a fire and forget solution; it handles the full lifecycle,\nincluding all day 2 operations.  For example, if your requirements change, it's\neasy to adapt. As a consumer,  you simply update the spec and re-submit the\nrequest. Promises are designed  to safely handle updates without requiring\ncustom scripts or manual intervention."}),"\n",(0,a.jsx)(n.p,{children:"For example, introducing backups is as simple as adding another field to the request:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'cat << EOF | kubectl apply -f -\napiVersion: marketplace.kratix.io/v1alpha2\nkind: postgresql\nmetadata:\n  name: example\n  namespace: default\nspec:\n  teamId: "acme-org-team-a"\n  backupEnabled: true  # introduce backups\nEOF\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This time after running the apply command the Kubernetes CLI will respond that the\ninstance is ",(0,a.jsx)(n.code,{children:"configured"})," instead of ",(0,a.jsx)(n.code,{children:"created"}),". But whether it is a create or an update\nKratix will reconcile the changes automatically without any custom scripts or manual\nintervention. In this example, a new CronJob is created to handle backups. Wait for the\nupdate to complete:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get postgresqls.marketplace.kratix.io example --watch\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once the Workflow runs, the status will show the update was successful:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NAME      STATUS\nexample   1Gi instance v16 deployed successfully with backups enabled\n"})}),"\n",(0,a.jsx)(n.p,{children:"A successful Workflow means that the expectation has been set, but the decoupled GitOps\nwill reconcile on a schedule. So it may take a couple of minutes for the backup CronJob\nto become visible:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get cronjob --watch\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NAME                                                SCHEDULE      TIMEZONE   SUSPEND   ACTIVE   LAST SCHEDULE   AGE\nlogical-backup-acme-org-team-a-example-postgresql   30 00 * * *   <none>     False     0        <none>          30s\n"})}),"\n",(0,a.jsx)(n.h2,{id:"manage-a-fleet",children:"Manage a Fleet"}),"\n",(0,a.jsx)(n.p,{children:"It's not just consumers who grow and change. A platform with 10s, 100s or even\n1000s of consumers needs to also manage changing requirements or even new security\nrisks."}),"\n",(0,a.jsx)(n.p,{children:"In order to show how Kratix can manage a fleet of instances, use the command provided below\nto create a couple more PostgreSQL instances:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/syntasso/promise-postgresql/refs/heads/main/multiple-resource-requests.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will create 2 more instances as shown below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -l application=spilo\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NAME                                   READY   STATUS    RESTARTS   AGE\n...\nacme-org-team-a-example-postgresql-0   1/1     Running   0          2m\nacme-org-team-b-dev-postgresql-0       1/1     Running   0          5s\nacme-org-team-c-testing-postgresql-0   1/1     Running   0          5s\n...\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now, let's say you need to patch a CVE in the PostgreSQL images, updating the\nconfiguration, or even just expanding your offering to include that cloud instance\noption."}),"\n",(0,a.jsx)(n.p,{children:"You can do this by updating the Promise itself. In this case, let's update the Promise\nto increase the default replica count of the PostgreSQL instances from 1 to 3. As with\nany service, updating this default will mean any newly created PostgreSQL instances will\ncreate 3 replicas. But since Kratix is built for fleet management, this update will also\nevaluate and then update all existing instances."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/syntasso/promise-postgresql/refs/heads/main/promise-ha.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"You can observe the roll out in action with the following command (it may take a\nminute or two):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -l application=spilo --watch\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will show a number of pods being created and completed:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NAME                                                       READY   STATUS      RESTARTS   AGE\nacme-org-team-a-example-postgresql-0                       1/1     Running     0          3m\nacme-org-team-a-example-postgresql-1                       1/1     Running     0          14s\nacme-org-team-a-example-postgresql-2                       1/1     Running     0          9s\nacme-org-team-b-dev-postgresql-0                           1/1     Running     0          1m\nacme-org-team-b-dev-postgresql-1                           1/1     Running     0          14s\nacme-org-team-b-dev-postgresql-2                           1/1     Running     0          10s\nacme-org-team-c-testing-postgresql-0                       1/1     Running     0          1m\nacme-org-team-c-testing-postgresql-1                       1/1     Running     0          14s\nacme-org-team-c-testing-postgresql-2                       1/1     Running     0          9s\n"})}),"\n",(0,a.jsx)(n.p,{children:"Kratix will roll out the update to every instance that uses the Promise continuing to\nfollow any of the business rules defined in the Workflows without having to ask each\nconsumer to run a CI/CD pipeline, make PRs into a number of different repositories or\ntake any other action one-by-one."}),"\n",(0,a.jsx)(n.p,{children:"Since Promises create and manage services in a consistent and repeatable way, platform\ncontributors are provided full control and visibility without disrupting any consumers."}),"\n",(0,a.jsx)(n.h2,{id:"business-processes-built-in",children:"Business Processes, Built-in"}),"\n",(0,a.jsx)(n.p,{children:"While this quick-start focuses on how to use marketplace Promises, this is really only\nthe beginning."}),"\n",(0,a.jsx)(n.p,{children:"Promises become truly powerful once they encode your internal company standards such as\ncompliance checks, cost controls, or governance policies inside the Workflows. Since\nthese Workflows are reconciled on each change as well as a regular basis, each request\nautomatically includes the rules your organisation cares about."}),"\n",(0,a.jsxs)(n.p,{children:["Self-service doesn\u2019t mean a loss of control. With Kratix, it means speed ",(0,a.jsx)(n.strong,{children:"and"})," safety."]}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"In this quick start, you:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Installed Kratix and published a Marketplace Promise"}),"\n",(0,a.jsx)(n.li,{children:"Experienced self-service creation and update of a PostgreSQL instance"}),"\n",(0,a.jsx)(n.li,{children:"Managed a policy change for a fleet of three PostgreSQL instances"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If you're ready to go deeper:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.syntasso.io/workshop",children:"Try writing your own Promise in the Kratix Workshop \u2192"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.syntasso.io/ske",children:"Explore Syntasso Kratix Enterprise \u2192"})}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Want to see how this fits your platform strategy?"})," ",(0,a.jsx)(n.a,{href:"https://syntasso.io/#contact-us",children:"Book a call with us \u2192"})]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);