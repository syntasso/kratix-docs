"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[5476],{28453:(e,r,i)=>{i.d(r,{R:()=>a,x:()=>s});var t=i(96540);const n={},o=t.createContext(n);function a(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(o.Provider,{value:r},e.children)}},86019:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"main/kratix-cli/reference/kratix-init-operator-promise","title":"kratix init operator-promise","description":"Generate a Promise from a given Kubernetes Operator.","source":"@site/docs/main/06-kratix-cli/20-reference/09_kratix-init-operator-promise.md","sourceDirName":"main/06-kratix-cli/20-reference","slug":"/main/kratix-cli/reference/kratix-init-operator-promise","permalink":"/main/kratix-cli/reference/kratix-init-operator-promise","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/06-kratix-cli/20-reference/09_kratix-init-operator-promise.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"kratix init helm-promise","permalink":"/main/kratix-cli/reference/kratix-init-helm-promise"},"next":{"title":"kratix init promise","permalink":"/main/kratix-cli/reference/kratix-init-promise"}}');var n=i(74848),o=i(28453);const a={},s="kratix init operator-promise",l={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Flags",id:"flags",level:2},{value:"Global",id:"global",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"kratix-init-operator-promise",children:"kratix init operator-promise"})}),"\n",(0,n.jsx)(r.p,{children:"Generate a Promise from a given Kubernetes Operator."}),"\n",(0,n.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Generate a Promise from a given Kubernetes Operator."}),"\n",(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"kratix init operator-promise PROMISE-NAME --group PROMISE-API-GROUP --version PROMISE-API-VERSION --kind PROMISE-API-KIND --operator-manifests OPERATOR-MANIFESTS-DIR --api-schema-from CRD-NAME [flags]\n"})}),"\n",(0,n.jsx)(r.h2,{id:"flags",children:"Flags"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"-a, --api-schema-from string      The name of the CRD which the Promise API schema should be generated from.\n-h, --help                        help for operator-promise\n-m, --operator-manifests string   The path to the directory containing the operator manifests.\n"})}),"\n",(0,n.jsx)(r.h2,{id:"global",children:"Global"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"-d, --dir string       The output directory to write the Promise structure to; defaults to '.' (default \".\")\n-g, --group string     The API group for the Promise\n-k, --kind string      The kind to be provided by the Promise\n--plural string    The plural form of the kind. Defaults to the kind name with an additional 's' at the end.\n--split            Split promise.yaml file into multiple files.\n"})}),"\n",(0,n.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"/main/kratix-cli/reference/kratix-init",children:"kratix init"}),": Command used to initialize Kratix resources"]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);