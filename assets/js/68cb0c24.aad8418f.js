"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[2607],{929:e=>{e.exports=JSON.parse('{"permalink":"/blog/debugging-promise-updates","source":"@site/blog/2025-03-05-debugging/index.mdx","title":"Debugging in Kratix","description":"Identifying the tools you can use to debug your Promise rollouts","date":"2025-03-05T00:00:00.000Z","tags":[{"inline":true,"label":"kratix","permalink":"/blog/tags/kratix"},{"inline":true,"label":"kratix internals","permalink":"/blog/tags/kratix-internals"},{"inline":true,"label":"debugging","permalink":"/blog/tags/debugging"}],"readingTime":11.69,"hasTruncateMarker":true,"authors":[{"name":"Sapphire Mason-Brown","title":"Engineer @ Syntasso","url":"https://github.com/saphmb","imageURL":"https://github.com/saphmb.png","key":"sapphire","page":null}],"frontMatter":{"slug":"debugging-promise-updates","title":"Debugging in Kratix","description":"Identifying the tools you can use to debug your Promise rollouts","authors":["sapphire"],"tags":["kratix","kratix internals","debugging"]},"unlisted":false,"prevItem":{"title":"Kratix, Backstage, and OIDC","permalink":"/blog/backstage-and-keycloak"},"nextItem":{"title":"How to write Compound Promises","permalink":"/blog/compound-promises"}}')},3767:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var i=n(929),o=n(4848),s=n(8453);const r={slug:"debugging-promise-updates",title:"Debugging in Kratix",description:"Identifying the tools you can use to debug your Promise rollouts",authors:["sapphire"],tags:["kratix","kratix internals","debugging"]},a=void 0,l={authorsImageUrls:[void 0]},u=[];function g(e){const t={li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"As much as we would all like, rolling out updates to any software can result in some bumps along the way. This applies to updates to Promises too but Kratix has some feature to help identify any issues within your Promise spec, your Promise workflows and the scheduling of documents outputted by your workflows."}),"\n",(0,o.jsx)(t.p,{children:"In this blog post we'll explore some of the common issues that users experience when configuring Kratix and developing Promises and well as how Kratix tries to steer you in the right direction when something goes wrong. We'll be exploring:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Querying Kratix effectively with labels"}),"\n",(0,o.jsx)(t.li,{children:"Debugging scheduling issues Kratix"}),"\n",(0,o.jsx)(t.li,{children:"Getting information from Destination and State Store status updates"}),"\n",(0,o.jsx)(t.li,{children:"Validating the Kratix Promise spec"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:'Click on "read more" to continue!'})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);