"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[4873],{7807:(e,n,i)=>{i.d(n,{ZP:()=>a,d$:()=>t});var r=i(5893),s=i(1151);const t=[{value:"Pre-requisites",id:"pre-requisites",level:4}];function o(e){const n={a:"a",code:"code",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h4,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsxs)("summary",{children:["You need an installation of Kratix for this section. ",(0,r.jsx)("strong",{children:"Click here"})," for instructions"]}),(0,r.jsx)(n.p,{children:"The simplest way to do so is by running the quick-start script from within the\nKratix directory. The script will create two KinD clusters, install, and\nconfigure Kratix."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./scripts/quick-start.sh --recreate\n"})}),(0,r.jsx)(n.p,{children:"You can run Kratix either with a multi-cluster or a single-cluster setup. The\ncommands on the remainder of this document assume that two environment variables\nare set:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PLATFORM"})," representing the platform cluster Kubernetes context"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"WORKER"})," representing the worker cluster Kubernetes context"]}),"\n"]}),(0,r.jsx)(n.p,{children:"If you ran the quick-start script above, do:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'export PLATFORM="kind-platform"\nexport WORKER="kind-worker"\n'})}),(0,r.jsx)(n.p,{children:"For single cluster setups, the two variables should be set to the same value.\nYou can find your cluster context by running:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl config get-contexts\n"})}),(0,r.jsxs)(n.p,{children:["Refer back to ",(0,r.jsx)(n.a,{href:"../../category/installing-kratix",children:"Installing Kratix"})," for more\ndetails."]})]})]})}function a(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},1800:(e,n,i)=>{i.d(n,{ZP:()=>c,d$:()=>a});var r=i(5893),s=i(1151),t=i(4866),o=i(5162);const a=[];function l(e){const n={code:"code",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(t.Z,{children:[(0,r.jsx)(o.Z,{value:"darwin-amd64",label:"Intel Mac",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p bin\ncurl -sLo ./bin/worker-resource-builder.tar.gz https://github.com/syntasso/kratix/releases/download/v0.0.4/worker-resource-builder_0.0.4_darwin_amd64.tar.gz\ntar -xvf ./bin/worker-resource-builder.tar.gz -C ./bin\nmv ./bin/worker-resource-builder-v* ./bin/worker-resource-builder\nchmod +x ./bin/worker-resource-builder\n"})})}),(0,r.jsx)(o.Z,{value:"darwin-arm64",label:"Apple Silicon Mac",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p bin\ncurl -sLo ./bin/worker-resource-builder.tar.gz https://github.com/syntasso/kratix/releases/download/v0.0.4/worker-resource-builder_0.0.4_darwin_arm64.tar.gz\ntar -xvf ./bin/worker-resource-builder.tar.gz -C ./bin\nmv ./bin/worker-resource-builder-v* ./bin/worker-resource-builder\nchmod +x ./bin/worker-resource-builder\n"})})}),(0,r.jsx)(o.Z,{value:"linux-arm64",label:"Linux ARM64",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p bin\ncurl -sLo ./bin/worker-resource-builder.tar.gz https://github.com/syntasso/kratix/releases/download/v0.0.4/worker-resource-builder_0.0.4_linux_arm64.tar.gz\ntar -xvf ./bin/worker-resource-builder.tar.gz -C ./bin\nmv ./bin/worker-resource-builder-v* ./bin/worker-resource-builder\nchmod +x ./bin/worker-resource-builder\n"})})}),(0,r.jsx)(o.Z,{value:"linux-amd64",label:"Linux AMD64",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p bin\ncurl -sLo ./bin/worker-resource-builder.tar.gz https://github.com/syntasso/kratix/releases/download/v0.0.4/worker-resource-builder_0.0.4_linux_amd64.tar.gz\ntar -xvf ./bin/worker-resource-builder.tar.gz -C ./bin\nmv ./bin/worker-resource-builder-v* ./bin/worker-resource-builder\nchmod +x ./bin/worker-resource-builder\n"})})})]})}function c(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},9600:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>g,contentTitle:()=>j,default:()=>w,frontMatter:()=>x,metadata:()=>f,toc:()=>b});var r=i(5893),s=i(1151),t=i(7807);function o(e){const n={code:"code",h4:"h4",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h4,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,r.jsx)(n.p,{children:"If you completed the environment clean up steps at the end of the previous\nworkshop chapter you're good to go!"}),"\n",(0,r.jsx)(n.p,{children:"If you did not clean up or ran into issues you can run the following from inside the Kratix repo to get a fresh environment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./scripts/quick-start.sh --recreate\n"})}),"\n",(0,r.jsx)(n.p,{children:"Also, make sure to that the following environment variables are set:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export PLATFORM="kind-platform"\nexport WORKER="kind-worker"\n'})})]})}function a(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}var l=i(4996),c=(i(4866),i(5162),i(1800));function d(e){const n={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["To make this step simpler there is a ",(0,r.jsx)(n.em,{children:"very basic"})," tool which grabs all YAML documents from a single directory and injects them correctly into the ",(0,r.jsx)(n.code,{children:"dependencies"})," field in the ",(0,r.jsx)(n.code,{children:"promise.yaml"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To use this tool, you will need to download the correct binary for your computer from ",(0,r.jsx)(n.a,{href:"https://github.com/syntasso/kratix/releases/tag/v0.0.4",children:"GitHub releases"}),":"]}),"\n",(0,r.jsx)(c.ZP,{}),"\n",(0,r.jsx)(n.p,{children:"Once installed, you can see how to use the binary by running the following help command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./bin/worker-resource-builder --help\n"})}),"\n",(0,r.jsx)(n.p,{children:"The above command will give an output similar to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell-session",children:"Usage of ./bin/worker-resource-builder:\n  -resources-dir string\n        Absolute Path of k8s resources to build dependencies from\n  -promise string\n        Absolute path of Promise to insert dependencies into\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}const u=[{value:"What&#39;s inside a Kratix Promise?",id:"whats-inside-a-kratix-promise",level:2},{value:"Platform Team Journey",id:"platform-team-journey",level:3},{value:"Platform User Journey",id:"platform-user-journey",level:3},{value:"Fulfilling the Promise",id:"fulfilling-the-promise",level:3},{value:"Writing your own Kratix Promise",id:"writing-your-own-kratix-promise",level:2},{value:"Prepare your environment",id:"prepare-your-environment",level:3},{value:"Pre-requisites",id:"pre-requisites",level:4},{value:"Directory setup",id:"directory-setup",level:3},{value:"Define your Promise API",id:"promise-api",level:3},{value:"Define your Workflows",id:"create-workflows",level:3},{value:"Create your base manifest",id:"base-instance",level:4},{value:"Build a simple configure pipeline",id:"pipeline-script",level:4},{value:"Package your code as a Docker image",id:"dockerfile",level:4},{value:"Test your image",id:"test-image",level:3},{value:"Define the <code>dependencies</code> in your Promise definition",id:"dependencies",level:3},...[...c.d$],{value:"Install your Promise",id:"install-promise",level:3},{value:"Create and submit a request for a Resource",id:"create-resource-request",level:3},{value:"Kratix Promise parts: in details",id:"promise-review",level:3},{value:"<code>api</code>",id:"api",level:4},{value:"<code>dependencies</code>",id:"dependencies",level:4},{value:"<code>workflows</code>",id:"workflows",level:4},{value:"Recap",id:"summary",level:2},{value:"Clean up environment",id:"cleanup",level:2},{value:"\ud83c\udf89 \xa0 Congratulations!",id:"--congratulations",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"In this tutorial, you will"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#whats-inside-a-kratix-promise",children:"learn more about what's inside a Kratix Promise"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#writing-your-own-kratix-promise",children:"write and install your own Kratix Promise"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"whats-inside-a-kratix-promise",children:"What's inside a Kratix Promise?"}),"\n",(0,r.jsxs)(n.p,{children:["You've ",(0,r.jsx)(n.a,{href:"installing-a-promise",children:"installed Kratix and a Promise"}),". Now\nyou'll create a Promise from scratch."]}),"\n",(0,r.jsx)(n.p,{children:"A Kratix Promise is a YAML document that defines a contract between the platform\nand its users. It is what allows platforms to be built incrementally."}),"\n",(0,r.jsx)(n.p,{children:"It consists of three parts:"}),"\n",(0,r.jsx)("img",{align:"right",src:(0,l.ZP)("/img/docs/base-promise-structure.png"),alt:"Kratix logo"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"api"}),": the API (in Kubernetes terms, the CRD) that application developers\nuse to request a Resource from the Kratix Promise."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dependencies"}),": a collection of prerequisites that enable the creation of a Resource that must be pre-installed on any Destinations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"workflows"}),": a list of pipelines to be executed at different stages of the\nPromise lifecycle, like during the Promise installation or the creation of a\nnew Resource. It contains the series of steps required by your business to\nprovide the capability as-a-service."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"platform-team-journey",children:"Platform Team Journey"}),"\n",(0,r.jsx)(n.p,{children:"Thinking of your platform as-a-Product, steps to write a Promise are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Talk to users of your platform to find out what they're using and what they\nneed."}),"\n",(0,r.jsxs)(n.li,{children:["Determine what the API of the Promise should be.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What are the configuration options you want to expose to your users?"}),"\n",(0,r.jsx)(n.li,{children:"Do you need to provide low-level options or will the users be happy with\nhigher-level abstractions?"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["In the Promise, write the ",(0,r.jsx)(n.code,{children:"api"})," with the desired fields and validations."]}),"\n",(0,r.jsxs)(n.li,{children:["Next, determine what the software dependencies are that you need to fulfils\nthe Promise. You may find out you need a ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/",children:"Kubernetes\nOperator"}),"\nrunning on the Destination cluster, for example."]}),"\n",(0,r.jsxs)(n.li,{children:["In the Promise, add your dependencies in the ",(0,r.jsx)(n.code,{children:"dependencies"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Finally, determine the steps that need to be executed during the Promise's\nlifecycle. The minimum you'll need is a Workflow to configure your Resource which will run on creation. These may include translating the user's request into the Operator's expected document, injecting custom configuration, sending requests to internal APIs to\nverify permissions, scanning images for vulnerabilities, etc."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In the Promise, list those Workflows in the ",(0,r.jsx)(n.code,{children:"workflows"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Install the Promise on your platform cluster, where Kratix is installed."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"platform-user-journey",children:"Platform User Journey"}),"\n",(0,r.jsx)(n.p,{children:"To use the Promise once it is installed on the platform, a platform user will:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"List the available Promises in the platform cluster to find what they want."}),"\n",(0,r.jsxs)(n.li,{children:["Write a request for the Resource, as defined by the ",(0,r.jsx)(n.code,{children:"api"})," in the Promise."]}),"\n",(0,r.jsx)(n.li,{children:"Send the request to the Platform."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fulfilling-the-promise",children:"Fulfilling the Promise"}),"\n",(0,r.jsx)(n.p,{children:"At this point, Kratix will execute the following steps:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Kratix fires off the Workflows defined in ",(0,r.jsx)(n.code,{children:"workflows.resource.configure"}),"\npassing, the Resource definition as an input. This will be a Kratix\n",(0,r.jsx)(n.code,{children:"Pipeline"}),", responsible for running the necessary business processes to create\nthe Resource. For further details on Pipelines, check the ",(0,r.jsx)(n.a,{href:"/main/reference/resources/workflows",children:"Pipeline reference\ndocumentation"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Once all Workflows are executed, a series of documents are outputted,\nencapsulating the user's request into valid Kubernetes objects."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Those documents are scheduled to an available Destination, which in turn has\nthe necessary dependencies installed (via the Promise's ",(0,r.jsx)(n.code,{children:"dependencies"})," field)"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The necessary infrastructure is created and configured, and the user can reference any necessary details in the Resource status field (e.g. how to connect to a service)."}),"\n"]}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsx)(n.h2,{id:"writing-your-own-kratix-promise",children:"Writing your own Kratix Promise"}),"\n",(0,r.jsx)(n.p,{children:"Imagine your platform team has received its fourth request from its fourth team\nfor Jenkins. You decide four times is too many times to manually set\nup Jenkins."}),"\n",(0,r.jsx)(n.p,{children:"Now you'll write a Jenkins Promise and install it on your platform so that your\nfour teams get Jenkins; and you get time back for more valuable work."}),"\n",(0,r.jsx)(n.p,{children:"This guide will follow the steps below:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Define Promise"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#prepare-your-environment",children:"Prepare your environment"}),", if required"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#directory-setup",children:"Set up your directories"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Promise definition: api"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#promise-api",children:"Custom Resource Definition: define your Promise API"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Promise definition: workflows"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#base-instance",children:"Create your base manifest"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#pipeline-script",children:"Build a simple request pipeline"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#dockerfile",children:"Package your pipeline step as a Docker image"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#test-image",children:"Test your container image"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Promise definition: dependencies"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"#dependencies",children:["Define your ",(0,r.jsx)(n.code,{children:"dependencies"})," in your Promise definition"]})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test Promise"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#install-promise",children:"Install your Promise"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#create-resource-request",children:"Create and submit a Kratix request for a Resource"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#promise-review",children:"Review of a Kratix Promise parts (in detail)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#summary",children:"Summary"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#cleanup",children:"Clean up environment"})}),"\n"]}),"\n",(0,r.jsx)("hr",{}),"\n",(0,r.jsx)(n.h3,{id:"prepare-your-environment",children:"Prepare your environment"}),"\n",(0,r.jsx)(a,{}),"\n",(0,r.jsx)(n.h3,{id:"directory-setup",children:"Directory setup"}),"\n",(0,r.jsx)(n.p,{children:"To quick-start your Promise, we have setup a template repository to start from."}),"\n",(0,r.jsxs)(n.p,{children:["You can start by\n",(0,r.jsx)(n.a,{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/about-forks",children:"forking"}),"\nthe ",(0,r.jsx)(n.a,{href:"https://github.com/syntasso/workshop-promise-template",children:"template repository"}),"\nor by cloning it directly."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/syntasso/workshop-promise-template\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"If you'd like to save the Promise you will write, consider forking the template\nrepository."})}),"\n",(0,r.jsx)(n.p,{children:"Once cloned, change into the directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd workshop-promise-template/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"promise-api",children:"Define your Promise API"}),"\n",(0,r.jsxs)(n.p,{children:["For the purpose of this tutorial, you will create an API that accepts a single\n",(0,r.jsx)(n.code,{children:"string"})," parameter called ",(0,r.jsx)(n.code,{children:"name"}),". In real world scenarios, the API can be as\nsimple or as complex you design it to be. The Promise API is defined within the\n",(0,r.jsx)(n.code,{children:"api"})," of your Promise YAML."]}),"\n",(0,r.jsxs)(n.p,{children:["Replace the ",(0,r.jsx)(n.code,{children:"api"})," field in ",(0,r.jsx)(n.code,{children:"promise.yaml"})," with the complete field details\nbelow. Ensure the indentation is correct (",(0,r.jsx)(n.code,{children:"api"})," is nested under ",(0,r.jsx)(n.code,{children:"spec"}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'jsx title="api in promise.yaml"',children:"api:\n  apiVersion: apiextensions.k8s.io/v1\n  kind: CustomResourceDefinition\n  metadata:\n    name: jenkins.example.promise.syntasso.io\n  spec:\n    group: example.promise.syntasso.io\n    scope: Namespaced\n    names:\n      plural: jenkins\n      singular: jenkins\n      kind: jenkins\n    versions:\n      - name: v1\n        served: true\n        storage: true\n        schema:\n          openAPIV3Schema:\n            type: object\n            properties:\n              spec:\n                type: object\n                properties:\n                  name:\n                    type: string\n"})}),"\n",(0,r.jsx)(n.p,{children:"You have now defined the as-a-Service API."}),"\n",(0,r.jsx)(n.h3,{id:"create-workflows",children:"Define your Workflows"}),"\n",(0,r.jsxs)(n.p,{children:["Kratix provides several hooks for managing and customising the Promise's\nlifecycle. Those hooks are defined in the Promise ",(0,r.jsx)(n.code,{children:"workflows"})," key. The minimum you\nneed to define is what must happen when the platform receives a request for a\nnew resource from the promised service. Refer to the ",(0,r.jsx)(n.a,{href:"/main/reference/resources/workflows",children:"Workflows reference\ndocumentation"})," for further\ndetails."]}),"\n",(0,r.jsxs)(n.p,{children:["The Kratix ",(0,r.jsx)(n.code,{children:"Pipeline"})," kind provides an straightforward way to define Workflows.\nYou could, however, use other tools (like Tekton) in your Workflows."]}),"\n",(0,r.jsxs)(n.p,{children:["In a nutshell, a Kratix ",(0,r.jsx)(n.code,{children:"Pipeline"})," is a series of containers that will be\nexecuted, in order. In this section, you will write and configure a Kratix\n",(0,r.jsx)(n.code,{children:"Pipeline"})," to be executed as part of the ",(0,r.jsx)(n.code,{children:"resource.configure"})," Workflow."]}),"\n",(0,r.jsx)(n.p,{children:"Start by creating the container image that will must be executed as part of the\npipeline."}),"\n",(0,r.jsx)(n.h4,{id:"base-instance",children:"Create your base manifest"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"resource.configure"})," Workflow will transform the user's request into the\nKubernetes resources required to create a valid Jenkins\nservice. To start, copy the YAML file below and save it in\n",(0,r.jsx)(n.code,{children:"internal/configure-pipeline/jenkins-instance.yaml"}),"."]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"CLICK HERE"})," to expand the contents of the ",(0,r.jsx)("code",{children:"jenkins-instance.yaml"})," file."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'jsx title="internal/configure-pipeline/jenkins-instance.yaml"',children:'apiVersion: jenkins.io/v1alpha2\nkind: Jenkins\nmetadata:\n  name: <tbr-name>\n  namespace: default\nspec:\n  service:\n    type: NodePort\n    port: 8080\n    nodePort: 30269\n  configurationAsCode:\n    configurations: []\n    secret:\n      name: ""\n  groovyScripts:\n    configurations: []\n    secret:\n      name: ""\n  jenkinsAPISettings:\n    authorizationStrategy: createUser\n  master:\n    disableCSRFProtection: false\n    containers:\n      - name: jenkins-master\n        image: jenkins/jenkins:2.396-jdk17\n        imagePullPolicy: Always\n        livenessProbe:\n          failureThreshold: 12\n          httpGet:\n            path: /login\n            port: http\n            scheme: HTTP\n          initialDelaySeconds: 100\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 5\n        readinessProbe:\n          failureThreshold: 10\n          httpGet:\n            path: /login\n            port: http\n            scheme: HTTP\n          initialDelaySeconds: 80\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        resources:\n          limits:\n            cpu: 1500m\n            memory: 3Gi\n          requests:\n            cpu: "1"\n            memory: 500Mi\n        env:\n          - name: DEBUG_JENKINS_OPERATOR\n            value: "true"\n          - name: JAVA_OPTS\n            value: -Xmx2048m -XX:MinRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0 -Djenkins.install.runSetupWizard=false -Djava.awt.headless=true\n    basePlugins:\n      - name: kubernetes\n        version: 3802.vb_b_600831fcb_3\n      - name: workflow-job\n        version: 1289.vd1c337fd5354\n      - name: workflow-aggregator\n        version: "2.6"\n      - name: git\n        version: 4.11.3\n      - name: job-dsl\n        version: 1.78.3\n      - name: configuration-as-code\n        version: 1569.vb_72405b_80249\n      - name: kubernetes-credentials-provider\n        version: 1.208.v128ee9800c04\n'})})]}),"\n",(0,r.jsx)(n.h4,{id:"pipeline-script",children:"Build a simple configure pipeline"}),"\n",(0,r.jsx)(n.p,{children:"Kratix takes no opinion on the tooling used within a pipeline. Kratix will pass\na set of resources to the pipeline, and expect back a set of resources. What\nhappens within the pipeline, and what tooling is used, is a decision left\nentirely to you."}),"\n",(0,r.jsx)(n.p,{children:"For this example, you're taking a name from the Kratix Resource definition and passing it to the Jenkins custom resource output."}),"\n",(0,r.jsxs)(n.p,{children:["To keep this transformation simple, you'll use a combination of ",(0,r.jsx)(n.code,{children:"sed"})," and ",(0,r.jsx)(n.code,{children:"yq"}),"\nto do the work."]}),"\n",(0,r.jsxs)(n.p,{children:["Update the ",(0,r.jsx)(n.code,{children:"execute-pipeline"})," script in the ",(0,r.jsx)(n.code,{children:"configure-pipeline"})," directory\nwith the contents below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'jsx title="internal/configure-pipeline/execute-pipeline"',children:"#!/bin/sh\n\nset -x\n\n#Get the name from the Promise Custom resource\ninstanceName=$(yq eval '.spec.name' /kratix/input/object.yaml)\n\n# Inject the name into the Jenkins resources\nfind /tmp/transfer -type f -exec sed -i \\\n  -e \"s/<tbr-name>/${instanceName}/g\" \\\n  {} \\;\n\ncp /tmp/transfer/* /kratix/output/\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Pipeline images also have the capability to write back information to the\nresource requester by writing to the status. See ",(0,r.jsx)(n.a,{href:"../reference/resources/status",children:"status documentation for more information."})]}),"\n",(0,r.jsx)(n.h4,{id:"dockerfile",children:"Package your code as a Docker image"}),"\n",(0,r.jsxs)(n.p,{children:["Update the ",(0,r.jsx)(n.code,{children:"Dockerfile"})," in the ",(0,r.jsx)(n.code,{children:"configure-pipeline"})," directory to contain the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",metastring:'jsx title="internal/configure-pipeline/Dockerfile"',children:'FROM "mikefarah/yq:4"\nRUN [ "mkdir", "/tmp/transfer" ]\n\nADD jenkins-instance.yaml /tmp/transfer/jenkins-instance.yaml\nADD execute-pipeline execute-pipeline\n\nCMD [ "sh", "-c", "./execute-pipeline"]\nENTRYPOINT []\n'})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["Next build your Docker image. First lets give it a name. If you are not using\n",(0,r.jsx)(n.code,{children:"KinD"}),", you may need to push the image later on, in that case change the name to\none suitable for your registry, e.g. if you use Docker Hub\n",(0,r.jsx)(n.code,{children:"my-dockerhub-username/jenkins-configure-pipeline:dev"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export PIPELINE_NAME=kratix-workshop/jenkins-configure-pipeline:dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then we can build the image"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./internal/scripts/pipeline-image build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"test-image",children:"Test your image"}),"\n",(0,r.jsxs)(n.p,{children:["Since the Pipeline contains a series of containers, we can easily test\nindividual images in isolation. We can provide an example ",(0,r.jsx)(n.code,{children:"/kratix/input"})," to mimic what\nKratix would do when it executes the pipeline and assert that the correct\n",(0,r.jsx)(n.code,{children:"/kratix/output"})," is written."]}),"\n",(0,r.jsxs)(n.p,{children:["To test this lets create a sample ",(0,r.jsx)(n.code,{children:"/kratix/input/object.yaml"})," Resource definition in the\n",(0,r.jsx)(n.code,{children:"internal/configure-pipeline/test-input/"})," directory with the contents below"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'jsx title="internal/configure-pipeline/test-input/object.yaml"',children:"apiVersion: promise.example.com/v1\nkind: jenkins\nmetadata:\n  name: my-promise-request\nspec:\n  name: my-amazing-jenkins\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run the container, mounting the volumes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"chmod 777 ./internal/configure-pipeline/test-output\ndocker run \\\n  -v ${PWD}/internal/configure-pipeline/test-input:/kratix/input \\\n  -v ${PWD}/internal/configure-pipeline/test-output:/kratix/output $PIPELINE_NAME\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["Verify the contents in the ",(0,r.jsx)(n.code,{children:"internal/configure-pipeline/test-output"})," directory\nmatch the desired outcome. Note how the Jenkins ",(0,r.jsx)(n.code,{children:"metadata.name"})," correspond to\nthe name on the Resource definition. This is exactly what we setup our pipeline to\ndo!"]}),"\n",(0,r.jsxs)(n.p,{children:["The documents you see in the directory will be scheduled by Kratix to a Destination and deployed by the GitOps agent on the worker cluster once the pipeline is executed. They need to be valid Kubernetes resources that can be applied to any cluster with the Promise's ",(0,r.jsx)(n.code,{children:"dependencies"})," installed (see below)."]}),"\n",(0,r.jsx)(n.p,{children:"Once you are satisfied that your Pipeline is producing the expected result, you\nwill need to make the container image available to your Kubernetes cluster. If\nyou are using KinD you can load it in by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./internal/scripts/pipeline-image load\n"})}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("strong",{children:"Click here"})," if your clusters were not created with KinD"]}),(0,r.jsx)(n.p,{children:"If you have not created your Kubernetes clusters with KinD, you will need to either:"}),(0,r.jsxs)("ul",{children:[(0,r.jsxs)("li",{children:["Push the image to a Image repository (like Dockerhub) by running ",(0,r.jsx)("code",{children:"./internal/scripts/pipeline-image push"})]}),(0,r.jsxs)("li",{children:["Use the appropriate command to load the image (for example, ",(0,r.jsx)("code",{children:"minikube cache add"})," if you are using minikube)"]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["The final step of defining the Pipeline in the Promise ",(0,r.jsx)(n.code,{children:"workflows"})," keys. Add the\nfollowing to your ",(0,r.jsx)(n.code,{children:"promise.yaml"})," file:"]}),"\n",(0,r.jsxs)(n.p,{children:["Add the image to the array in ",(0,r.jsx)(n.code,{children:"promise.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'jsx title="promise.yaml"',children:"apiVersion: platform.kratix.io/v1alpha1\nkind: Promise\nmetadata:\n  name: promise\nspec:\n  dependencies:\n  #highlight-start\n  workflows:\n    resource:\n      configure:\n        - apiVersion: platform.kratix.io/v1alpha1\n          kind: Pipeline\n          metadata:\n            name: instance-configure\n          spec:\n            containers:\n              - name: create-jenkins-instance\n                # update the image if you are using a custom name\n                image: kratix-workshop/jenkins-configure-pipeline:dev\n  #highlight-end\n  api: ...\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"About Workflows",type:"tip",children:[(0,r.jsx)(n.p,{children:"Although the example here is a simple one, Workflows are one the of most\npowerful features of Kratix."}),(0,r.jsx)(n.p,{children:"The Workflow enables platform teams to deliver compelling developer experiences\non the platform, fully customized to meet both the users' and the organization's\nneeds."}),(0,r.jsx)(n.p,{children:"Furthermore, Kratix Pipeline images can have their own development workflow, being\nfully tested and released on their own schedule. A well-designed image can also\nbe reused across many Promises, reducing duplication."})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"In summary, you have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Created a container image containing:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A template file to be injected with per-Resource details\n(",(0,r.jsx)(n.code,{children:"jenkins-instance.yaml"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["A shell script to retrieve the per-Resource details from the user's\nrequest, and inject them into the template (",(0,r.jsx)(n.code,{children:"execute-pipeline"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Executed the image locally to validate its output"}),"\n",(0,r.jsx)(n.li,{children:"Loaded the image into the platform cluster (or pushed it to the registry)"}),"\n",(0,r.jsxs)(n.li,{children:["Wrapped the image in a Kratix Pipeline and added it to the\n",(0,r.jsx)(n.code,{children:"resource.configure"})," Workflow."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"dependencies",children:["Define the ",(0,r.jsx)(n.code,{children:"dependencies"})," in your Promise definition"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"dependencies"})," describes everything required to fulfil the\nPromise. Kratix applies this content on all registered Destinations."]}),"\n",(0,r.jsxs)(n.p,{children:["For this Promise, the ",(0,r.jsx)(n.code,{children:"dependencies"})," needs to contain the Jenkins CRD\nand Operator."]}),"\n",(0,r.jsx)(n.p,{children:"Run the following commands to download the resource files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl https://raw.githubusercontent.com/syntasso/kratix-marketplace/main/jenkins/internal/configure-pipeline/dependencies/jenkins.io_jenkins.yaml --output internal/dependencies/jenkins.io_jenkins.yaml --silent\ncurl https://raw.githubusercontent.com/syntasso/kratix-marketplace/main/jenkins/internal/configure-pipeline/dependencies/all-in-one-v1alpha2.yaml --output internal/dependencies/all-in-one-v1alpha2.yaml --silent\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["The commands above will download the necessary files in the\n",(0,r.jsx)(n.code,{children:"internal/dependencies"})," directory. You are now ready to inject the Jenkins files\ninto the ",(0,r.jsx)(n.code,{children:"promise.yaml"}),"."]}),"\n",(0,r.jsx)(h,{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"Once you have downloaded and verified the correct binary, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./internal/scripts/inject-deps\n"})}),"\n",(0,r.jsx)(n.h3,{id:"install-promise",children:"Install your Promise"}),"\n",(0,r.jsx)(n.p,{children:"From your Promise directory, you can now install the Promise in Kratix."}),"\n",(0,r.jsx)(n.p,{children:"At this point, your Promise directory structure should look like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\udcc2 workshop-promise-template\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 \ud83d\udcc2 internal\n\u2502\xa0\xa0 \u251c\u2500\u2500 README.md\n\u2502\xa0\xa0 \u251c\u2500\u2500 \ud83d\udcc2 configure-pipeline\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Dockerfile\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 execute-pipeline\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 jenkins-instance.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 test-input\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 object.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 test-output\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 jenkins-instance.yaml\n\u2502\xa0\xa0 \u251c\u2500\u2500 \ud83d\udcc2 dependencies\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 all-in-one-v1alpha2.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 jenkins.io_jenkins.yaml\n\u2502\xa0\xa0 \u2514\u2500\u2500 \ud83d\udcc2 scripts\n\u2502\xa0\xa0     \u251c\u2500\u2500 inject-deps\n\u2502\xa0\xa0     \u251c\u2500\u2500 pipeline-image\n\u2502\xa0\xa0     \u2514\u2500\u2500 worker-resource-builder\n\u251c\u2500\u2500 promise.yaml\n\u2514\u2500\u2500 resource-request.yaml\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"Before installing your Promise, verify that Kratix and MinIO are installed and\nhealthy."}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"Make sure you have PLATFORM and WORKER set in your environment:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export PLATFORM="kind-platform"\nexport WORKER="kind-worker"\n'})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM get pods --namespace kratix-platform-system\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see something similar to"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"NAME                                                  READY   STATUS       RESTARTS   AGE\nkratix-platform-controller-manager-769855f9bb-8srtj   2/2     Running      0          1h\nminio-6f75d9fbcf-5cn7w                                1/1     Running      0          1h\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If that is not the case, please go back to ",(0,r.jsx)(n.a,{href:"#prepare-your-environment",children:"Prepare your\nenvironment"})," and follow the instructions."]}),"\n",(0,r.jsxs)(n.p,{children:["From the ",(0,r.jsx)(n.code,{children:"promise"})," directory, run:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl apply --context $PLATFORM --filename promise.yaml\n"})}),"\n",(0,r.jsxs)("p",{children:["Verify the Promise is installed",(0,r.jsx)("br",{})," ",(0,r.jsxs)("sub",{children:["(This may take a few minutes so\n",(0,r.jsx)("code",{children:"--watch"})," will watch the command. Press ",(0,r.jsx)("kbd",{children:"Ctrl"}),"+",(0,r.jsx)("kbd",{children:"C"}),"\nto stop watching)"]})," "]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM get crds --watch\n"})}),"\n",(0,r.jsx)(n.p,{children:"The above command will give an output similar to"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"NAME                                  CREATED AT\njenkins.example.promise.syntasso.io   2021-09-09T11:21:10Z\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)("p",{children:["Verify the Jenkins Operator is running",(0,r.jsx)("br",{})," ",(0,r.jsxs)("sub",{children:["(This may take a few\nminutes so ",(0,r.jsx)("code",{children:"--watch"})," will watch the command. Press\n",(0,r.jsx)("kbd",{children:"Ctrl"}),"+",(0,r.jsx)("kbd",{children:"C"})," to stop watching)"]})," "]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $WORKER get pods --watch\n"})}),"\n",(0,r.jsx)(n.p,{children:"The above command will give an output similar to"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"NAME                                 READY   STATUS    RESTARTS   AGE\njenkins-operator-6c89d97d4f-r474w    1/1     Running   0          1m\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-resource-request",children:"Create and submit a request for a Resource"}),"\n",(0,r.jsxs)(n.p,{children:["You can now request a Jenkins. Create a file in the root directory\ncalled ",(0,r.jsx)(n.code,{children:"resource-request.yaml"})," with the following contents:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'jxs title="resource-request.yaml"',children:"apiVersion: example.promise.syntasso.io/v1\nkind: jenkins\nmetadata:\n  name: my-promise-request\nspec:\n  name: my-amazing-jenkins\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can now send the request to Kratix:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply --context $PLATFORM --filename resource-request.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"Applying the Kratix Promise will trigger your configure Workflow steps which in turn requests a Jenkins instance from the operator. While the pipeline can run quite quickly, Jenkins requires quite a few resources to be installed including a deployment and a runner which means the full install may take a few minutes."}),"\n",(0,r.jsx)(n.p,{children:"You can see a bit of what is happening by first looking for your pipeline completion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM get pods\n"})}),"\n",(0,r.jsx)(n.p,{children:"This should result in something similar to"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"NAME                                       READY   STATUS      RESTARTS   AGE\nconfigure-pipeline-promise-default-9d40b   0/1     Completed   0          1m\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"For more details, you can view the Pipeline logs with"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl logs \\\n  --context $PLATFORM \\\n  --selector kratix.io/promise-name=jenkins-default \\\n  --container create-jenkins-instance\n"})}),"\n",(0,r.jsx)(n.p,{children:"This should result in something like"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"+ yq eval .spec.name /kratix/input/object.yaml\n+ instanceName=my-amazing-jenkins\n+ find /tmp/transfer -type f -exec sed -i -e 's/<tbr-name>/my-amazing-jenkins/g' '{}' ';'\n+ cp /tmp/transfer/jenkins-instance.yaml /kratix/output/\n"})}),"\n",(0,r.jsxs)("p",{children:["Then you can watch for the creation of your Jenkins by targeting the\nworker cluster:",(0,r.jsx)("br",{})," ",(0,r.jsxs)("sub",{children:["(This may take a few minutes so ",(0,r.jsx)("code",{children:"--watch"}),"\nwill watch the command. Press ",(0,r.jsx)("kbd",{children:"Ctrl"}),"+",(0,r.jsx)("kbd",{children:"C"})," to stop\nwatching)"]})," "]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $WORKER get pods --all-namespaces --watch\n"})}),"\n",(0,r.jsx)(n.p,{children:"The above command will eventually give an output similar to"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"NAME                                READY   STATUS    RESTARTS   AGE\njenkins-my-amazing-jenkins          1/1     Running   0          1m\n...\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.p,{children:["For verification, access the Jenkins UI in a browser, as in ",(0,r.jsx)(n.a,{href:"./installing-a-promise#use-your-jenkins",children:"previous\nsteps"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Let's now take a look at what you have done in more details."}),"\n",(0,r.jsx)(n.h3,{id:"promise-review",children:"Kratix Promise parts: in details"}),"\n",(0,r.jsx)(n.h4,{id:"api",children:(0,r.jsx)(n.code,{children:"api"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"api"})," is your user-facing API for the Promise. It defines the options\nthat users can configure when they request the Promise. The complexity of the\nAPI is up to you. You can read more about writing Custom Resource\nDefinitions (CRDs) in the ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#create-a-customresourcedefinition",children:"Kubernetes\ndocs"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"dependencies",children:(0,r.jsx)(n.code,{children:"dependencies"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"dependencies"})," describes everything required to fulfil the\nPromise. Kratix applies this content on all registered Destinations. For\ninstance with the Jenkins Promise, the ",(0,r.jsx)(n.code,{children:"dependencies"})," contains the\nJenkins CRD, the Jenkins Operator, and the resources the Operator requires."]}),"\n",(0,r.jsx)(n.h4,{id:"workflows",children:(0,r.jsx)(n.code,{children:"workflows"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"workflows"})," describes a set of actions to run in response to actions that affect the lifecycle of a Promise, such as creating Resources or deleting the Promise itself."]}),"\n",(0,r.jsxs)(n.p,{children:["You have configured the ",(0,r.jsx)(n.code,{children:"instance.configure"})," lifecycle hook to run a Kratix ",(0,r.jsx)(n.code,{children:"Pipeline"}),". In the pipeline, you defined an array of container images that will be executed in order, in response to a Resource being created or updated."]}),"\n",(0,r.jsx)(n.p,{children:"Once all images are executed, Kratix will schedule any document outputted by the\npipeline to a worker cluster."}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Recap"}),"\n",(0,r.jsx)(n.p,{children:"You have now authored your first Promise. Congratulations \ud83c\udf89"}),"\n",(0,r.jsx)(n.p,{children:"To recap the steps we took:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705\xa0\xa0",(0,r.jsx)(n.code,{children:"api"}),": Defined your Promise API as a Custom Resource Definition"]}),"\n",(0,r.jsx)(n.li,{children:"\u2705\xa0\xa0Created your Resource base manifest"}),"\n",(0,r.jsxs)(n.li,{children:["\u2705\xa0\xa0",(0,r.jsx)(n.code,{children:"workflows"}),": Built a simple pipeline step for Resource configuration"]}),"\n",(0,r.jsx)(n.li,{children:"\u2705\xa0\xa0Packaged the pipeline step as a Docker image"}),"\n",(0,r.jsx)(n.li,{children:"\u2705\xa0\xa0Tested the Docker image"}),"\n",(0,r.jsxs)(n.li,{children:["\u2705\xa0\xa0",(0,r.jsx)(n.code,{children:"dependencies"}),": Defined what needs to be present on\nyour Destinations to fulfil this Promise"]}),"\n",(0,r.jsx)(n.li,{children:"\u2705\xa0\xa0Installed your Kratix Promise"}),"\n",(0,r.jsx)(n.li,{children:"\u2705\xa0\xa0Created and submitted a request for the promised Resource"}),"\n",(0,r.jsx)(n.li,{children:"\u2705\xa0\xa0Reviewed the components of a Promise"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cleanup",children:"Clean up environment"}),"\n",(0,r.jsx)(n.p,{children:"To clean up your environment first delete the requests for the Jenkins"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM delete --filename resource-request.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify the resources belonging to the Resources have been deleted in the worker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"kubectl --context $WORKER get pods\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now the Resources have been deleted you can delete the Promises"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM delete --filename promise.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify that the Dependencies are deleted from the worker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"kubectl --context $WORKER get pods\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"--congratulations",children:"\ud83c\udf89 \xa0 Congratulations!"}),"\n",(0,r.jsxs)(n.p,{children:["\u2705\xa0\xa0 You have written a Kratix Promise. ",(0,r.jsx)("br",{}),"\n\ud83d\udc49\ud83c\udffe\xa0\xa0 Let's ",(0,r.jsx)(n.a,{href:"./scheduling",children:"add a new Worker"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}const x={description:"Guide on how to write and package a Kratix Promise",title:"Writing a Promise"},j=void 0,f={id:"main/guides/writing-a-promise",title:"Writing a Promise",description:"Guide on how to write and package a Kratix Promise",source:"@site/docs/main/04-guides/03-writing-a-promise.mdx",sourceDirName:"main/04-guides",slug:"/main/guides/writing-a-promise",permalink:"/main/guides/writing-a-promise",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/04-guides/03-writing-a-promise.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Guide on how to write and package a Kratix Promise",title:"Writing a Promise"},sidebar:"mainSidebar",previous:{title:"Installing and using a Promise",permalink:"/main/guides/installing-a-promise"},next:{title:"Adding a new Destination",permalink:"/main/guides/scheduling"}},g={},b=[...t.d$,...u];function y(e){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.ZP,{}),"\n",(0,r.jsx)(m,{})]})}function w(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(y,{...e})}):y()}},5162:(e,n,i)=>{i.d(n,{Z:()=>o});i(7294);var r=i(6905);const s={tabItem:"tabItem_Ymn6"};var t=i(5893);function o(e){let{children:n,hidden:i,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:i,children:n})}},4866:(e,n,i)=>{i.d(n,{Z:()=>k});var r=i(7294),s=i(6905),t=i(2466),o=i(6550),a=i(469),l=i(1980),c=i(7392),d=i(812);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:r,default:s}}=e;return{value:n,label:i,attributes:r,default:s}}))}(i);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:i}=e;const s=(0,o.k6)(),t=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l._X)(t),(0,r.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})}),[t,s])]}function x(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,t=u(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=i.find((e=>e.default))??i[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:t}))),[c,h]=m({queryString:i,groupId:s}),[x,j]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,t]=(0,d.Nk)(i);return[s,(0,r.useCallback)((e=>{i&&t.set(e)}),[i,t])]}({groupId:s}),f=(()=>{const e=c??x;return p({value:e,tabValues:t})?e:null})();(0,a.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),j(e)}),[h,j,t]),tabValues:t}}var j=i(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=i(5893);function b(e){let{className:n,block:i,selectedValue:r,selectValue:o,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.o5)(),d=e=>{const n=e.currentTarget,i=l.indexOf(n),s=a[i].value;s!==r&&(c(n),o(s))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},n),children:a.map((e=>{let{value:n,label:i,attributes:t}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:h,onClick:d,...t,className:(0,s.Z)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":r===n}),children:i??n},n)}))})}function y(e){let{lazy:n,children:i,selectedValue:s}=e;const t=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=x(e);return(0,g.jsxs)("div",{className:(0,s.Z)("tabs-container",f.tabList),children:[(0,g.jsx)(b,{...n,...e}),(0,g.jsx)(y,{...n,...e})]})}function k(e){const n=(0,j.Z)();return(0,g.jsx)(w,{...e,children:h(e.children)},String(n))}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>o});var r=i(7294);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);