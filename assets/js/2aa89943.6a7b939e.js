"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[4761],{4470:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var a=s(5893),t=s(1151);const i={title:"SKE Backstage Generator",description:"Documentation for how to use the SKE Backstage Generator to automatically populate your backstage catalog",sidebar_label:"SKE Backstage Generator"},o=void 0,r={id:"ske/integrations/backstage/generator",title:"SKE Backstage Generator",description:"Documentation for how to use the SKE Backstage Generator to automatically populate your backstage catalog",source:"@site/docs/ske/10-integrations/10-backstage/03-generator.mdx",sourceDirName:"ske/10-integrations/10-backstage",slug:"/ske/integrations/backstage/generator",permalink:"/ske/integrations/backstage/generator",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/ske/10-integrations/10-backstage/03-generator.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"SKE Backstage Generator",description:"Documentation for how to use the SKE Backstage Generator to automatically populate your backstage catalog",sidebar_label:"SKE Backstage Generator"},sidebar:"skeSidebar",previous:{title:"Configuring the Plugins",permalink:"/ske/integrations/backstage/plugins"},next:{title:"YAML File Format",permalink:"/ske/integrations/backstage/yaml-file-format"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"SKE Backstage plugins",id:"ske-backstage-plugins",level:3},{value:"Backstage Destination",id:"destination",level:3},{value:"How does it work?",id:"how-does-it-work",level:2},{value:"Promise Configure",id:"promise-configure",level:3},{value:"Resource Configure",id:"resource-configure",level:3},{value:"Accessing the SKE Generator image",id:"accessing-the-ske-generator-image",level:2},{value:"Pulling the image locally",id:"pulling-the-image-locally",level:3},{value:"Pulling the image from your cluster",id:"pulling-the-image-from-your-cluster",level:3},{value:"Using the image in your Workflows",id:"using-the-image-in-your-workflows",level:2},{value:"Authenticating against the image registry",id:"authenticating-against-the-image-registry",level:3},{value:"Customising the generated Components",id:"customising-the-generated-components",level:2},{value:"Customising the generated Templates",id:"customising-the-generated-templates",level:2},{value:"Providing a Resource Summary",id:"providing-a-resource-summary",level:2},{value:"SKE Backstage Component Promise",id:"ske-backstage-component-promise",level:2},{value:"Component updates with multiple Pipelines",id:"component-updates-with-multiple-pipelines",level:3},{value:"Requesting Backstage Components",id:"requesting-backstage-components",level:4},{value:"Scheduling Backstage Components",id:"scheduling-backstage-components",level:4},{value:"Generate a single Backstage catalog",id:"generate-a-single-backstage-catalog",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The SKE Backstage Generator provides automated generation of the necessary Template and\nComponent manifests for your Promises and requested Resources."}),"\n",(0,a.jsx)(n.p,{children:"These manifests are read by Backstage and are designed to work seamlessly with the\nSKE Backstage plugins."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.h3,{id:"ske-backstage-plugins",children:"SKE Backstage plugins"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"ske-backstage-generator"})," uses an action from the ",(0,a.jsx)(n.code,{children:"ske-backend"})," Backstage plugin.\nThis action is used within the generated Template to create a Resource Request.\nThe generated Components are also used by the ",(0,a.jsx)(n.code,{children:"ske-frontend"})," Backstage plugin to display\nPromise and Resource metadata."]}),"\n",(0,a.jsxs)(n.p,{children:["In order to utilise the Templates and Components, you should also install both the\n",(0,a.jsx)(n.code,{children:"ske-backend"})," and ",(0,a.jsx)(n.code,{children:"ske-frontend"})," plugins into your Backstage instance."]}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"./plugins",children:"Configuring the Plugins"})," for instructions."]}),"\n",(0,a.jsx)(n.h3,{id:"destination",children:"Backstage Destination"}),"\n",(0,a.jsxs)(n.p,{children:["You must have a Destination created with the ",(0,a.jsx)(n.code,{children:"environment: backstage"})," label. See the\n",(0,a.jsx)(n.a,{href:"./configuring-backstage#configure-a-destination-for-backstage",children:"Kratix Backstage docs"}),"\nfor setup instructions."]}),"\n",(0,a.jsx)(n.h2,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"ske-backstage-generator"})," image is intended to be run as part of your\nConfigure Pipeline for your Promise and Resource Workflows. It will\nauto-generate Backstage Template and Component manifests, and schedule them to\nyour ",(0,a.jsx)(n.a,{href:"#destination",children:"Backstage Destination"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"promise-configure",children:"Promise Configure"}),"\n",(0,a.jsx)(n.p,{children:"In a Promise Configure workflow, two Backstage manifests will be generated:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Promise Component:"})," A Backstage Component representing the Promise."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Promise Template:"})," A Backstage Template representing the Promise API (i.e. the CRD\nfor Resources created from this Promise)."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Check the ",(0,a.jsx)(n.a,{href:"./yaml-file-format",children:"YAML File Format"})," for examples of these manifests."]}),"\n",(0,a.jsx)(n.h3,{id:"resource-configure",children:"Resource Configure"}),"\n",(0,a.jsx)(n.p,{children:"In a Resource Configure workflow, a single Backstage manifest will be generated:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Resource Component:"})," A Backstage Component representing the Resource."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Check the ",(0,a.jsx)(n.a,{href:"./yaml-file-format",children:"YAML File Format"})," for examples of these manifests."]}),"\n",(0,a.jsx)(n.h2,{id:"accessing-the-ske-generator-image",children:"Accessing the SKE Generator image"}),"\n",(0,a.jsx)(n.h3,{id:"pulling-the-image-locally",children:"Pulling the image locally"}),"\n",(0,a.jsx)(n.p,{children:"The image is hosted in a private registry. To access the image, you will need to\nauthenticate using the token you have been provided with. For Docker, you can\nrun the following command, providing your token as the password when prompted:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker login registry.syntasso.io --username syntasso-pkg\n"})}),"\n",(0,a.jsx)(n.p,{children:"If you are using a different container engine, follow the docs for your specific\ntool."}),"\n",(0,a.jsx)(n.p,{children:"Once you have authenticated, you can pull any released version of the image."}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["You can select your version from the\n",(0,a.jsx)(n.a,{href:"../../releases/aspects/backstage-generator",children:"releases page"}),". Or, if you have both\n",(0,a.jsx)(n.a,{href:"https://cli.github.com/",children:"GH CLI"})," and ",(0,a.jsx)(n.a,{href:"https://jqlang.github.io/jq/",children:"JQ CLI"}),"\ninstalled, you can fetch the most recent released version using the following command:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"gh api orgs/syntasso/packages/container/ske-backstage-generator/versions | jq -r '.[0].metadata.container.tags[0]'\n"})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker pull registry.syntasso.io/ske-backstage-generator:VERSION\n"})}),"\n",(0,a.jsx)(n.h3,{id:"pulling-the-image-from-your-cluster",children:"Pulling the image from your cluster"}),"\n",(0,a.jsxs)(n.p,{children:["Your Kubernetes cluster must have permission to ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/containers/images/#configuring-nodes-to-authenticate-to-a-private-registry",children:"pull this image from the\nprivate\nregistry"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["If you are following the ",(0,a.jsx)(n.a,{href:"/main/quick-start",children:"quick-start guide"}),", you can load the image\ndirectly to the Kubernetes cache. Different tools have different commands for this. For example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# For minikube\nminikube image load registry.syntasso.io/ske-backstage-generator:VERSION\n\n# For KinD\nkind load docker-image registry.syntasso.io/ske-backstage-generator:VERSION\n"})}),"\n",(0,a.jsx)(n.p,{children:"For other tools, follow their specific documentation."}),"\n",(0,a.jsx)(n.p,{children:"When using the image in your Workflows, you can define the secret you want to use for authentication within your Promise, see below for more details."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"If your cluster is running in a secure environment, you may wish to pull this image and\npush it to an internal registry which your cluster has permission to pull from."})}),"\n",(0,a.jsx)(n.h2,{id:"using-the-image-in-your-workflows",children:"Using the image in your Workflows"}),"\n",(0,a.jsxs)(n.p,{children:["To use the ",(0,a.jsx)(n.code,{children:"ske-backstage-generator"})," image, update your Promise definition to include the\ngenerator as a workflow step for both the Promise Configure and Resource Configure\nworkflows:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Workflows section in a Promise file"',children:"  # ...\n  workflows:\n    promise:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: promise-configure\n          namespace: default\n        spec:\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-promise-pipeline\n          #highlight-start\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n          #highlight-end\n    resource:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: resource-configure\n          namespace: default\n        spec:\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-resource-pipeline\n          #highlight-start\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n          #highlight-end\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once your Promise is updated, the generator will be run as part of your\nWorkflows. If you install the Promise, you should see a Component automatically\nappearing in your Backstage instance, together with a new Template. If you use\nthe Template to create a Resource, you should see the resource Component\nappearing as well as the Resource itself being created in your cluster."}),"\n",(0,a.jsx)(n.p,{children:"In order to have the full status of your Promise or Resource request displayed in Backstage,\nyou should place the aspect as the last image in the last pipeline of your workflow."}),"\n",(0,a.jsxs)(n.p,{children:["If the aspect needs to be used more than once in a Workflow, you should utilise the ",(0,a.jsx)(n.a,{href:"#ske-backstage-component-promise",children:"SKE Backstage\nComponent Promise"}),". Otherwise, you will observe only one of the components\nin Backstage, and Backstage will emit a warning:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'{"level":"warn","message":"Detected conflicting entityRef component:default/my-request-jenkins already referenced by url:http://minio.kratix-platform-system.svc.cluster.local/kratix/backstage/resources/default/cicd/my-request/instance-configure/5cfaf/backstage/catalog-info.yaml and now also url:http://minio.kratix-platform-system.svc.cluster.local/kratix/backstage/resources/default/cicd/my-request/instance-configure-2/5cfaf/backstage/catalog-info.yaml","plugin":"catalog","service":"backstage"}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"authenticating-against-the-image-registry",children:"Authenticating against the image registry"}),"\n",(0,a.jsxs)(n.p,{children:["If you have not loaded the image to your Kubernetes cache or pushed it to an internal registry,\nyou can define your authentication credentials via a ",(0,a.jsx)(n.code,{children:"docker-registry"})," secret and refer to this secret\nin Pipeline definition in your Workflow."]}),"\n",(0,a.jsxs)(n.p,{children:["You can create the secret with the following command, replacing ",(0,a.jsx)(n.code,{children:"YOUR_TOKEN"})," with the token you have\nbeen provided with:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kubectl create secret docker-registry syntasso-registry \\\n  --docker-server=registry.syntasso.io \\\n  --docker-username=syntasso-pkg \\\n  --docker-password=YOUR_TOKEN \\\n  --namespace kratix-platform-system\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The secret must exist in the ",(0,a.jsx)(n.code,{children:"kratix-platform-system"})," namespace as well as any other namespaces where users\nbe able to make requests"]})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"imagePullSecrets"})," field in your Workflow can be used to refer to the new ",(0,a.jsx)(n.code,{children:"syntasso-registry"}),"\nsecret."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"  # ...\n  workflows:\n    promise:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: promise-configure\n          namespace: default\n        spec:\n          #highlight-start\n          imagePullSecrets:\n            - name: syntasso-registry\n          #highlight-end\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-promise-pipeline\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This ensures that, when pulling the ",(0,a.jsx)(n.code,{children:"ske-backstage-generator"})," image, Kubernetes will use the\n",(0,a.jsx)(n.code,{children:"syntasso-registry"})," secrets for authentication."]}),"\n",(0,a.jsx)(n.h2,{id:"customising-the-generated-components",children:"Customising the generated Components"}),"\n",(0,a.jsxs)(n.p,{children:["By default, the generator will create the Backstage Promise ",(0,a.jsx)(n.code,{children:"Component"})," with default values for the ",(0,a.jsx)(n.code,{children:"metadata"})," and\n",(0,a.jsx)(n.code,{children:"spec"})," fields. For a Promise, for example, it will look like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"metadata:\n  name: <Promise Kind>-promise\n  title: <Promise Kind> Promise\n  description: <Promise Kind> as a Service\n  tags:\n    - kratix\nspec:\n  lifecycle: production\n  owner: kratix-platform\n  type: kratix-promise\n  # Other fields are left empty\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can customise these values by setting the following ",(0,a.jsx)(n.code,{children:"env"})," variables in the\nworkflow:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_NAME"}),": the value of ",(0,a.jsx)(n.code,{children:"metadata.name"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_TITLE"}),": the value of ",(0,a.jsx)(n.code,{children:"metadata.title"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_DESCRIPTION"}),": the value of ",(0,a.jsx)(n.code,{children:"metadata.description"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_TAGS"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"metadata.tags"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_TYPE"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.type"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_LIFECYCLE"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.lifecycle"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_OWNER"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.owner"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_SYSTEM"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.system"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_SUBCOMPONENT_OF"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.subcomponentOf"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_PROVIDES_APIS"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"spec.providesApis"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_CONSUMES_APIS"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"spec.consumesApis"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"COMPONENT_DEPENDS_ON"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"spec.dependsOn"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"You can also customise the fields by setting the following annotations in the Promise or Resource object directly:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/name"}),": the value of ",(0,a.jsx)(n.code,{children:"metadata.name"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/title"}),": the value of ",(0,a.jsx)(n.code,{children:"metadata.title"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/description"}),": the value of ",(0,a.jsx)(n.code,{children:"metadata.description"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/tags"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"metadata.tags"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/type"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.type"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/lifecycle"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.lifecycle"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/owner"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.owner"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/system"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.system"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/subcomponentOf"}),": the value of ",(0,a.jsx)(n.code,{children:"spec.subcomponentOf"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/providesApis"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"spec.providesApis"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/consumesApis"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"spec.consumesApis"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ske.backstage.component/dependsOn"}),": comma-separated list of values for ",(0,a.jsx)(n.code,{children:"spec.dependsOn"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["For example, to set ",(0,a.jsx)(n.code,{children:"spec.owner"})," and ",(0,a.jsx)(n.code,{children:"spec.providesApis"}),", you can update your\npipeline stage with the snippet below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Promise workflow with custom Component values"',children:'  #...\n  workflows:\n    promise:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: promise-configure\n          namespace: default\n        spec:\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-promise-pipeline\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n            #highlight-start\n            env:\n            - name: COMPONENT_OWNER\n              value: "platform-team"\n            - name: COMPONENT_PROVIDES_APIS\n              value: "component/api/v1,component/api/v2"\n            #highlight-end\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For any further customisation, you can directly modify the generated ",(0,a.jsx)(n.code,{children:"Component"}),"\nin the ",(0,a.jsx)(n.code,{children:"/kratix/output/backstage/catalog-info.yaml"})," file."]}),"\n",(0,a.jsx)(n.h2,{id:"customising-the-generated-templates",children:"Customising the generated Templates"}),"\n",(0,a.jsxs)(n.p,{children:["By default, the generator will create the Backstage Template with resource namespace as a required field.\nYou can customise this behaviour by setting the following ",(0,a.jsx)(n.code,{children:"env"})," variables in the workflow:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"TEMPLATE_NAMESPACE"}),": the default value of the resource namespace"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"TEMPLATE_NAMESPACE_FIELD_TITLE"}),": the name of the resource namespace field in Backstage UI"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"TEMPLATE_NAMESPACE_FIELD_DESCRIPTION"}),": the description of the resource namespace field in Backstage UI"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"TEMPLATE_HIDE_NAMESPACE"}),": set to ",(0,a.jsx)(n.code,{children:"true"})," if you would like to hide the namespace field from the generated resource\nTemplate.\nResource namespace will default to ",(0,a.jsx)(n.code,{children:"TEMPLATE_NAMESPACE"})," when it is set, otherwise will be set to ",(0,a.jsx)(n.code,{children:"default"})," namespace."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["For example, to generate the resource Template without the namespace field and set the resource namespace to ",(0,a.jsx)(n.code,{children:"my-team"}),"\nfor all resource requests:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Promise workflow with custom Template values"',children:'  #...\n  workflows:\n    promise:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: promise-configure\n          namespace: default\n        spec:\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-promise-pipeline\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n            #highlight-start\n            env:\n            - name: TEMPLATE_NAMESPACE\n              value: "my-team"\n            - name: TEMPLATE_HIDE_NAMESPACE\n              value: "true"\n            #highlight-end\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For any further customisation, you can directly modify the generated ",(0,a.jsx)(n.code,{children:"Template"}),"\nin the ",(0,a.jsx)(n.code,{children:"/kratix/output/backstage/catalog-info.yaml"})," file."]}),"\n",(0,a.jsx)(n.h2,{id:"providing-a-resource-summary",children:"Providing a Resource Summary"}),"\n",(0,a.jsx)(n.p,{children:"On the Resource Component page, it's possible to include a free-form text block\nto provide documentation about the resource."}),"\n",(0,a.jsxs)(n.p,{children:["To do this, set the ",(0,a.jsx)(n.code,{children:"ske.backstage.component/summary"})," annotation on the Promise object:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: platform.kratix.io/v1alpha1\nkind: Promise\nmetadata:\n  #...\n  annotations:\n    ske.backstage.component/summary: |\n      Some information about this Promise.\n\n      This accepts **markdown!**\n"})}),"\n",(0,a.jsx)(n.p,{children:"The text will be rendered on each Resource Component page in Backstage."}),"\n",(0,a.jsx)(n.h2,{id:"ske-backstage-component-promise",children:"SKE Backstage Component Promise"}),"\n",(0,a.jsx)(n.p,{children:"The SKE Backstage Component Promise provides additional functionality to the SKE\nBackstage integration by offloading management of Backstage Components and\nTemplates files from your Promises. The Promise enables the following features:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Allow updates to the Backstage Component and Templates while a Pipeline is still running."}),"\n",(0,a.jsxs)(n.li,{children:["Enables the combination of multiple Backstage Components and Templates into a single\n",(0,a.jsx)(n.code,{children:"catalog-info.yaml"})," file. For some Backstage integrations, such as GitLab,\nthis is a requirement."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["You can install the Promise via ",(0,a.jsx)(n.code,{children:"kubectl"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"kubectl apply -f https://syntasso-enterprise-releases.s3.eu-west-2.amazonaws.com/promises/ske-backstage-component-promise.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"component-updates-with-multiple-pipelines",children:"Component updates with multiple Pipelines"}),"\n",(0,a.jsx)(n.p,{children:"If your Promise or Resource workflow contains multiple Pipelines, you may wish to update\nthe associated Component in Backstage at the end of each Pipeline. For example, the\nResource status could be updated in every Pipeline to convey the latest information about\nthe Resource to the requester in Backstage."}),"\n",(0,a.jsxs)(n.p,{children:["To do this, run the SKE Backstage Generator as normal, then create a\nrequest to the SKE Backstage Component Promise within the next pipeline container. In this example the image\n",(0,a.jsx)(n.code,{children:"ghcr.io/syntasso/kratix-marketplace/create-backstage-component-request:v0.1.0"})," is responsible for generating a SKE\nBackstage Component Promise request:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'  # ...\n  workflows:\n    resource:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: resource-configure\n          namespace: default\n        spec:\n          #highlight-start\n          # rbac required by new create-backstage-component-request image\n          rbac:\n            permissions:\n              - apiGroups: ["syntasso.io"]\n                verbs: ["*"]\n                resources: ["backstagecomponents"]\n          #highlight-end\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-resource-pipeline\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n          #highlight-start\n          - image:  ghcr.io/syntasso/kratix-marketplace/create-backstage-component-request:v0.1.0\n            name: create-backstage-component-request\n          #highlight-end\n    promise:\n      configure:\n      - apiVersion: platform.kratix.io/v1alpha1\n        kind: Pipeline\n        metadata:\n          name: promise-configure\n          namespace: default\n        spec:\n          #highlight-start\n          rbac:\n            permissions:\n              - apiGroups: ["syntasso.io"]\n                verbs: ["*"]\n                resources: ["backstagecomponents"]\n          #highlight-end\n          containers:\n          - image: ghcr.io/syntasso/kratix-marketplace/jenkins-configure-pipeline:v0.1.0\n            name: jenkins-promise-pipeline\n          - image: registry.syntasso.io/ske-backstage-generator:VERSION\n            name: ske-backstage-generator\n          #highlight-start\n          - image:  ghcr.io/syntasso/kratix-marketplace/create-backstage-component-request:v0.1.0\n            name: create-backstage-component-request\n          #highlight-end\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["The versions of the ",(0,a.jsx)(n.code,{children:"ske-backstage-generator"})," image used in your Promise specification and\nthe ",(0,a.jsx)(n.code,{children:"ske-backstage-generator"})," image in the SKE Backstage Component Promise must match"]})}),"\n",(0,a.jsx)(n.h4,{id:"requesting-backstage-components",children:"Requesting Backstage Components"}),"\n",(0,a.jsxs)(n.p,{children:["When creating the ",(0,a.jsx)(n.code,{children:"BackstageComponent"})," requests you need to ensure that you set the\ncorrect ",(0,a.jsx)(n.code,{children:".metadata.ownerReferences"})," on the resource to ensure it is deleted when the\nresource/promise is deleted. An example of this is shown below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: syntasso.io/v1alpha1\nkind: BackstageComponent\nmetadata:\n  name: <unique-name>\n  namespace: <same namespace as the request (kratix-platform-system for promises)>\n  ownerReferences:\n  - apiVersion: <apiVersion of the parent object>\n    blockOwnerDeletion: false\n    controller: false\n    kind: <kind of the parent object>\n    name: <name of the parent object>\n    uid: <uid of the parent object>\nspec:\n- resources: |\n  ... # contents of /kratix/output/backstage/catalog-info.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"name"})," ",(0,a.jsx)(n.code,{children:"apiVersion"}),", ",(0,a.jsx)(n.code,{children:"kind"})," and ",(0,a.jsx)(n.code,{children:"uid"})," fields under ",(0,a.jsx)(n.code,{children:"ownerReferences"})," must equal\nthe parent object for this request, which is the ",(0,a.jsx)(n.code,{children:"/kratix/input/object.yaml"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"spec.resources"})," needs to be a string containing the Backstage Component/Template\nYAML files."]}),"\n",(0,a.jsx)(n.p,{children:"Running in this mode, the SKE Backstage Generator will not schedule the Backstage\ndocuments itself. Instead, it will delegate this responsibility to the SKE Backstage\nComponent Promise."}),"\n",(0,a.jsx)(n.p,{children:"This allows the Backstage Component document to be managed per-Resource, meaning Resource\nmetadata such as the status can be updated across multiple Pipelines."}),"\n",(0,a.jsxs)(n.p,{children:["After creating the ",(0,a.jsx)(n.code,{children:"BackstageComponent"})," request, you need to ensure your\npipeline does not also schedule the same document to the Backstage Destination.\nTo prevent this you can ",(0,a.jsx)(n.code,{children:"rm -rf /kratix/output/backstage"})," and remove the\n",(0,a.jsx)(n.code,{children:"dir: backstage"})," entry in your ",(0,a.jsx)(n.code,{children:"/kratix/metadata/destination-selectors.yaml"})," after\nmaking the request."]}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Example bash pipeline script"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'              - image: ghcr.io/syntasso/kratix-pipeline-utility:v0.0.1\n                name: make-backstage-request\n                command: [ "sh" ]\n                args:\n                  - -c\n                  - |\n                    export name="$(yq eval \'.metadata.name\' /kratix/input/object.yaml)"\n                    export namespace="$(yq eval \'.metadata.namespace\' /kratix/input/object.yaml)"\n                    export promise_name=$KRATIX_PROMISE_NAME\n\n                    kind=$(yq eval \'.kind\' /kratix/input/object.yaml)\n                    api_version=$(yq eval \'.apiVersion\' /kratix/input/object.yaml)\n                    uid=$(yq eval \'.metadata.uid\' /kratix/input/object.yaml)\n                    concatenated_string="${promise_name}-${namespace}-${name}"\n                    hash=$(echo -n "$concatenated_string" | sha256sum | cut -c1-5)\n                    truncated_string=$(echo -n "$concatenated_string" | cut -c1-50)\n                    deterministic_name="${truncated_string}-${hash}"\n\n                    cd /kratix/output/\n\n                    cat <<EOF > rr.yaml\n                    apiVersion: syntasso.io/v1alpha1\n                    kind: BackstageComponent\n                    metadata:\n                      name: $deterministic_name\n                      namespace: $namespace\n                      ownerReferences:\n                      - apiVersion: $api_version\n                        blockOwnerDeletion: false\n                        controller: false\n                        kind: $kind\n                        name: $name\n                        uid: $uid\n                    spec: {}\n                    EOF\n\n                    # set .spec.resources equal to file contents of catalog-info.yaml\n                    yq eval \'.spec.resources = strload("backstage/catalog-info.yaml")\' -i rr.yaml\n                    kubectl apply -f rr.yaml\n                    rm -rf /kratix/output/rr.yaml /kratix/output/backstage/ /kratix/metadata/destination-selectors.yaml\n'})})]}),"\n",(0,a.jsx)(n.h4,{id:"scheduling-backstage-components",children:"Scheduling Backstage Components"}),"\n",(0,a.jsxs)(n.p,{children:["By default, ",(0,a.jsx)(n.code,{children:"BackstageComponent"})," requests are scheduled to your Backstage destination.\nIf you need to schedule a ",(0,a.jsx)(n.code,{children:"BackstageComponent"})," to a destination other than\nthe default Backstage destination with label ",(0,a.jsx)(n.code,{children:"environment: backstage"}),", you can set the\n",(0,a.jsx)(n.code,{children:".spec.destinationSelectors"})," on the resource to customize its scheduling behavior.\nAn example of this is shown below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: syntasso.io/v1alpha1\nkind: BackstageComponent\nmetadata:\n  name: A-NAME\n  namespace: NAMESPACE\nspec:\n  destinationSelectors:\n  - matchLabels:\n      environment: backstage-instance-one\n      team: billing\n- resources: |\n  ... # contents of /kratix/output/backstage/catalog-info.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"generate-a-single-backstage-catalog",children:"Generate a single Backstage catalog"}),"\n",(0,a.jsxs)(n.p,{children:["Using the SKE Backstage Component Promise, you can optionally choose to write a single\n",(0,a.jsx)(n.code,{children:"catalog-info.yaml"})," file for Backstage to read from, instead of the default behaviour of\none catalog file per Promise or resource request."]}),"\n",(0,a.jsx)(n.p,{children:"To do this, there are two steps required:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Configuring the SKE Backstage Generator to write all of the Backstage manifests in a\nsingle ",(0,a.jsx)(n.code,{children:"catalog-info.yaml"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Configuring all of your Promises to use the SKE Backstage Component Promise."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"First, apply the following config map to your Platform cluster:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\ndata:\n  allInOne: "true"\nkind: ConfigMap\nmetadata:\n  name: ske-backstage-component-promise-config\n  namespace: kratix-platform-system\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Then configure all of your Promises which use the SKE Backstage Generator to make a request\nto the SKE Backstage Component Promise within your Pipeline, as illustrated in the ",(0,a.jsx)(n.a,{href:"#component-updates-with-multiple-pipelines",children:"section\nabove"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["To ensure that a single ",(0,a.jsx)(n.code,{children:"catalog-info.yaml"})," file is created, you must ensure that ",(0,a.jsx)(n.strong,{children:"all"}),"\nof your Promises which use the SKE Backstage Generator are set up to make a request\nto the SKE Backstage Component Promise in ",(0,a.jsx)(n.strong,{children:"both"})," the Promise and Resource workflows."]})}),"\n",(0,a.jsxs)(n.p,{children:["Configuring the ",(0,a.jsx)(n.code,{children:"allInOne"})," field to ",(0,a.jsx)(n.code,{children:"true"})," will cause the SKE Backstage Component Promise\nto aggregate the Backstage Component and Template files for all Promises and Resources\ninto a single ",(0,a.jsx)(n.code,{children:"catalog-info.yaml"})," file in the Backstage Destination."]}),"\n",(0,a.jsxs)(n.p,{children:["With these changes, your SKE Backstage integration will result in a single\n",(0,a.jsx)(n.code,{children:"catalog-info.yaml"})," file being written to your Backstage Destination containing all of the\ngenerated Component and Template manifests."]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>o});var a=s(7294);const t={},i=a.createContext(t);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);