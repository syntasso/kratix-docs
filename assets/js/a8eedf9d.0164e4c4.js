"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[3403],{422:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var r=t(4848),i=t(8453);const s=[{value:"Register cluster as a Destination with Kratix",id:"register-cluster-as-a-destination-with-kratix",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"register-cluster-as-a-destination-with-kratix",children:"Register cluster as a Destination with Kratix"}),"\n",(0,r.jsxs)(n.p,{children:["We need to register the cluster with Kratix so that it can be used as a\ndestination for deploying to. Use the template below to create a\n",(0,r.jsx)(n.code,{children:"Worker"})," ",(0,r.jsx)(n.a,{href:"/main/reference/destinations/intro",children:"Destination"})," resource:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: platform.kratix.io/v1alpha1\nkind: Destination\nmetadata:\n  name: worker\n  labels:\n    environment: dev\nspec:\n  path: worker\n  stateStoreRef:\n    name: default\n    kind: <BucketStateStore or GitStateStore>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once filled in with the correct values, apply the resource to the platform cluster:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply --context $PLATFORM --filename <path-to-worker-destination-resource>\n"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1994:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var r=t(4848),i=t(8453);const s=[{value:"Set up State Store",id:"set-up-state-store",level:2}];function a(e){const n={a:"a",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"set-up-state-store",children:"Set up State Store"}),"\n",(0,r.jsxs)(n.p,{children:["Kratix uses GitOps to provision resources on the worker clusters. You can\nconfigure Kratix with multiple GitOps repositories by creating ",(0,r.jsx)(n.a,{href:"/main/reference/statestore/intro",children:"State\nStores"}),". Kratix supports ",(0,r.jsx)(n.a,{href:"/main/reference/statestore/bucketstatestore",children:"Bucket State\nStore"})," and ",(0,r.jsx)(n.a,{href:"/main/reference/statestore/gitstatestore",children:"Git State\nStore"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Using a Git State Store is recommended for production environments as it provides\nbetter security and version control. However, for development and testing\npurposes, you can also use the Bucket State Store."})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},3168:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>a});var r=t(4848),i=t(8453),s=t(4816);const a=[{value:"Set up Kratix",id:"set-up-kratix",level:2},{value:"Install cert-manager",id:"install-cert-manager",level:3},...s.RM,{value:"Install Kratix",id:"install-kratix",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"set-up-kratix",children:"Set up Kratix"}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.p,{children:"These instructions are intended for teams preparing to install Kratix in semi-permanent\nor permanent environments."}),(0,r.jsxs)(n.p,{children:["If you are just getting started and have access to a disposable/empty cluster we highly\nrecommend you get started with the ",(0,r.jsx)(n.a,{href:"../../main/quick-start",children:"quick start"})," instructions\nwhich can be used on all Kubernetes clusters and configures a Kratix and its first\nDestination and State Store backed by MinIO which is configured for learning but is not\nrobust or durable enough for production use."]})]}),"\n",(0,r.jsx)(n.h3,{id:"install-cert-manager",children:"Install cert-manager"}),"\n",(0,r.jsx)(s.Ay,{}),"\n",(0,r.jsx)(n.h3,{id:"install-kratix",children:"Install Kratix"}),"\n",(0,r.jsx)(n.p,{children:"Install Kratix on the Platform Cluster."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply --context $PLATFORM --filename https://github.com/syntasso/kratix/releases/latest/download/kratix.yaml\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can also install and configure Kratix with Helm. For more information, see\nthe ",(0,r.jsx)(n.a,{href:"https://github.com/syntasso/helm-charts",children:"Helm Chart"})," documentation."]}),"\n",(0,r.jsxs)(n.p,{children:["Make sure that ",(0,r.jsx)(n.code,{children:"kratix"})," is ready before proceeding:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell-session",children:"$ kubectl --context $PLATFORM get pods --namespace kratix-platform-system\nNAME                                                 READY   STATUS    RESTARTS   AGE\nkratix-platform-controller-manager-78d57569b-bn4t4   2/2     Running   0          25s\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},4808:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var r=t(4848),i=t(8453);t(5537),t(9329);const s=[{value:"Installing and Configuring a GitOps agent",id:"installing-and-configuring-a-gitops-agent",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"installing-and-configuring-a-gitops-agent",children:"Installing and Configuring a GitOps agent"}),"\n",(0,r.jsxs)(n.p,{children:["Now that your Kubernetes Destination is created and Kratix is aware of it, the\nlast step is to install and configure a GitOps agent so that Kubernetes documents\nthat get written to the ",(0,r.jsx)(n.code,{children:"StateStore"})," are deployed to the cluster. Kratix is agnostic to\nwhich GitOps agent you choose to use. See our ",(0,r.jsx)(n.a,{href:"../../category/installing-gitops-agent",children:"GitOps Agent installation"}),"\ndocumentation for configuring the GitOps agent of your choice."]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},4816:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var r=t(4848),i=t(8453);const s=[{value:"Webhook Service",id:"webhook-service",level:4},{value:"Metrics Service",id:"metrics-service",level:4}];function a(e){const n={a:"a",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Kratix requires a set of certificates in order to deploy its internal\n",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/",children:"Validating and Mutating Kubernetes\nwebhooks"}),".\nBy default Kratix is configured to use ",(0,r.jsx)(n.a,{href:"https://cert-manager.io/",children:"cert-manager"})," to\ngenerate the certificates, therefore we need to install cert-manager. If you already\nhave it installed, skip to the next section."]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:" Don't want to use cert-manager? Manually provide the required certificates "}),(0,r.jsx)(n.p,{children:"Cert-manager is used to generate CA certificates and key/cert pairs for the Kratix webhook\nand Metrics Services."}),(0,r.jsx)(n.h4,{id:"webhook-service",children:"Webhook Service"}),(0,r.jsx)(n.p,{children:"You will need to generate a CA Certificate and key/cert pair for the following DNS names:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"kratix-platform-webhook-service.kratix-platform-system.svc.cluster.local"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"kratix-platform-webhook-service.kratix-platform-system.svc"})}),"\n"]}),(0,r.jsxs)(n.p,{children:["To manually provide the required certificates, you need to create the\n",(0,r.jsx)(n.code,{children:"webhook-server-cert"})," secret in the ",(0,r.jsx)(n.code,{children:"kratix-platform-system"})," namespace with the\nfollowing keys:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\ndata:\n  ca.crt: # Base64 CA certificate\n  tls.crt: # Base64 encoded Server certificate\n  tls.key: # Base64 encoded Server private key\nkind: Secret\nmetadata:\n  name: webhook-server-cert\n  namespace: kratix-platform-system\ntype: kubernetes.io/tls\n"})}),(0,r.jsxs)(n.p,{children:["As part of installing Kratix we create a few resources that require the CA\ncertificate. You will have to manually add the CA certificate to the resources\nmentioned below, and manually remove the cert-manager ",(0,r.jsx)(n.code,{children:"Certificate"})," and ",(0,r.jsx)(n.code,{children:"Issuer"}),"\nresources. The following resources need to be updated to contain the Base64\nencoded CA certificate:"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"MutatingWebhookConfiguration/kratix-platform-mutating-webhook-configuration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: kratix-platform-mutating-webhook-configuration\nwebhooks:\n- admissionReviewVersions:\n  - v1\n  clientConfig:\n    caBundle: .... #  there might be multiple admissionReviewVersions, ensure you update all of them\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"ValidatingWebhookConfiguration/kratix-platform-validating-webhook-configuration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: kratix-platform-validating-webhook-configuration\nwebhooks:\n- admissionReviewVersions:\n  - v1\n  clientConfig:\n    caBundle: .... #  there might be multiple admissionReviewVersions, ensure you update all of them\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"CustomResourceDefinition/promises.platform.kratix.io"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: promises.platform.kratix.io\nspec:\n  conversion:\n    strategy: Webhook\n    webhook:\n      clientConfig:\n        caBundle: ....\n"})}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:"Lastly, you need to remove the following cert-manager Issuer and Certificate from Kratix release manifest:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"---\n...\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: kratix-platform-serving-cert\n  namespace: kratix-platform-system\nspec:\n...\n---\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: kratix-platform-selfsigned-issuer\n  namespace: kratix-platform-system\nspec:\n...\n"})}),(0,r.jsx)(n.h4,{id:"metrics-service",children:"Metrics Service"}),(0,r.jsx)(n.p,{children:"You will need to generate a CA Certificate and key/cert pair for the following DNS names:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"kratix-platform-controller-manager-metrics-service.kratix-platform-system.svc"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"kratix-platform-controller-manager-metrics-service.kratix-platform-system.svc.cluster.local"})}),"\n"]}),(0,r.jsxs)(n.p,{children:["To manually provide the required certificates, you need to create the\n",(0,r.jsx)(n.code,{children:"metrics-server-cert"})," secret in the ",(0,r.jsx)(n.code,{children:"kratix-platform-system"})," namespace with the\nfollowing keys:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\ndata:\n  ca.crt: # Base64 CA certificate\n  tls.crt: # Base64 encoded Server certificate\n  tls.key: # Base64 encoded Server private key\nkind: Secret\nmetadata:\n  name: metrics-server-cert\n  namespace: kratix-platform-system\ntype: kubernetes.io/tls\n"})}),(0,r.jsxs)(n.p,{children:["This secret is referenced in the ",(0,r.jsx)(n.code,{children:"kratix-platform-controller-manager"})," Deployment."]}),(0,r.jsx)(n.p,{children:"Lastly, you need to remove the following cert-manager Certificate from Kratix release manifest:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"---\n...\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: kratix-platform-metrics-server-cert\n  namespace: kratix-platform-system\nspec:\n...\n"})})]}),"\n",(0,r.jsx)(n.p,{children:"To install it, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl --context $PLATFORM apply --filename https://github.com/cert-manager/cert-manager/releases/download/v1.15.0/cert-manager.yaml\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Make sure that ",(0,r.jsx)(n.code,{children:"cert-manager"})," is ready before installing Kratix:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell-session",children:"$ kubectl --context $PLATFORM get pods --namespace cert-manager\nNAME                                      READY   STATUS    RESTARTS   AGE\ncert-manager-7476c8fcf4-r8cnd             1/1     Running   0          19s\ncert-manager-cainjector-bdd866bd4-7d8zp   1/1     Running   0          19s\ncert-manager-webhook-5655dcfb4b-54r49     1/1     Running   0          19s\n"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>y});var r=t(6540),i=t(8215),s=t(5627),a=t(6347),o=t(372),l=t(604),c=t(1861),d=t(8749);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=h(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,u]=m({queryString:t,groupId:i}),[x,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),g=(()=>{const e=c??x;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{g&&l(g)}),[g]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function k(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),i=o[t].value;i!==r&&(c(n),a(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...s,className:(0,i.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function b(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,j.jsx)(k,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function y(e){const n=(0,f.A)();return(0,j.jsx)(b,{...e,children:u(e.children)},String(n))}},5838:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var r=t(4848),i=t(8453);const s=[];function a(e){const n={a:"a",admonition:"admonition",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["This guide is for ",(0,r.jsx)(n.strong,{children:"installing the latest OSS version of the Kratix project"})]}),(0,r.jsx)(n.p,{children:"Depending on your goals, you might instead want to:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 Install ",(0,r.jsx)(n.a,{href:"/ske/installing-ske/preconfigured-install",children:"Syntasso Kratix Enterprise (SKE) Quick Start"}),":\nquick experimentation on a disposable cluster using enterprise features."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 Install ",(0,r.jsx)(n.a,{href:"/ske/installing-ske/intro",children:"Syntasso Kratix Enterprise (SKE) (Full\nInstallation)"}),": for setting up a\n",(0,r.jsx)(n.strong,{children:"production-grade"}),", secure, and compliant Kratix platform with full enterprise\ncapabilities."]}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8265:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var r=t(4848),i=t(8453);const s=[{value:"Configuring Metrics Collection",id:"configuring-metrics-collection",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"configuring-metrics-collection",children:"Configuring Metrics Collection"}),"\n",(0,r.jsxs)(n.p,{children:["The Kratix Metrics Service emits a ",(0,r.jsx)(n.a,{href:"https://book.kubebuilder.io/reference/metrics-reference.html",children:"default set of metrics"})," which detail the Kratix Controller's performance as a whole. These can be collected via Prometheus-compatible scraping."]}),"\n",(0,r.jsxs)(n.p,{children:["Prometheus is not installed with Kratix so you'll first need to install the ",(0,r.jsx)(n.a,{href:"https://github.com/prometheus-operator/prometheus-operator",children:"Prometheus Operator"})," on your cluster. Once installed, you can create a Service Monitor to scrape metrics from the ",(0,r.jsx)(n.code,{children:"kratix-platform-controller-manager-metrics-service"})," Metrics Service:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    control-plane: controller-manager\n    release: prometheus\n  name: prometheus-kube-kratix-prometheus\n  namespace: kratix-platform-system\nspec:\n  endpoints:\n    - path: /metrics\n      port: https\n      scheme: https\n      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token\n      tlsConfig:\n        serverName: kratix-platform-controller-manager-metrics-service.kratix-platform-system.svc\n        ca:\n          secret:\n            name: metrics-server-cert\n            key: "tls.crt"\n  namespaceSelector:\n    matchNames:\n      - kratix-platform-system\n  selector:\n    matchLabels:\n      control-plane: controller-manager\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The Service Monitor must be created in the same Namespace as the ",(0,r.jsx)(n.code,{children:"metrics-server-cert"})," Secret."]})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var r=t(8215);const i={tabItem:"tabItem_Ymn6"};var s=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,a),hidden:t,children:n})}},9902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>h,metadata:()=>r,toc:()=>x});const r=JSON.parse('{"id":"main/guides/installing-kratix/openshift","title":"RedHat OpenShift (RHOCP)","description":"Run Kratix","source":"@site/docs/main/04-guides/01-installing-kratix/04-openshift.mdx","sourceDirName":"main/04-guides/01-installing-kratix","slug":"/main/guides/installing-kratix-openshift","permalink":"/main/guides/installing-kratix-openshift","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/04-guides/01-installing-kratix/04-openshift.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"description":"Run Kratix","slug":"/main/guides/installing-kratix-openshift","title":"RedHat OpenShift (RHOCP)"},"sidebar":"mainSidebar","previous":{"title":"Google Kubernetes Engine (GKE)","permalink":"/main/guides/installing-kratix-GKE"},"next":{"title":"Others (KinD etc)","permalink":"/main/guides/installing-kratix-others"}}');var i=t(4848),s=t(8453),a=(t(5537),t(9329),t(3168)),o=t(4808),l=t(1994),c=t(422),d=t(8265),u=t(5838);const h={description:"Run Kratix",slug:"/main/guides/installing-kratix-openshift",title:"RedHat OpenShift (RHOCP)"},p=void 0,m={},x=[...u.RM,{value:"Set up Platform Cluster",id:"platform-setup",level:2},...a.RM,...l.RM,...c.RM,{value:"Set up Destination",id:"worker-setup",level:2},...o.RM,...d.RM];function f(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(u.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"platform-setup",children:"Set up Platform Cluster"}),"\n",(0,i.jsxs)(n.p,{children:["If you are not using a pre-existing cluster, create your Platform Cluster using\nyour OpenShift console. Then login to the cluster using the ",(0,i.jsx)(n.code,{children:"oc"})," cli and run the\nfollowing to export the ",(0,i.jsx)(n.code,{children:"PLATFORM"})," environment variable:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl config current-context\nexport PLATFORM=<platform-context-name>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Kratix docker images are hosted on the ",(0,i.jsx)(n.code,{children:"syntasso.docker.scarf.sh"})," registry, ensure you've\nconfigured your cluster to ",(0,i.jsx)(n.a,{href:"https://docs.openshift.com/container-platform/4.17/openshift_images/image-configuration.html",children:"allow access to the registry"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsxs)(n.p,{children:["Some users have reported issues with accessing the\n",(0,i.jsx)(n.code,{children:"syntasso.docker.scarf.sh"})," registry even after adding it as a supported registry:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'kubectl -n kratix-platform-system get pods\nNAME                                                 READY   STATUS             RESTARTS   AGE\nkratix-platform-controller-manager-7698bb84d-82dfm   0/1     ImagePullBackOff   0          95s\nminio-54f847c6c5-4t9jb                               1/1     Running            0          93s\n\nkubectl -n kratix-platform-system describe pod kratix-platform-controller-manager-7698bb84d-82dfm\n...\nFailed to pull image "syntasso.docker.scarf.sh/syntasso/kratix-platform": fetching target platform image selected from image index: reading manifest sha256:... in syntasso.docker.scarf.sh/syntasso/kratix-platform: received unexpected HTTP status: 500 Internal Server Error\n'})}),(0,i.jsx)(n.p,{children:"If this event occurs, we recommend one of the following actions:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the Docker Hub Registry instead. Update the image references from ",(0,i.jsx)(n.code,{children:"syntasso.docker.scarf.sh/syntasso"})," to ",(0,i.jsx)(n.code,{children:"syntasso"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Host Images in your own registry. Push the images to your own container registry and update references accordingly."}),"\n"]}),(0,i.jsx)(n.p,{children:"The image references need to be updated in the following locations:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"kratix-platform-controller-manager"})," deployment in the ",(0,i.jsx)(n.code,{children:"kratix-platform-system"})," namespace."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"kratix-platform-pipeline-adapter-config"})," ConfigMap in the ",(0,i.jsx)(n.code,{children:"kratix-platform-system"})," namespace."]}),"\n"]})]}),"\n",(0,i.jsx)(a.Ay,{}),"\n",(0,i.jsx)(l.Ay,{}),"\n",(0,i.jsx)(c.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"worker-setup",children:"Set up Destination"}),"\n",(0,i.jsxs)(n.p,{children:["If you are not using a pre-existing cluster, create a Worker Cluster following\nthe same steps as the ",(0,i.jsx)(n.a,{href:"#platform-setup",children:"Platform Cluster setup"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Once completed, log in to your cluster using the ",(0,i.jsx)(n.code,{children:"oc"})," cli and set the ",(0,i.jsx)(n.code,{children:"WORKER"})," environment\nvariable:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl config current-context\nexport WORKER=<worker-context-name>\n"})}),"\n",(0,i.jsx)(o.Ay,{}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Some GitOps Agents may require additional configuration to work with OpenShift.\nPlease check the documentation for your specific GitOps Agent for any additional\nsteps."})}),"\n",(0,i.jsx)(d.Ay,{})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}}}]);