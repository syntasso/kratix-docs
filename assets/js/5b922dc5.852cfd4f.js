"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[6325],{5969:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=r(5893),n=r(1151);const a={},s="kratix init",o={id:"main/kratix-cli/reference/kratix-init",title:"kratix init",description:"Command used to initialize Kratix resources",source:"@site/docs/main/06-kratix-cli/20-reference/06_kratix-init.md",sourceDirName:"main/06-kratix-cli/20-reference",slug:"/main/kratix-cli/reference/kratix-init",permalink:"/main/kratix-cli/reference/kratix-init",draft:!1,unlisted:!1,editUrl:"https://github.com/syntasso/kratix-docs/tree/main/docs/main/06-kratix-cli/20-reference/06_kratix-init.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"mainSidebar",previous:{title:"kratix build promise",permalink:"/main/kratix-cli/reference/kratix-build-promise"},next:{title:"kratix init helm-promise",permalink:"/main/kratix-cli/reference/kratix-init-helm-promise"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Flags",id:"flags",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"kratix-init",children:"kratix init"}),"\n",(0,t.jsx)(i.p,{children:"Command used to initialize Kratix resources"}),"\n",(0,t.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(i.p,{children:'Command used to initialize Kratix resources"'}),"\n",(0,t.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"kratix init [command]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"flags",children:"Flags"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"-d, --dir string        The output directory to write the Promise structure to; defaults to '.' (default \".\")\n-g, --group string      The API group for the Promise\n-h, --help              help for init\n-k, --kind string       The kind to be provided by the Promise\n--plural string         The plural form of the kind. Defaults to the kind name with an additional 's' at the end.\n--split                 Split promise.yaml file into multiple files.\n-v, --version string    The group version for the Promise. Defaults to v1alpha1\n"})}),"\n",(0,t.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/main/kratix-cli/reference/kratix",children:"kratix"}),": The Kratix CLI"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/main/kratix-cli/reference/kratix-init-helm-promise",children:"kratix init helm-promise"}),": Initialize a new Promise from a Helm chart"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/main/kratix-cli/reference/kratix-init-operator-promise",children:"kratix init operator-promise"}),": Generate a Promise from a given Kubernetes Operator."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"/main/kratix-cli/reference/kratix-init-promise",children:"kratix init promise"}),": Initialize a new Promise"]}),"\n"]})]})}function m(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,i,r)=>{r.d(i,{Z:()=>o,a:()=>s});var t=r(7294);const n={},a=t.createContext(n);function s(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);