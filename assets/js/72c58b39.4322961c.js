"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[902],{1889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"main/reference/promises/delete","title":"Deleting a Promise","description":"Documentation for deleting a Kratix Promise","source":"@site/docs/main/03-reference/11-promises/02-delete.md","sourceDirName":"main/03-reference/11-promises","slug":"/main/reference/promises/delete","permalink":"/main/reference/promises/delete","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/03-reference/11-promises/02-delete.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"description":"Documentation for deleting a Kratix Promise","title":"Deleting a Promise","sidebar_label":"Deleting"},"sidebar":"mainSidebar","previous":{"title":"Introduction","permalink":"/main/reference/promises/intro"},"next":{"title":"Updates","permalink":"/main/reference/promises/updates"}}');var s=n(4848),r=n(8453);const o={description:"Documentation for deleting a Kratix Promise",title:"Deleting a Promise",sidebar_label:"Deleting"},a=void 0,l={},d=[];function c(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.admonition,{type:"caution",children:(0,s.jsx)(t.p,{children:"Deleting a Promise will cascade delete all the associated requested Resources and Dependencies."})}),"\n",(0,s.jsxs)(t.p,{children:["To delete a Promise, run the command below, making sure to replace the\n",(0,s.jsx)(t.code,{children:"<promise name>"})," with the Promise you want to remove:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell-session",children:"$ kubectl delete promises.platform.kratix.io <promise-name>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Alternatively you can delete a Promise by providing the Promise definition file:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell-session",children:"$ kubectl delete --filename promise.yaml\n"})}),"\n",(0,s.jsx)(t.p,{children:"Deleting a Promise will take a few minutes to complete while Kratix deletes all the\nworkloads associated with Promise, including any requested Resources and all the of the\nPromise dependencies."}),"\n",(0,s.jsxs)(t.p,{children:["If the Promise contains a ",(0,s.jsx)(t.a,{href:"../promises/workflows#delete-workflows",children:"Promise Delete workflow"}),",\nit will also be run during the delete process."]}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.p,{children:"All workloads created by the Promise are applied to the end destinations using GitOps."}),(0,s.jsx)(t.p,{children:"This mean that when Kratix deletes the workloads, it is removing their definitions from\nthe Destination's State Store, and is delegating the responsibility to actually delete\nthem from the destination infrastructure to GitOps (or other deployment solution) on the\ndestinations."}),(0,s.jsx)(t.p,{children:"This results in a small delay between the resources being declared as deleted and them\nbeing deleted on the end destination infrastructure."})]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);