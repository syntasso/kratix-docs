"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[8514],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},8505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"main/troubleshooting","title":"Troubleshooting","description":"Common issues when installing and running Kratix","source":"@site/docs/main/08-troubleshooting.md","sourceDirName":"main","slug":"/main/troubleshooting","permalink":"/main/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/08-troubleshooting.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Troubleshooting","description":"Common issues when installing and running Kratix"},"sidebar":"mainSidebar","previous":{"title":"Frequently Asked Questions","permalink":"/main/faq"},"next":{"title":"Community","permalink":"/main/community"}}');var r=t(4848),s=t(8453);const o={title:"Troubleshooting",description:"Common issues when installing and running Kratix"},l=void 0,c={},a=[{value:"Common issues",id:"common-issues",level:2},{value:"Documents are not appearing in my Destination",id:"documents-are-not-appearing-in-my-destination",level:3},{value:"Documents are being scheduled to the wrong Destination",id:"documents-are-being-scheduled-to-the-wrong-destination",level:3},{value:"Kratix is not starting",id:"kratix-is-not-starting",level:3},{value:"Resource request is not being deleted",id:"resource-request-is-not-being-deleted",level:3},{value:"Promise is not being deleted",id:"promise-is-not-being-deleted",level:3},{value:"Workflow Pod isn&#39;t appearing",id:"workflow-pod-isnt-appearing",level:3},{value:"Workflow Pod stuck in CrashLoopBackOff",id:"workflow-pod-stuck-in-crashloopbackoff",level:3},{value:"Workflow Pod doesn&#39;t have Kubernetes API access",id:"workflow-pod-doesnt-have-kubernetes-api-access",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"common-issues",children:"Common issues"}),"\n",(0,r.jsx)(n.h3,{id:"documents-are-not-appearing-in-my-destination",children:"Documents are not appearing in my Destination"}),"\n",(0,r.jsx)(n.p,{children:"There are many reasons why a document might not appear in a Destination. A\ndocument goes from the Workflow to the Destination in a few steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["The Workflow schedules a document by placing it in ",(0,r.jsx)(n.code,{children:"/kratix/output"})]}),"\n",(0,r.jsxs)(n.li,{children:["Kratix schedules this document to a Destination, taking into account any\nscheduling selectors specified in\n",(0,r.jsx)(n.code,{children:"/kratix/metadata/destination-selectors.yaml"})," or the Promise's static\n",(0,r.jsx)(n.code,{children:".spec.destinationSelectors"}),". If no matching Destination\nexists it will not be scheduled until one is created. See the ",(0,r.jsx)(n.a,{href:"./reference/destinations/multidestination-management",children:"scheduling\ndocumentation for more info"})]}),"\n",(0,r.jsx)(n.li,{children:"Once scheduled it writes the document to the Destination, using the\nDestination's auth credentials."}),"\n",(0,r.jsx)(n.li,{children:"The system at the Destination must be healthy and able to accept the documents\nfor them to appear (e.g. Kubernetes resources or terraform files)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Let's first check:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The workflow outputted the documents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check the Workflow logs for any errors that might not be being handled\ncorrectly.\nYou can query the workflow pods by running"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get pods --selector kratix.io/promise-name=<name of the promise>, \\\n kratix.io/workflow-type=<promise or resource>, \\\n kratix.io/workflow-action=<configure or delete>, \\\n kratix.io/pipeline-name=<name of pipeline>, \\\n kratix.io/resource-name=<name of resource>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Your can use as any combination of these labels depending on the workflow you\nare querying."}),"\n",(0,r.jsxs)(n.p,{children:["You can find the name of a ",(0,r.jsx)(n.em,{children:"specific"})," Pipeline pod by running"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get pods --selector kratix.io/resource-name=<request-name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then inspect the logs for your container, this will be the container name of\nthe workflow Pipeline in your Promise specification"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl logs <workflow-pod-name> -c <container-name>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Check the ",(0,r.jsx)(n.code,{children:"Work"})," resource (an internal Kratix resource that is created to\ncontain the outputs of a Workflow) to see if the document is listed inside\nit."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get work --selector kratix.io/resource-name=<request-name>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Inspect the Work's ",(0,r.jsx)(n.code,{children:".spec"})," to see if your documents are listed"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get work <work-name> -o yaml\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Please note that the ",(0,r.jsx)(n.code,{children:"workload.content"})," is compressed to reduce the size of the Work, to inspect\nthe raw content of the document you can decode and decompress with ",(0,r.jsx)(n.code,{children:"gzip"})," you can do the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"// Get the filepath of the first scheduled document\nkubectl get work <work-name> -o=jsonpath='{.spec.workloadGroups[0].workloads[0].filepath}'\n\n// Get, decode and decompress the content of the first scheduled document\nkubectl get work <work-name> -o=jsonpath='{.spec.workloadGroups[0].workloads[0].content}' | base64 -d | gzip -d\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check the document is scheduled to the correct Destination"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Check the ",(0,r.jsx)(n.code,{children:"WorkPlacement"})," resource (an internal Kratix resource that is\ncreated from the ",(0,r.jsx)(n.code,{children:"Work"})," resource, representing the scheduling of a ",(0,r.jsx)(n.code,{children:"Work"}),")\nto see if the document is listed inside it."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get workplacement --selector kratix.io/work=<work-name>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As with the ",(0,r.jsx)(n.code,{children:"Work"}),", the ",(0,r.jsx)(n.code,{children:"workload.content"})," in a WorkPlacement is compressed to reduce the size of the WorkPlacement, to inspect the raw content of the document you can decode and decompress with ",(0,r.jsx)(n.code,{children:"gzip"})," you can do the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"// Get the filepath of the first scheduled document\nkubectl get workplacement <workplacement-name> -o=jsonpath='{.spec.workloads[0].filepath}'\n\n// Get, decode and decompress the content of the first scheduled document\nkubectl get workplacement <workplacement-name> -o=jsonpath='{.spec.workloads[0].content}' | base64 -d | gzip -d\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"WorkPlacement"})," doesn't exist, this means that no Destination was found\nthat matches the required scheduling selectors. Kratix has been unable to\nschedule the ",(0,r.jsx)(n.code,{children:"Work"}),". See ",(0,r.jsx)(n.a,{href:"#documents-are-being-scheduled-to-the-wrong-destination",children:"below for further steps to\ninvestigate"})]}),"\n",(0,r.jsxs)(n.p,{children:["Inspect the Work's ",(0,r.jsx)(n.code,{children:".spec.targetDestinationName"})," to verify that it is scheduled to the\ncorrect Destination"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get workplacement <workplacement-name> -o yaml | grep targetDestinationName\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The document was successfully written to the Destination"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check the Destination statestore and see if it contains the desired files.\nBy default the files for a workplacement will be in the directory structure\nof:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Promise: ",(0,r.jsx)(n.code,{children:"<destination-name>/dependencies/<promise-name>/<workflow-name>/<files>"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Resource: ",(0,r.jsx)(n.code,{children:"<destination-name>/resources/<namespace>/<promise-name>/<request-name>/<workflow-name>/<files>"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If your Destination is of type ",(0,r.jsx)(n.code,{children:".spec.filepath.mode=none"})," then the files\nwill appear in the top-level directory of the Destination."]}),"\n",(0,r.jsx)(n.p,{children:"If it is not appearing, check the logs of the Kratix operator to see if there\nare any errors connecting to the Destination"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system logs <pod-name> -c manager\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The system reconciling the Destination is healthy (e.g. Flux/Argo)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check the Destination is healthy and able to accept the document. For\nexample, a Destination that is a Kubernetes cluster should have a\nhealthy GitOps installation that can successfully pull from the Destination"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"documents-are-being-scheduled-to-the-wrong-destination",children:"Documents are being scheduled to the wrong Destination"}),"\n",(0,r.jsxs)(n.p,{children:["Kratix uses ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",children:"label\nselectors"}),"\nto match documents to Destinations. If a document is being scheduled to the\nwrong Destination or no Destination at all, it is likely that the label selectors do not match."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check the labels are correctly applied to the Destinations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get destinations --show-labels\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Check the selectors are correctly specified to the documents. Fetch the\nWork for the Workflow and inspect the ",(0,r.jsx)(n.code,{children:".spec.workloadGroups[*].destinationSelectors"})," field."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get work --selector kratix.io/resource-name=<request-name>\nkubectl get work <work-name> -o jsonpath='{.spec.workloadGroups[*].destinationSelectors}'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If this doesn't match the labels on the Destination, the document will not be\nscheduled to the Destination. See the ",(0,r.jsx)(n.a,{href:"./reference/destinations/multidestination-management",children:"scheduling"})," documentation\non how to specify Destination selectors."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"kratix-is-not-starting",children:"Kratix is not starting"}),"\n",(0,r.jsx)(n.p,{children:"Kratix is a Kubernetes operator and uses cert-manager to generate certificates\nfor the webhooks."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check the Kratix operator status"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system get pods\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If the pod is in a ",(0,r.jsx)(n.code,{children:"Pending"})," state or the pod doesn't exist at all, inspect\nthe deployment for any errors"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system describe deployment kratix-platform-controller-manager\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If the pod is in a ",(0,r.jsx)(n.code,{children:"CrashLoopBackOff"})," or ",(0,r.jsx)(n.code,{children:"Errored"})," state, inspect the logs for any errors"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system logs <pod-name> -c manager\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If the pod is in a ",(0,r.jsx)(n.code,{children:"ErrImagePull"})," state check the Kubernetes cluster has the correct\nnetwork settings to pull from the container registry, and that if the image\nis being hosted in a private registry that ",(0,r.jsxs)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",children:[(0,r.jsx)(n.code,{children:"imagePullSecrets"})," are correctly\nconfigured"]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system get deployment kratix-platform-controller-manager -o yaml | grep imagePullSecrets\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If cert manager is not installed or is not working correctly\nKratix will not start. Check cert-manager is installed and working correctly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n cert-manager get pods\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"resource-request-is-not-being-deleted",children:"Resource request is not being deleted"}),"\n",(0,r.jsxs)(n.p,{children:["When a resource request is deleted, Kratix will run any delete pipelines\nassociated with the request and clean up any documents that were created. Kratix uses a Kubernetes\nconcept called\n",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/",children:"finalizers"}),"\nto ensure that all cleanup is done before the resource request is deleted\ncompletely from the system. While a resource is being deleted you will see the\nresource in a deletion state with the presence of a ",(0,r.jsx)(n.code,{children:".metadata.deletionTimestamp"}),"\nfield on the resource."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Check the resource request is in a deletion state","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get <resource-kind> <resource-request> -o jsonpath='{.metadata.deletionTimestamp}'\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["When deleting, Kratix completes three actions as part of cleanup in order. Once an\naction has completed it no longer appears in the ",(0,r.jsx)(n.code,{children:".metadata.finalizer"}),"\nfield. The cleanup steps Kratix completes are:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/delete-workflows"})," for running the delete pipelines associated with\nthe resource request (if any)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/work-cleanup"})," for cleaning up the Work/WorkPlacement resources\ncreated by the resource request"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/workflows-cleanup"})," for cleaning up the Workflows created by the\nresource request"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"As Kratix completes these actions in order, if a resource request is stuck in\ndeletion it is likely that one of the finalizers is not being removed correctly."}),"\n",(0,r.jsx)(n.p,{children:"Check which finalizers are remaining"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get <resource-kind> <resource-request> -o jsonpath='{.metadata.finalizers}'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Check which finalizer is failing (as they run in order, only one will be failing)\nand try to resolve the issue. If you are able to resolve the issue you can\nmanually remove the finalizer from the resource by editing the resource and\nremoving the finalizer from the ",(0,r.jsx)(n.code,{children:".metadata.finalizers"}),". Kratix will then\ncontinue to delete and work its way through the remaining finalizers."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/delete-workflows"})," finalizer is not being removed, check to\nsee whether the delete Workflow is failing and fix any issues preventing it from\ncompleting."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get pods --selector kratix.io/resource-name=<resource-request>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once the issue is fixed, you can trigger the delete Workflow to re-run by triggering a\n",(0,r.jsx)(n.a,{href:"/main/learn-more/controlling-with-labels",children:"manual reconciliation"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/work-cleanup"})," finalizer is not being removed, check to see\nwhether the ",(0,r.jsx)(n.code,{children:"Work"}),"/",(0,r.jsx)(n.code,{children:"WorkPlacement"})," resources are failing to be deleted"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get work --selector kratix.io/resource-name=<resource-request>\nkubectl get workplacement --selector kratix.io/work=<work-name>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/workflows-cleanup"})," finalizer is not being removed, check to\nsee if the Workflows are failing to be deleted"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get jobs --selector kratix.io/resource-name=<resource-request>\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"promise-is-not-being-deleted",children:"Promise is not being deleted"}),"\n",(0,r.jsxs)(n.p,{children:["When a Promise is deleted, Kratix will run any delete pipelines associated and\ncleanup any documents that were created, as well as any resource requests.\nKratix uses a Kubernetes concept called\n",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/",children:"finalizers"}),"\nto ensure that all cleanup is done before the Promise is deleted\ncompletely from the system. While a Promise is being deleted you will see the\nresource in a deletion state by the presence of a ",(0,r.jsx)(n.code,{children:".metadata.deletionTimestamp"}),"\nfield on the resource."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Check the Promise is in a deletion state","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get promise <promise-name> -o jsonpath='{.metadata.deletionTimestamp}'\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["When deleting Kratix completes six actions as part of cleanup in order, once an\naction has completed it no longer appears in the ",(0,r.jsx)(n.code,{children:".metadata.finalizer"}),"\nfield. The cleanup steps Kratix completes are:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'kratix.io/"delete-workflows"'})," for running the delete pipelines associated\nwith the Promise (if any)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/workflows-cleanup"})," for cleaning up the Workflows created by the\nPromise"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/resource-request-cleanup"})," for cleaning up the resource requests\ncreated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/dynamic-controller-dependant-resources-cleanup"})," for cleaning up\nKubernetes resources created to manage the Promise"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/dependencies-cleanup"})," for cleaning up the dependencies created by\nthe Promise"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kratix.io/api-crd-cleanup"})," for cleaning up the CRDs created by the Promise"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Kratix completes these actions in order, so if a resource request is stuck in\ndeletion it is likely that one of the finalizers is not being removed correctly."}),"\n",(0,r.jsx)(n.p,{children:"Check which finalizers are remaining"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get <resource-kind> <resource-request> -o jsonpath='{.metadata.finalizers}'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Check what finalizer is failing (as they run in order only one will be failing)\nand try to resolve the issue. If you are able to resolve the issue you can\nmanually remove the finalizer from the resource by editing the resource and\nremoving the finalizer from the ",(0,r.jsx)(n.code,{children:".metadata.finalizers"}),". Kratix will then\ncontinue to delete and work its way through the remaining finalizers."]}),"\n",(0,r.jsx)(n.p,{children:"When investigating a Promise deletion issue it beneficial to have the logs of the\nKratix operator open to see if any errors are being logged"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'kubectl -n kratix-platform-system logs <pod-name> -c manager | grep "controllers\\.promise"\n'})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/delete-workflows"})," finalizer is not being removed, check to\nsee whether the delete Workflow is failing and fix any issues preventing it from\ncompleting."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system get pods --selector kratix.io/promise-name=<promise-name> --selector kratix.io/work-action=delete\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once the issue is fixed, you can trigger the delete Workflow to re-run by triggering a\n",(0,r.jsx)(n.a,{href:"/main/learn-more/controlling-with-labels",children:"manual reconciliation"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/workflows-cleanup"})," finalizer is not being removed, check to\nsee whether the Workflows are failing to be deleted and manually cleanup any that\nare."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system get jobs --selector kratix.io/promise-name=<promise-name>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/resource-request-cleanup"})," finalizer is not being removed,\ncheck to see if the resource requests are failing to be deleted and ",(0,r.jsx)(n.a,{href:"#resource-request-is-not-being-deleted",children:"resource\nrequests are not delete"})," for how to\ntroubleshoot a resource request deletion failing"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get <resource-kind> -A\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/dynamic-controller-dependant-resources-cleanup"})," finalizer\nis not being removed, check to see if any Kubernetes resources are failing to\nbe deleted and try to manually clean up any remaining."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get configmaps,roles,rolebindings,clusterroles,clusterrolebindings -A --selector kratix.io/promise-name=<promise-name>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"kratix.io/api-crd-cleanup"})," finalizer is not being removed, check to\nsee whether the CRD is failing to be deleted and try to manually delete it."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get crd --selector kratix.io/promise-name=<promise-name>\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"workflow-pod-isnt-appearing",children:"Workflow Pod isn't appearing"}),"\n",(0,r.jsx)(n.p,{children:"When a Workflow is scheduled, Kratix will create a pod to run the Workflow. If\nthe specification for the Workflow is invalid, Kratix will fail to create the\nPod. Check the logs of the Kratix operator to see if there are any errors and\nfix the relating issues in the Workflow."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl -n kratix-platform-system logs <pod-name> -c manager | grep <promise/resource name>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"workflow-pod-stuck-in-crashloopbackoff",children:"Workflow Pod stuck in CrashLoopBackOff"}),"\n",(0,r.jsxs)(n.p,{children:["When a Workflow is scheduled, Kratix will create a pod to run the Workflow. If\nthe Pod fails Kubernetes will restart the pod. If the pod is failing multiple\ntimes the pod will eventually go into ",(0,r.jsx)(n.code,{children:"CrashLoopBackoff"}),". In this scenario\nKratix will not try to reschedule the pod. You can force Kratix to reschedule a\nnew pod by triggering a ",(0,r.jsx)(n.a,{href:"/main/learn-more/controlling-with-labels",children:"manual\nreconciliation"})]}),"\n",(0,r.jsx)(n.h3,{id:"workflow-pod-doesnt-have-kubernetes-api-access",children:"Workflow Pod doesn't have Kubernetes API access"}),"\n",(0,r.jsxs)(n.p,{children:["A Workflow is, by default, given limited access to the Kubernetes API. You will\nsee errors in the logs of the Workflow if it is trying to access the API without\nthe correct permissions. To give the Workflow more access you need to create\nadditional\n",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/",children:"RBAC permissions"}),". ",(0,r.jsx)(n.a,{href:"/main/reference/workflows#rbac",children:"Check the\ndocumentation"})," for how you can configure permissions for Workflows\nalongside some examples."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);