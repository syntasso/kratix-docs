"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[3936],{370:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"main/reference/promises/releases","title":"Versioning","description":"Documentation for the Promise Release","source":"@site/docs/main/03-reference/11-promises/05-releases.md","sourceDirName":"main/03-reference/11-promises","slug":"/main/reference/promises/releases","permalink":"/main/reference/promises/releases","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/03-reference/11-promises/05-releases.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"description":"Documentation for the Promise Release","title":"Versioning","sidebar_label":"Versioning","id":"releases"},"sidebar":"mainSidebar","previous":{"title":"Deleting","permalink":"/main/reference/promises/delete"},"next":{"title":"Workflows","permalink":"/main/reference/promises/workflows"}}');var r=n(4848),t=n(8453);const o={description:"Documentation for the Promise Release",title:"Versioning",sidebar_label:"Versioning",id:"releases"},a=void 0,l={},c=[{value:"Promise Release",id:"promise-release",level:2},{value:"Source Reference types",id:"source-reference-types",level:2},{value:"HTTP",id:"http",level:3},{value:"Authenticated endpoints",id:"authenticated-endpoints",level:4},{value:"Updating Promise Releases",id:"updating-promise-releases",level:2},{value:"Deleting Promise Releases",id:"deleting-promise-releases",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Platform engineers can version their Promise by adding the following label to\ntheir Promise definition:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:"apiVersion: platform.kratix.io/v1alpha1\nkind: Promise\nmetadata:\n  name: jenkins\n  labels:\n#highlight-next-line\n    kratix.io/promise-version: v1.1.0\nspec:\n  # Promise spec\n"})}),"\n",(0,r.jsx)(s.p,{children:"A Promise version is an arbitrary number that represents a specific version of a\nPromise. Kratix will, through Promise Releases, ensure the Promise at the\nspecified version is installed in the Platform."}),"\n",(0,r.jsx)(s.h2,{id:"promise-release",children:"Promise Release"}),"\n",(0,r.jsx)(s.p,{children:"A Promise Release represents a Promise with a specific version that will be installed in\nthe Platform. Kratix knows how to fetch the Promise from the specified source and will\nmanage the lifecycle of that Promise."}),"\n",(0,r.jsx)(s.p,{children:"The API for a Promise Release is:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:"apiVersion: platform.kratix.io/v1alpha1\nkind: PromiseRelease\nmetadata:\n  name: jenkins-release\nspec:\n  version: # The version of the Promise found at the sourceRef\n  sourceRef:\n    type: # Source type: http, git, etc.\n    # Source specific fields\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"spec.version"})," represents the version of the Promise that can be found at\nthe ",(0,r.jsx)(s.code,{children:"sourceRef"}),". If the Promise version label and the Promise Release\n",(0,r.jsx)(s.code,{children:"spec.version"})," do not match, Kratix will not install the Promise."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"spec.version"})," can be left blank. In this case, Kratix will set the Promise\nRelease ",(0,r.jsx)(s.code,{children:"spec.version"})," to the version of the Promise found at the ",(0,r.jsx)(s.code,{children:"sourceRef"})," at\nthe first reconciliation loop."]}),"\n",(0,r.jsx)(s.h2,{id:"source-reference-types",children:"Source Reference types"}),"\n",(0,r.jsxs)(s.p,{children:["Currently, the following ",(0,r.jsx)(s.code,{children:"sourceRef.types"})," are supported:"]}),"\n",(0,r.jsx)(s.h3,{id:"http",children:"HTTP"}),"\n",(0,r.jsxs)(s.p,{children:["The HTTP ",(0,r.jsx)(s.code,{children:"sourceRef.type"})," is used to fetch a Promise from a HTTP endpoint. The\n",(0,r.jsx)(s.code,{children:"sourceRef.url"})," must be set to a valid URL containing a single Promise definition."]}),"\n",(0,r.jsxs)(s.p,{children:["The below example shows a Promise Release using the HTTP ",(0,r.jsx)(s.code,{children:"sourceRef.type"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:"apiVersion: platform.kratix.io/v1alpha1\nkind: PromiseRelease\nmetadata:\n  name: jenkins-release\nspec:\n  version: v1.1.0\n  sourceRef:\n    type: http\n    url: https://raw.githubusercontent.com/syntasso/kratix-marketplace/main/jenkins/promise.yam\n    # secretRef: # OPTIONAL\n      # name: secret-name\n      # namespace: example-namespace\n"})}),"\n",(0,r.jsx)(s.h4,{id:"authenticated-endpoints",children:"Authenticated endpoints"}),"\n",(0,r.jsxs)(s.p,{children:["When fetching a URL, authorization can be provided via the ",(0,r.jsx)(s.code,{children:"Authorization"})," header.\nTo provide this to Kratix, add the optional ",(0,r.jsx)(s.code,{children:"secretRef"})," field to the ",(0,r.jsx)(s.code,{children:"sourceRef"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["The secret must contain a key called ",(0,r.jsx)(s.code,{children:"authorizationHeader"})," which is set to the full\nvalue of the ",(0,r.jsx)(s.code,{children:"Authorization"})," header. For example, to curl from a private GitHub\nrepository you could run:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"curl -H 'Authorization: Bearer my-bearer-token-for-gh' https://raw.githubusercontent.com/secret-org/secret-repo/refs/heads/main/promise.yaml\n"})}),"\n",(0,r.jsxs)(s.p,{children:["To enable the PromiseRelease to access the same URL, you must have the following\nkey",":value"," in your secret:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:'authorizationHeader: "Bearer my-bearer-token-for-gh"\n'})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["This header value needs to be a simple string. If you are creating the secret manually,\nmake sure not to include any new lines in your base64 encoded value. You can do this\nby including ",(0,r.jsx)(s.code,{children:"-n"})," in any echo command (e.g. ",(0,r.jsx)(s.code,{children:'echo -n "Bearer my-bearer-token-for-gh" | base64'}),")"]})}),"\n",(0,r.jsx)(s.h2,{id:"updating-promise-releases",children:"Updating Promise Releases"}),"\n",(0,r.jsxs)(s.p,{children:["Whenever the ",(0,r.jsx)(s.code,{children:"spec.version"})," of a Promise Release changes, Kratix will\nautomatically fetch the latest Promise definition from the ",(0,r.jsx)(s.code,{children:"sourceRef"})," and\nupdate it in the Platform, as long as the Promise version label matches the\nPromise Release version."]}),"\n",(0,r.jsxs)(s.p,{children:["Note that updating the Promise version in the remote location will not\nautomatically update the Promise in the Platform. The Promise Release\n",(0,r.jsx)(s.code,{children:"spec.version"})," must be updated to trigger the Promise update."]}),"\n",(0,r.jsx)(s.p,{children:"If the Promise is deleted from Platform, but the Promise Release still exists, Kratix\nwill automatically re-install the Promise."}),"\n",(0,r.jsx)(s.h2,{id:"deleting-promise-releases",children:"Deleting Promise Releases"}),"\n",(0,r.jsxs)(s.p,{children:["When a Promise Release is deleted, the underlying Promise is also deleted. This will\ndelete all resources associated with that Promise. See ",(0,r.jsx)(s.a,{href:"../promises/delete",children:"Deleting a Promise"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);