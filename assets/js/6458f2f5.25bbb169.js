"use strict";(self.webpackChunkkratix_docs=self.webpackChunkkratix_docs||[]).push([[113],{15723:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"main/reference/resources/updates","title":"Updates","description":"Documentation on how updates behave for Resources","source":"@site/docs/main/03-reference/15-resources/05-updates.md","sourceDirName":"main/03-reference/15-resources","slug":"/main/reference/resources/updates","permalink":"/main/reference/resources/updates","draft":false,"unlisted":false,"editUrl":"https://github.com/syntasso/kratix-docs/tree/main/docs/main/03-reference/15-resources/05-updates.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Updates","sidebar_label":"Updates","description":"Documentation on how updates behave for Resources"},"sidebar":"mainSidebar","previous":{"title":"Status","permalink":"/main/reference/resources/status"},"next":{"title":"Health Records","permalink":"/main/reference/healthrecord"}}');var r=s(74848),o=s(28453);const i={title:"Updates",sidebar_label:"Updates",description:"Documentation on how updates behave for Resources"},a="Updates",c={},d=[{value:"Workflows",id:"workflows",level:2},{value:"Scheduling",id:"scheduling",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"updates",children:"Updates"})}),"\n",(0,r.jsx)(t.p,{children:"Kratix supports updating Resource Requests with new specifications."}),"\n",(0,r.jsxs)(t.p,{children:["Given that the Resource workflows are defined within the parent Promise, updates to a\nResource Request are limited to updating the request parameters in the ",(0,r.jsx)(t.code,{children:"spec"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"workflows",children:"Workflows"}),"\n",(0,r.jsxs)(t.p,{children:["Any update to the Resource will result in Kratix re-running the\n",(0,r.jsx)(t.a,{href:"./workflows#configure-workflows",children:"Resource Configure"})," workflow."]}),"\n",(0,r.jsxs)(t.p,{children:["Any files which are output by this workflow will replace all existing files associated\nwith this Resource in the ",(0,r.jsx)(t.a,{href:"../statestore/intro",children:"StateStore"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"scheduling",children:"Scheduling"}),"\n",(0,r.jsxs)(t.p,{children:["If an update to a Resource changes its scheduling, the change will be ",(0,r.jsx)(t.strong,{children:"ignored"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"The Destination selected at the first the Workflow run is always used. To move a Resource\nfrom one Destination to another, you can delete and create it again."}),"\n",(0,r.jsxs)(t.p,{children:["See ",(0,r.jsx)(t.a,{href:"../destinations/multidestination-management#resources",children:"Managing Multiple Destinations"})," for\nmore details on scheduling."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>a});var n=s(96540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);