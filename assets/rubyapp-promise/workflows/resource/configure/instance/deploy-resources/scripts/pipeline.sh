#!/usr/bin/env sh

app_name="$(yq eval '.metadata.name' /kratix/input/object.yaml)"
namespace="$(yq '.metadata.namespace' /kratix/input/object.yaml)"

# The image to deploy
app_image="$(yq '.spec.image' /kratix/input/object.yaml)"

# The database driver; defaults to empty string
database_driver="$(yq '.spec.database.driver // ""' /kratix/input/object.yaml)"

# The cache driver; defaults to empty string
cache_driver="$(yq '.spec.cache.driver // ""' /kratix/input/object.yaml)"

# Output the runtime request: we always want to deploy the app
yq ".metadata.name = \"${app_name}\" | .spec.image = \"${app_image}\"" resources/runtime-request-template.yaml > /kratix/output/runtime-request.yaml

# Output the database request if the databaseDriver is set to postgresql
if [ "$database_driver" = "postgresql" ]; then
  yq ".metadata.name = \"${app_name}-db\" | .spec.teamId = \"${app_name}\"" resources/postgres-request-template.yaml > /kratix/output/postgres-request.yaml

  # name of the secret generated by the postgres promise
  secret_ref="${app_name}.${app_name}-${app_name}-db-postgresql.credentials.postgresql.acid.zalan.do"

  # Inject PostgreSQL environment variables directly into runtime-request.yaml
  cat <<EOF >> /kratix/output/runtime-request.yaml
    - name: PGHOST
      value: ${app_name}-${app_name}-db-postgresql.default.svc.cluster.local
    - name: DBNAME
      value: bestdb
    - name: PGUSER
      valueFrom:
        secretKeyRef:
          name: ${secret_ref}
          key: username
    - name: PGPASSWORD
      valueFrom:
        secretKeyRef:
          name: ${secret_ref}
          key: password
EOF
fi

# Output the redis request if the cacheDriver is set to redis
if [ "$cache_driver" = "redis" ]; then
  yq '.metadata.name = "'${app_name}'-cache"' resources/redis-request-template.yaml > /kratix/output/redis-request.yaml

  # Inject Redis environment variables directly into runtime-request.yaml
  cat <<EOF >> /kratix/output/runtime-request.yaml
    - name: REDIS_URL
      value: "redis://rfs-${app_name}-cache:26379/1"
    - name: REDIS_POOL_SIZE
      value: "5"
EOF
fi
