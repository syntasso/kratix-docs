<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://docs.kratix.io/blog</id>
    <title>Kratix Blog</title>
    <updated>2024-11-20T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://docs.kratix.io/blog"/>
    <subtitle>Kratix Blog</subtitle>
    <icon>https://docs.kratix.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[How your Resources get from Promise to Destination]]></title>
        <id>https://docs.kratix.io/blog/from-platform-to-destination</id>
        <link href="https://docs.kratix.io/blog/from-platform-to-destination"/>
        <updated>2024-11-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The journey of a document from the Platform Cluster to a Destination]]></summary>
        <content type="html"><![CDATA[<p>Ever wondered how Kratix actually gets your documents from the Platform Cluster
to the correct Destination?</p>
<p>The Kratix Team has recently introduced a
<a href="https://github.com/syntasso/kratix/pull/243" target="_blank" rel="noopener noreferrer">change</a> to
Kratix to reduce the size of the Work object. While this change is mostly
internal, we wanted to share how the innards of Kratix work.</p>
<p>So brace yourself to learn:</p>
<ul>
<li>how Kratix moves documents from Platform to Destinations</li>
<li>what works and workplacements are</li>
<li>how to inspect works to debug your Promises</li>
</ul>
<p>You are probably already familiar with how Kratix works at a high level and with
the diagram below:</p>
<figure class="diagram"><img class="large" src="https://docs.kratix.io/assets/images/figure01-92cbe3bb6fd370c414771a72acf70c3c.png" alt="High level diagram explaining how
Kratix processes requests"><figcaption>How Kratix processes a request to a Kubernetes Destination</figcaption></figure>
<p>As illustrated above:</p>
<ol>
<li>The user sends a new <strong>App Request</strong> to the Platform Cluster.</li>
<li>The <strong>Promise</strong> reacts to that request and triggers the <strong>Resource Configure
Workflows</strong>.</li>
<li>The Workflow completes and outputs a <strong>series of documents</strong> to be scheduled
to a <strong>Destination</strong>.</li>
<li>These documents are written to a specific directory in the <strong>State Store</strong>.</li>
<li>In the diagram, the documents are scheduled to a Kubernetes <strong>Destination</strong>.
These type of Destination usually have Flux (or ArgoCD, or another GitOps
tool) watching the State Store. The tool picks up the new documents.</li>
<li>The documents are then processed and applied to the Destination.</li>
<li>The <strong>App</strong> becomes operational on the Destination.</li>
</ol>
<p>In this post, I'm going to expand on points (3) and (4): what happens at the end
of the Workflow? How is the document written to the State Store? And how does
the change linked above affect this process?</p>
<hr>
<!-- -->
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>If the diagram is new to you, I recommend checking out the <a href="http://localhost:3000/workshop/part-i/intro" target="_blank" rel="noopener noreferrer">Part I of the
Kratix Workshop</a> for an overview of
Kratix.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-dive-into-kratix-internals">A Dive into Kratix Internals<a class="hash-link" aria-label="Direct link to A Dive into Kratix Internals" title="Direct link to A Dive into Kratix Internals" href="https://docs.kratix.io/blog/from-platform-to-destination#a-dive-into-kratix-internals">​</a></h2>
<p>The casual observers among you may have noticed that, when installing Kratix, a
couple of CRDs are also created but not prominently mentioned in the guides
or workshops: the <strong>Work</strong> and the <strong>WorkPlacement</strong>.</p>
<p>The <strong>Work</strong> CRD contains the definition of, well, a Work. All the documents
output by a workflow are captured in the Work Object as <strong>workloads</strong>. Each
document corresponds to a workload entry in the Work object. These workloads are
grouped by the <strong>destination selectors</strong> specified by both the Workflow and the
Promise.</p>
<p>In other words, the Work object encapsulates everything needed to schedule the
workloads to the Destinations.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>How does the Work gets created?</div><div class="admonitionContent_BuS1"><p>Keen observers may have notice the few extra containers that are included in the
Workflow Job. One of these containers is called <code>work-writer</code>. As the name
suggests, it handles creating the Work object at the end of the Workflow. 😉</p></div></div>
<p>One of the controllers bundled with Kratix is the <strong>Work Controller</strong>. This
controller is responsible for finding out all the available Destinations and
selecting the right one for each workload in a Work. It achieves this by
monitoring Work objects and creating a <strong>WorkPlacement</strong> object for each
workload.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>What if there's no Destination to schedule a workload?</div><div class="admonitionContent_BuS1"><p>The Work Controller marks the Work as <strong>Unscheduled</strong>. You can verify this by
checking the <code>Scheduled</code> condition in the <code>status</code> field of the Work Object.</p><p>Once a Destination becomes available, the system will automatically try to
schedule any unscheduled Work.</p></div></div>
<p>The <strong>WorkPlacement</strong> object serves as a link between a Work (or specifically, a
workload group within the Work) and a Destination. It contains a copy of the
Workloads and information about the Destination it is scheduled to.</p>
<p>The WorkPlacement controller reacts to WorkPlacements and ensures the workloads
are written to the State Store associated with the Destination.</p>
<p>The diagram below illustrates the Work and WorkPlacement objects in details:</p>
<figure class="diagram"><img class="large" src="https://docs.kratix.io/assets/images/figure02-e8156b88651cd0ac3bec1b7d33b0ebc4.png" alt="A Work with two workloads, from
which two WorkPlacements are generated"><figcaption>A Work generating two WorkPlacements</figcaption></figure>
<p>In summary:</p>
<ul>
<li>The contents of a Workflow output are combined into a single Work object. Each
document has an associated <code>workload</code> entry in the Work.</li>
<li>Workloads are grouped by the destination selectors specified by the Workflow
and the Promise.</li>
<li>From the Work object, a WorkPlacement is created for each Workload group.</li>
<li>The WorkPlacement controller writes the Workloads to the State Store
associated with the Destination.</li>
<li>🎉</li>
</ul>
<p>That means the Work object can get quite large, since it's combining all the
documents into a single object. But how large is too large?</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reaching-etcd-limits">Reaching etcd limits<a class="hash-link" aria-label="Direct link to Reaching etcd limits" title="Direct link to Reaching etcd limits" href="https://docs.kratix.io/blog/from-platform-to-destination#reaching-etcd-limits">​</a></h2>
<p>The answer is about 1.5MB. While the Kubernetes API accepts up to 3MB of data in
a single request, etcd only persist keys up to 1.5MB (by default). Although this
is configurable, it's fair to assume that most clusters where Kratix is deployed
will use the default settings.</p>
<p>So what happens if a Work object exceeds 1.5MB? The Configure Workflow fails at
the <code>work-writer</code> container, and the error message isn't particularly helpful:</p>
<div class="language-shell-session codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell-session codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token output">etcdserver: request is too large</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>You may see an error message like <code>Request entity too large: limit is 3145728</code>; that means you are hitting the Kubernetes API limit, not the etcd
one.</p></div></div>
<p>While it takes a lot of YAML to be over 1.5MB, you can easily reach such a limit
in your Promise. The <a href="https://github.com/prometheus-operator/prometheus-operator" target="_blank" rel="noopener noreferrer">Prometheus
Operator</a>, for
example, includes 3.7MB of YAML!</p>
<p>This brings us back to the <a href="https://github.com/syntasso/kratix/pull/243" target="_blank" rel="noopener noreferrer">change introduced by
243</a>. In this update, we introduced
gzip compression for the Workload contents before persisting the Work into etcd.
This significantly reduces the size of the Work object (gzip documentation
mentions an average of <a href="https://www.gnu.org/software/gzip/manual/gzip.html" target="_blank" rel="noopener noreferrer">70% reduction in
size</a>). For the Prometheus
Operator, for example, the size of the Work object went from 3.7MB to about
490KB—an 87% reduction 🎉!</p>
<p>The downside? If you inspect the Work object, you’ll see base64-encoded binary
data instead of some nice to read YAML.</p>
<figure class="diagram"><img class="large" src="https://docs.kratix.io/assets/images/figure03-920c2f30b0883bc82d0dc0c63992fe44.png" alt="Screenshot of a terminal showing
the Work object with binary data in the contents of a Workload"><figcaption>A compressed Work Object</figcaption></figure>
<p>You can still read it though. To inspect a workload’s contents, decode the
base64 data, then unzip it using this command:</p>
<div class="language-shell-session codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell-session codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token output">kubectl get work &lt;work-name&gt; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token output">  -o jsonpath='{.spec.workloadGroups[0].workloads[0].content}' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token output">  | base64 -d \</span><br></span><span class="token-line" style="color:#393A34"><span class="token output">  | gzip -d</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure class="diagram"><img class="large" src="https://docs.kratix.io/assets/images/figure04-c7827bda962629f0dea66bca80fc4968.png" alt="Screenshot of a terminal showing
the decompressed contents of a workload from a Work object"><figcaption>A decompressed workload</figcaption></figure>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Check our <a href="https://docs.kratix.io/main/troubleshooting">Troubleshooting guide</a> for more information on
how to debug Kratix, including inspecting Works and WorkPlacements.</p></div></div>
<p>Despite compression, large Work objects may still pose challenges. While this
update provides temporary relief, we’ll need to revisit the structure to allow
users to have unbounded fun with their Promises. But that’s a story for another
day.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" href="https://docs.kratix.io/blog/from-platform-to-destination#conclusion">​</a></h2>
<p>In this post, we dived into the internals of Kratix to understand how a
document moves from the Platform Cluster to a Destination. We saw how the
Work and WorkPlacement objects are used to schedule and write documents to the
State Store. We also saw how the recent change to compress the Workload
contents has helped reduce the size of the Work object.</p>
<p>We hope this post has given you a better understanding of how Kratix works under
the hood. If you have any questions or feedback (or want to see more blog posts
like this) please don't hesitate to reach out to us on
<a href="https://kratixworkspace.slack.com/" target="_blank" rel="noopener noreferrer">Slack</a> or
<a href="https://github.com/syntasso/kratix" target="_blank" rel="noopener noreferrer">GitHub</a>.</p>]]></content>
        <author>
            <name>Derik Evangelista</name>
            <uri>https://github.com/kirederik</uri>
        </author>
        <category label="kratix" term="kratix"/>
        <category label="kratix internals" term="kratix internals"/>
        <category label="debugging" term="debugging"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[September Product Update]]></title>
        <id>https://docs.kratix.io/blog/sept-2024-product-update</id>
        <link href="https://docs.kratix.io/blog/sept-2024-product-update"/>
        <updated>2024-09-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Kratix CLI++, Permissions, and Backstage]]></summary>
        <content type="html"><![CDATA[<p>Hi friends 😊 I'm Cat, Product Manager here at Syntasso, and I've been listening
to you, our avid followers. "Cat, we love Kratix, and we love your team; we want
an update!" I hear you scream, so here I am, delivering this top-quality
content. You're welcome.</p>
<p>Given that this is our first Kratix Product Update™ (not really ™), I wanted to
shout about some of the great work the team has done over the last few months,
so we're going back a bit further than we usually will… Indulge me; it was my
birthday this month.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a class="hash-link" aria-label="Direct link to TL;DR" title="Direct link to TL;DR" href="https://docs.kratix.io/blog/sept-2024-product-update#tldr">​</a></h2>
<p style="width:640px;height:200px"></p>
<p>If you only have 10 seconds spare to read this blog, these are the features you
need to know about:</p>
<ul>
<li>We have two CLIs now! One for building promises and one for installing SKE (Syntasso Kratix Enterprise)</li>
<li>Setting permissions just got a little bit easier</li>
<li>If you like Backstage, you’ll like what we’re up to</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="big-stuff-for-the-fans-of-kratix">Big stuff for the fans of Kratix<a class="hash-link" aria-label="Direct link to Big stuff for the fans of Kratix" title="Direct link to Big stuff for the fans of Kratix" href="https://docs.kratix.io/blog/sept-2024-product-update#big-stuff-for-the-fans-of-kratix">​</a></h2>
<div style="width:640px;height:200px"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kratix-promise-building-cli">Kratix Promise building CLI<a class="hash-link" aria-label="Direct link to Kratix Promise building CLI" title="Direct link to Kratix Promise building CLI" href="https://docs.kratix.io/blog/sept-2024-product-update#kratix-promise-building-cli">​</a></h3>
<p>Like all good tools for developers, we needed a CLI - and one that is more than
just a rat nest of bash scripts*. It's now even easier to quickly whip together
a Promise from scratch, or your existing <strong>operators</strong> and <strong>helm charts</strong>.</p>
<p>It's unbelievably easy to get started. Head over to our kratix-cli repo,
download the latest release and go wild. You can read up on the tool in our docs
as well!</p>
<!-- -->
<p align="center"><span style="width:640px;height:360px"></span></p>
<blockquote>
<p><em>That's sweet!</em></p>
<p>— an actual quote from a customer trying out the new CLI.</p>
</blockquote>
<p>*no offence meant to rats, their nests, or bash scripts that resemble said nests</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ske-operator">SKE Operator<a class="hash-link" aria-label="Direct link to SKE Operator" title="Direct link to SKE Operator" href="https://docs.kratix.io/blog/sept-2024-product-update#ske-operator">​</a></h3>
<p>Our enterprise product, <a href="https://www.syntasso.io/pricing" target="_blank" rel="noopener noreferrer">Syntasso Kratix Enterprise
(SKE)</a>, comes with a bunch of cool features
that makes it mega easy to get started, including integrations with Backstage,
Terraform Enterprise and now, super speedy installation via our <a href="https://docs.kratix.io/ske/kratix/helm-installation" target="_blank" rel="noopener noreferrer">helm
chart</a> and the
<a href="https://docs.kratix.io/ske/kratix/ske-cli-installation" target="_blank" rel="noopener noreferrer">ske-cli</a>.</p>
<p>This will pull in some really cool stuff - it can help manage  upgrading Kratix,
check if those upgrades worked, and help you with rollbacks.</p>
<p>If you want to try it out, ping us an email at <a href="mailto:kratix@syntasso.io" target="_blank" rel="noopener noreferrer">kratix@syntasso.io</a>, and we’ll
hook you up 😎</p>
<!-- -->
<span style="width:640px;height:360px"></span>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="neat-stuff-because-security-should-not-be-yolo">Neat stuff (because security should not be YOLO!)<a class="hash-link" aria-label="Direct link to Neat stuff (because security should not be YOLO!)" title="Direct link to Neat stuff (because security should not be YOLO!)" href="https://docs.kratix.io/blog/sept-2024-product-update#neat-stuff-because-security-should-not-be-yolo">​</a></h2>
<div style="width:640px;height:200px"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="security-uplift">Security uplift<a class="hash-link" aria-label="Direct link to Security uplift" title="Direct link to Security uplift" href="https://docs.kratix.io/blog/sept-2024-product-update#security-uplift">​</a></h3>
<p>So security is hard. We’ve made this a little bit easier in two ways.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="rbac-permissions-for-your-pipelines">RBAC permissions for your pipelines<a class="hash-link" aria-label="Direct link to RBAC permissions for your pipelines" title="Direct link to RBAC permissions for your pipelines" href="https://docs.kratix.io/blog/sept-2024-product-update#rbac-permissions-for-your-pipelines">​</a></h4>
<p>You can set the RBAC permissions you want all your pipelines to have in the promise spec. There are a few ways you can do this depending on your use of service accounts and namespaces, so check out our docs.</p>
<p>This will give you as the promise writer more control of the permissions of your pipelines without having to manually set things up after applying a promise.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">platform</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> platform.kratix.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Promise</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">workflows</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">resource</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">configure</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> platform.kratix.io/v1alpha1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pipeline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> slack</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">notify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">rbac</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">permissions</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiGroups</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">verbs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"*"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"secrets"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">apiGroups</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"batch"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">verbs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"get"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"jobs"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">resourceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"my-job"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="security-contexts-for-your-pods">Security Contexts for Your Pods<a class="hash-link" aria-label="Direct link to Security Contexts for Your Pods" title="Direct link to Security Contexts for Your Pods" href="https://docs.kratix.io/blog/sept-2024-product-update#security-contexts-for-your-pods">​</a></h4>
<p>By default, Kratix-owned pods have security contexts set with all the privileges they need. Any containers provided by a Promise author got NOTHING. I didn’t say Kratix was a fair project.</p>
<p>But we have just got a little fairer. You can now set security contexts for your own pods by specifying it in the container spec. Perhaps more excitingly, you can now specify a global default security context in the Kratix ConfigMap in the kratix-platform-system. Fire Configure and forget 🔥</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ConfigMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> kratix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> kratix</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">platform</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">|</span><span class="token scalar string" style="color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">    workflows:</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">      defaultContainerSecurityContext:</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        # Security context fields, e.g.:</span><br></span><span class="token-line" style="color:#393A34"><span class="token scalar string" style="color:#e3116c">        runAsNonRoot: false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><em>I think it is much better</em> 👍</p>
<p>— Another actual customer quote.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-control-over-backstage-with-kratix">More control over Backstage (with Kratix)<a class="hash-link" aria-label="Direct link to More control over Backstage (with Kratix)" title="Direct link to More control over Backstage (with Kratix)" href="https://docs.kratix.io/blog/sept-2024-product-update#more-control-over-backstage-with-kratix">​</a></h2>
<p>If you know anything about Syntasso, it's that we love Backstage. We even did a
webinar with one of their product managers, the insightful Seve Kim.</p>
<p>We believe Kratix and Backstage work so beautifully together that our SKE
offering comes bundled with plugins that make managing Promises and Resources
from Backstage a joyful experience. This month, we've given users even more
control in two ways.</p>
<p>Promise authors can now provide an "info" field as part of the Promise spec that
will show up on your component page. This field supports markdown and has far
too much space to let your users know whatever will make their day a little
easier.</p>
<p>We have also made the first page of requesting a resource more configurable - we
know not every end user will understand what their "namespace" should be (even
though it is very important for knowing where we should put that resource!!) so
you can configure that to whatever makes sense for your team. You can even go
full abstraction and get rid of it entirely and pre-populate it with whatever
you want. The sky's the limit.</p>
<!-- -->
<figure class="diagram"><img class="large" src="https://docs.kratix.io/assets/images/backstage-fe59b23f4aadbd35148377a85ffb7d47.webp" alt="Screenshot of a Kratix Backstage entity"><figcaption>Backstage and Kratix: Best of friends</figcaption></figure>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="useful-kratix-resources">Useful Kratix resources<a class="hash-link" aria-label="Direct link to Useful Kratix resources" title="Direct link to Useful Kratix resources" href="https://docs.kratix.io/blog/sept-2024-product-update#useful-kratix-resources">​</a></h2>
<p>You should find the following resources helpful for your Kratix exploration:</p>
<ul>
<li><a href="https://github.com/syntasso/kratix" target="_blank" rel="noopener noreferrer">Kratix Github</a></li>
<li><a href="https://www.syntasso.io/" target="_blank" rel="noopener noreferrer">Syntasso Kratix Enterprise homepage</a></li>
</ul>
<p>Shout out to the team at Port (<a href="http://getport.io/" target="_blank" rel="noopener noreferrer">getport.io</a>) and Traefik
(<a href="http://traefik.io/" target="_blank" rel="noopener noreferrer">traefik.io</a>) for their awesome product update blogs, which
served as inspiration for this post.</p>]]></content>
        <author>
            <name>Cat Morris</name>
            <uri>https://github.com/catmo-syntasso</uri>
        </author>
        <category label="kratix" term="kratix"/>
        <category label="product update" term="product update"/>
        <category label="backstage" term="backstage"/>
    </entry>
</feed>